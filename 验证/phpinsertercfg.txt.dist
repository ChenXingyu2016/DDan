<?xml version="1.0" encoding="UTF-8"?>
<!--

CSE HTML Validator Standard/Professional/Lite PHP Inserter Configuration by AI Internet Solutions (http://www.htmlvalidator.com/)

Updated: July 19, 2011 - improved XML compatibility
Updated: November 12, 2010 (Major update)

IMPORTANT! If you modify or customize this file, then make a backup because it may be overwritten the next time you install or reinstall HTML Validator. If you want to customize this configuration file, then consider customizing the User Inserter instead, which is unlikely to be overwritten when updating or reinstalling.

For detailed documentation about this file, see the "Text Inserters" topic in help.

-->

<csetaginserterconfiguration version="1">
<tag menu='PHP' inserttext='"|"' hint='Enclose text in double quotes.' flags='2'/>
<tag menu='PHP' inserttext="'|'" hint='Enclose text in single quotes.' flags='2'/>
<tag menu='PHP' inserttext='(|)' hint='Enclose text in parenthesis.' flags='2'/>
<tag menu='PHP' inserttext='[|]' hint='Enclose text in square brackets.' flags='2'/>
<tag menu='PHP' flags='4'/>
<tag menu='PHP' caption='Edit Configuration' hint='Edit the configuration file to make your own additions and changes to the PHP Inserter.' command='1' flags='0' image='21'/>
<tag menu='PHP' caption='Reload Configuration' hint='Delete the PHP Inserter and recreate it to reread its configuration.' command='2' flags='0'/>
<tag menu='PHP' flags='4'/>
<tag menu='PHP' caption='Close PHP Inserter' flags='8' image='1'/>

<!-- BEGIN MAIN CONTENT -->
<!-- BEGIN MAIN CONTENT -->

<tag menu='A' submenu='Aliases and deprecated Mysqli' inserttext='mysqli_bind_param(|)' hint='(PHP 5) Alias for mysqli_stmt_bind_param().' flags='130'/>
<tag menu='A' submenu='Aliases and deprecated Mysqli' inserttext='mysqli_bind_result(|)' hint='(PHP 5) Alias for mysqli_stmt_bind_result().' flags='130'/>
<tag menu='A' submenu='Aliases and deprecated Mysqli' inserttext='mysqli_client_encoding(|)' hint='(PHP 5) Alias of mysqli_character_set_name().' flags='130'/>
<tag menu='A' submenu='Aliases and deprecated Mysqli' inserttext='mysqli_connect(|)' hint='(PHP 5) Alias of mysqli::__construct().' flags='130'/>
<tag menu='A' submenu='Aliases and deprecated Mysqli' inserttext='mysqli_disable_reads_from_master(|)' hint='(PHP 5) void mysqli::disable_reads_from_master(void) - Disable reads from master.' flags='130'/>
<tag menu='A' submenu='Aliases and deprecated Mysqli' inserttext='mysqli_disable_rpl_parse(|)' hint='(PHP 5) bool mysqli_disable_rpl_parse(mysqli $link) - Disable RPL parse.' flags='130'/>
<tag menu='A' submenu='Aliases and deprecated Mysqli' inserttext='mysqli_enable_reads_from_master(|)' hint='(PHP 5) bool mysqli_enable_reads_from_master(mysqli $link) - Enable reads from master.' flags='130'/>
<tag menu='A' submenu='Aliases and deprecated Mysqli' inserttext='mysqli_enable_rpl_parse(|)' hint='(PHP 5) bool mysqli_enable_rpl_parse(mysqli $link) - Enable RPL parse.' flags='130'/>
<tag menu='A' submenu='Aliases and deprecated Mysqli' inserttext='mysqli_escape_string(|)' hint='(PHP 5) Alias of mysqli_real_escape_string().' flags='130'/>
<tag menu='A' submenu='Aliases and deprecated Mysqli' inserttext='mysqli_execute(|)' hint='(PHP 5) Alias for mysqli_stmt_execute().' flags='130'/>
<tag menu='A' submenu='Aliases and deprecated Mysqli' inserttext='mysqli_fetch(|)' hint='(PHP 5) Alias for mysqli_stmt_fetch().' flags='130'/>
<tag menu='A' submenu='Aliases and deprecated Mysqli' inserttext='mysqli_get_cache_stats()' hint='(PHP 5>=5.3.0) array mysqli_get_cache_stats(void) - Returns client Zval cache statistics.' flags='130'/>
<tag menu='A' submenu='Aliases and deprecated Mysqli' inserttext='mysqli_get_client_stats()' hint='(PHP 5>=5.3.0) array mysqli_get_client_stats(void) - Returns client per-process statistics.' flags='130'/>
<tag menu='A' submenu='Aliases and deprecated Mysqli' inserttext='mysqli_get_metadata(|)' hint='(PHP 5) Alias for mysqli_stmt_result_metadata().' flags='130'/>
<tag menu='A' submenu='Aliases and deprecated Mysqli' inserttext='mysqli_master_query(|)' hint='(PHP 5) bool mysqli_master_query(mysqli $link, string $query) - Enforce execution of a query on the master in a master/slave setup.' flags='130'/>
<tag menu='A' submenu='Aliases and deprecated Mysqli' inserttext='mysqli_param_count(|)' hint='(PHP 5) Alias for mysqli_stmt_param_count().' flags='130'/>
<tag menu='A' submenu='Aliases and deprecated Mysqli' inserttext='mysqli_report(|)' hint='(PHP 5) bool mysqli_report(int $flags) - Enables or disables internal report functions.' flags='130'/>
<tag menu='A' submenu='Aliases and deprecated Mysqli' inserttext='mysqli_rpl_parse_enabled(|)' hint='(PHP 5) int mysqli_rpl_parse_enabled(mysqli $link) - Check if RPL parse is enabled.' flags='130'/>
<tag menu='A' submenu='Aliases and deprecated Mysqli' inserttext='mysqli_rpl_probe(|)' hint='(PHP 5) bool mysqli_rpl_probe(mysqli $link) - RPL probe.' flags='130'/>
<tag menu='A' submenu='Aliases and deprecated Mysqli' inserttext='mysqli_rpl_query_type(|)' hint='(PHP 5) int mysqli::rpl_query_type(string $query) - Returns RPL query type.' flags='130'/>
<tag menu='A' submenu='Aliases and deprecated Mysqli' inserttext='mysqli_send_long_data(|)' hint='(PHP 5) Alias for mysqli_stmt_send_long_data().' flags='130'/>
<tag menu='A' submenu='Aliases and deprecated Mysqli' inserttext='mysqli_send_query(|)' hint='(PHP 5) bool mysqli::send_query(string $query) - Send the query and return.' flags='130'/>
<tag menu='A' submenu='Aliases and deprecated Mysqli' inserttext='mysqli_set_opt(|)' hint='(PHP 5) Alias of mysqli_options().' flags='130'/>
<tag menu='A' submenu='Aliases and deprecated Mysqli' inserttext='mysqli_slave_query(|)' hint='(PHP 5) bool mysqli_slave_query(mysqli $link, string $query) - Force execution of a query on a slave in a master/slave setup.' flags='130'/>
<tag menu='A' submenu='Apache' inserttext='apache_child_terminate()' hint='(PHP 4>=4.0.5, PHP 5) bool apache_child_terminate(void) - Terminate apache process after this request.' flags='130'/>
<tag menu='A' submenu='Apache' inserttext='apache_get_modules()' hint='(PHP 4>=4.3.2, PHP 5) array apache_get_modules(void) - Get a list of loaded Apache modules.' flags='130'/>
<tag menu='A' submenu='Apache' inserttext='apache_get_version()' hint='(PHP 4>=4.3.2, PHP 5) string apache_get_version(void) - Fetch Apache version.' flags='130'/>
<tag menu='A' submenu='Apache' inserttext='apache_getenv(|)' hint='(PHP 4>=4.3.0, PHP 5) string apache_getenv(string $variable [, bool $walk_to_top]) - Get an Apache subprocess_env variable.' flags='130'/>
<tag menu='A' submenu='Apache' inserttext='apache_lookup_uri(|)' hint='(PHP 4, PHP 5) object apache_lookup_uri(string $filename) - Perform a partial request for the specified URI and return all info about it.' flags='130'/>
<tag menu='A' submenu='Apache' inserttext='apache_note(|)' hint='(PHP 4, PHP 5) string apache_note(string $note_name [, string $note_value]) - Get and set apache request notes.' flags='130'/>
<tag menu='A' submenu='Apache' inserttext='apache_request_headers()' hint='(PHP 4>=4.3.0, PHP 5) array apache_request_headers(void) - Fetch all HTTP request headers.' flags='130'/>
<tag menu='A' submenu='Apache' inserttext='apache_reset_timeout()' hint='(PHP 5>=5.1.0) bool apache_reset_timeout(void) - Reset the Apache write timer.' flags='130'/>
<tag menu='A' submenu='Apache' inserttext='apache_response_headers()' hint='(PHP 4>=4.3.0, PHP 5) array apache_response_headers(void) - Fetch all HTTP response headers.' flags='130'/>
<tag menu='A' submenu='Apache' inserttext='apache_setenv(|)' hint='(PHP 4>=4.2.0, PHP 5) bool apache_setenv(string $variable, string $value [, bool $walk_to_top=false]) - Set an Apache subprocess_env variable.' flags='130'/>
<tag menu='A' submenu='Apache' inserttext='getallheaders()' hint='(PHP 4, PHP 5) array getallheaders(void) - Fetch all HTTP request headers.' flags='130'/>
<tag menu='A' submenu='Apache' inserttext='virtual(|)' hint='(PHP 4, PHP 5) bool virtual(string $filename) - Perform an Apache sub-request.' flags='130'/>
<tag menu='A' submenu='AppendIterator class' inserttext='AppendIterator::__construct()' hint='(PHP 5>=5.1.0) AppendIterator::__construct(void) - Constructs an AppendIterator.' flags='130'/>
<tag menu='A' submenu='AppendIterator class' inserttext='AppendIterator::append(|)' hint='(PHP 5>=5.1.0) public void AppendIterator::append(Iterator $iterator) - Appends an iterator.' flags='130'/>
<tag menu='A' submenu='AppendIterator class' inserttext='AppendIterator::current()' hint='(PHP 5>=5.1.0) public void AppendIterator::current(void) - Gets the current value.' flags='130'/>
<tag menu='A' submenu='AppendIterator class' inserttext='AppendIterator::getArrayIterator()' hint='(PHP 5>=5.1.0) public void AppendIterator::getArrayIterator(void) - The getArrayIterator method.' flags='130'/>
<tag menu='A' submenu='AppendIterator class' inserttext='AppendIterator::getInnerIterator()' hint='(PHP 5>=5.1.0) public void AppendIterator::getInnerIterator(void) - Gets an inner iterator.' flags='130'/>
<tag menu='A' submenu='AppendIterator class' inserttext='AppendIterator::getIteratorIndex()' hint='(PHP 5>=5.1.0) public void AppendIterator::getIteratorIndex(void) - Gets an index of iterators.' flags='130'/>
<tag menu='A' submenu='AppendIterator class' inserttext='AppendIterator::key()' hint='(PHP 5>=5.1.0) public void AppendIterator::key(void) - Gets the current key.' flags='130'/>
<tag menu='A' submenu='AppendIterator class' inserttext='AppendIterator::next()' hint='(PHP 5>=5.1.0) public void AppendIterator::next(void) - Moves to the next element.' flags='130'/>
<tag menu='A' submenu='AppendIterator class' inserttext='AppendIterator::rewind()' hint='(PHP 5>=5.1.0) public void AppendIterator::rewind(void) - Rewinds the Iterator.' flags='130'/>
<tag menu='A' submenu='AppendIterator class' inserttext='AppendIterator::valid()' hint='(PHP 5>=5.1.0) public void AppendIterator::valid(void) - Checks validity of the current element.' flags='130'/>
<tag menu='A' submenu='Array-->>a - array_i' inserttext='array(|)' hint='(PHP 4, PHP 5) array array([mixed $...]) - Create an array.' flags='130'/>
<tag menu='A' submenu='Array-->>a - array_i' inserttext='array_change_key_case(|)' hint='(PHP 4>=4.2.0, PHP 5) array array_change_key_case(array $input [, int $case=CASE_LOWER]) - Changes all keys in an array.' flags='130'/>
<tag menu='A' submenu='Array-->>a - array_i' inserttext='array_chunk(|)' hint='(PHP 4>=4.2.0, PHP 5) array array_chunk(array $input, int $size [, bool $preserve_keys=false]) - Split an array into chunks.' flags='130'/>
<tag menu='A' submenu='Array-->>a - array_i' inserttext='array_combine(|)' hint='(PHP 5) array array_combine(array $keys, array $values) - Creates an array by using one array for keys and another for its values.' flags='130'/>
<tag menu='A' submenu='Array-->>a - array_i' inserttext='array_count_values(|)' hint='(PHP 4, PHP 5) array array_count_values(array $input) - Counts all the values of an array.' flags='130'/>
<tag menu='A' submenu='Array-->>a - array_i' inserttext='array_diff(|)' hint='(PHP 4>=4.0.1, PHP 5) array array_diff(array $array1, array $array2 [, array $ ...]) - Computes the difference of arrays.' flags='130'/>
<tag menu='A' submenu='Array-->>a - array_i' inserttext='array_diff_assoc(|)' hint='(PHP 4>=4.3.0, PHP 5) array array_diff_assoc(array $array1, array $array2 [, array $...]) - Computes the difference of arrays with additional index check.' flags='130'/>
<tag menu='A' submenu='Array-->>a - array_i' inserttext='array_diff_key(|)' hint='(PHP 5>=5.1.0) array array_diff_key(array $array1, array $array2 [, array $...]) - Computes the difference of arrays using keys for comparison.' flags='130'/>
<tag menu='A' submenu='Array-->>a - array_i' inserttext='array_diff_uassoc(|)' hint='(PHP 5) array array_diff_uassoc(array $array1, array $array2 [, array $... ], callback $key_compare_func) - Computes the difference of arrays with additional index check which is performed by a user supplied callback function.' flags='130'/>
<tag menu='A' submenu='Array-->>a - array_i' inserttext='array_diff_ukey(|)' hint='(PHP 5>=5.1.0) array array_diff_ukey(array $array1, array $array2 [, array $ ... ], callback $key_compare_func) - Computes the difference of arrays using a callback function on the keys for comparison.' flags='130'/>
<tag menu='A' submenu='Array-->>a - array_i' inserttext='array_fill(|)' hint='(PHP 4>=4.2.0, PHP 5) array array_fill(int $start_index, int $num, mixed $value) - Fill an array with values.' flags='130'/>
<tag menu='A' submenu='Array-->>a - array_i' inserttext='array_fill_keys(|)' hint='(PHP 5>=5.2.0) array array_fill_keys(array $keys, mixed $value) - Fill an array with values, specifying keys.' flags='130'/>
<tag menu='A' submenu='Array-->>a - array_i' inserttext='array_filter(|)' hint='(PHP 4>=4.0.6, PHP 5) array array_filter(array $input [, callback $callback]) - Filters elements of an array using a callback function.' flags='130'/>
<tag menu='A' submenu='Array-->>a - array_i' inserttext='array_flip(|)' hint='(PHP 4, PHP 5) array array_flip(array $trans) - Exchanges all keys with their associated values in an array.' flags='130'/>
<tag menu='A' submenu='Array-->>a - array_i' inserttext='array_intersect(|)' hint='(PHP 4>=4.0.1, PHP 5) array array_intersect(array $array1, array $array2 [, array $ ...]) - Computes the intersection of arrays.' flags='130'/>
<tag menu='A' submenu='Array-->>a - array_i' inserttext='array_intersect_assoc(|)' hint='(PHP 4>=4.3.0, PHP 5) array array_intersect_assoc(array $array1, array $array2 [, array $ ...]) - Computes the intersection of arrays with additional index check.' flags='130'/>
<tag menu='A' submenu='Array-->>a - array_i' inserttext='array_intersect_key(|)' hint='(PHP 5>=5.1.0) array array_intersect_key(array $array1, array $array2 [, array $ ...]) - Computes the intersection of arrays using keys for comparison.' flags='130'/>
<tag menu='A' submenu='Array-->>a - array_i' inserttext='array_intersect_uassoc(|)' hint='(PHP 5) array array_intersect_uassoc(array $array1, array $array2 [, array $ ... ], callback $key_compare_func) - Computes the intersection of arrays with additional index check, compares indexes by a callback function.' flags='130'/>
<tag menu='A' submenu='Array-->>a - array_i' inserttext='array_intersect_ukey(|)' hint='(PHP 5>=5.1.0) array array_intersect_ukey(array $array1, array $array2 [, array $... ], callback $key_compare_func) - Computes the intersection of arrays using a callback function on the keys for comparison.' flags='130'/>
<tag menu='A' submenu='Array-->>array_k - array_sp' inserttext='array_key_exists(|)' hint='(PHP 4>=4.0.7, PHP 5) bool array_key_exists(mixed $key, array $search) - Checks if the given key or index exists in the array.' flags='130'/>
<tag menu='A' submenu='Array-->>array_k - array_sp' inserttext='array_keys(|)' hint='(PHP 4, PHP 5) array array_keys(array $input [, mixed $search_value [, bool $strict=false ]]) - Return all the keys or a subset of the keys of an array.' flags='130'/>
<tag menu='A' submenu='Array-->>array_k - array_sp' inserttext='array_map(|)' hint='(PHP 4>=4.0.6, PHP 5) array array_map(callback $callback, array $arr1 [, array $...]) - Applies the callback to the elements of the given arrays.' flags='130'/>
<tag menu='A' submenu='Array-->>array_k - array_sp' inserttext='array_merge(|)' hint='(PHP 4, PHP 5) array array_merge(array $array1 [, array $array2 [, array $... ]]) - Merge one or more arrays.' flags='130'/>
<tag menu='A' submenu='Array-->>array_k - array_sp' inserttext='array_merge_recursive(|)' hint='(PHP 4>=4.0.1, PHP 5) array array_merge_recursive(array $array1 [, array $...]) - Merge two or more arrays recursively.' flags='130'/>
<tag menu='A' submenu='Array-->>array_k - array_sp' inserttext='array_multisort(|)' hint='(PHP 4, PHP 5) bool array_multisort(array &amp;$arr [, mixed $arg=SORT_ASC [, mixed $arg=SORT_REGULAR [, mixed $... ]]]) - Sort multiple or multi-dimensional arrays.' flags='130'/>
<tag menu='A' submenu='Array-->>array_k - array_sp' inserttext='array_pad(|)' hint='(PHP 4, PHP 5) array array_pad(array $input, int $pad_size, mixed $pad_value) - Pad array to the specified length with a value.' flags='130'/>
<tag menu='A' submenu='Array-->>array_k - array_sp' inserttext='array_pop(|)' hint='(PHP 4, PHP 5) mixed array_pop(array &amp;$array) - Pop the element off the end of array.' flags='130'/>
<tag menu='A' submenu='Array-->>array_k - array_sp' inserttext='array_product(|)' hint='(PHP 5>=5.1.0) number array_product(array $array) - Calculate the product of values in an array.' flags='130'/>
<tag menu='A' submenu='Array-->>array_k - array_sp' inserttext='array_push(|)' hint='(PHP 4, PHP 5) int array_push(array &amp;$array, mixed $var [, mixed $...]) - Push one or more elements onto the end of array.' flags='130'/>
<tag menu='A' submenu='Array-->>array_k - array_sp' inserttext='array_rand(|)' hint='(PHP 4, PHP 5) mixed array_rand(array $input [, int $num_req=1]) - Pick one or more random entries out of an array.' flags='130'/>
<tag menu='A' submenu='Array-->>array_k - array_sp' inserttext='array_reduce(|)' hint='(PHP 4>=4.0.5, PHP 5) mixed array_reduce(array $input, callback $function [, mixed $initial=NULL]) - Iteratively reduce the array to a single value using a callback function.' flags='130'/>
<tag menu='A' submenu='Array-->>array_k - array_sp' inserttext='array_replace(|)' hint='(PHP 5>=5.3.0) array array_replace(array &amp;$array, array &amp;$array1 [, array &amp;$array2 [, array &amp;$... ]]) - Replaces elements from passed arrays into the first array.' flags='130'/>
<tag menu='A' submenu='Array-->>array_k - array_sp' inserttext='array_replace_recursive(|)' hint='(PHP 5>=5.3.0) array array_replace_recursive(array &amp;$array, array &amp;$array1 [, array &amp;$array2 [, array &amp;$... ]]) - Replaces elements from passed arrays into the first array recursively.' flags='130'/>
<tag menu='A' submenu='Array-->>array_k - array_sp' inserttext='array_reverse(|)' hint='(PHP 4, PHP 5) array array_reverse(array $array [, bool $preserve_keys=false]) - Return an array with elements in reverse order.' flags='130'/>
<tag menu='A' submenu='Array-->>array_k - array_sp' inserttext='array_search(|)' hint='(PHP 4>=4.0.5, PHP 5) mixed array_search(mixed $needle, array $haystack [, bool $strict]) - Searches the array for a given value and returns the corresponding key if successful.' flags='130'/>
<tag menu='A' submenu='Array-->>array_k - array_sp' inserttext='array_shift(|)' hint='(PHP 4, PHP 5) mixed array_shift(array &amp;$array) - Shift an element off the beginning of array.' flags='130'/>
<tag menu='A' submenu='Array-->>array_k - array_sp' inserttext='array_slice(|)' hint='(PHP 4, PHP 5) array array_slice(array $array, int $offset [, int $length [, bool $preserve_keys=false ]]) - Extract a slice of the array.' flags='130'/>
<tag menu='A' submenu='Array-->>array_k - array_sp' inserttext='array_splice(|)' hint='(PHP 4, PHP 5) array array_splice(array &amp;$input, int $offset [, int $length=0 [, mixed $replacement ]]) - Remove a portion of the array and replace it with something else.' flags='130'/>
<tag menu='A' submenu='Array-->>array_su - en' inserttext='array_sum(|)' hint='(PHP 4>=4.0.4, PHP 5) number array_sum(array $array) - Calculate the sum of values in an array.' flags='130'/>
<tag menu='A' submenu='Array-->>array_su - en' inserttext='array_udiff(|)' hint='(PHP 5) array array_udiff(array $array1, array $array2 [, array $ ... ], callback $data_compare_func) - Computes the difference of arrays by using a callback function for data comparison.' flags='130'/>
<tag menu='A' submenu='Array-->>array_su - en' inserttext='array_udiff_assoc(|)' hint='(PHP 5) array array_udiff_assoc(array $array1, array $array2 [, array $ ... ], callback $data_compare_func) - Computes the difference of arrays with additional index check, compares data by a callback function.' flags='130'/>
<tag menu='A' submenu='Array-->>array_su - en' inserttext='array_udiff_uassoc(|)' hint='(PHP 5) array array_udiff_uassoc(array $array1, array $array2 [, array $ ... ], callback $data_compare_func, callback $key_compare_func) - Computes the difference of arrays with additional index check, compares data and indexes by a callback function.' flags='130'/>
<tag menu='A' submenu='Array-->>array_su - en' inserttext='array_uintersect(|)' hint='(PHP 5) array array_uintersect(array $array1, array $array2 [, array $ ... ], callback $data_compare_func) - Computes the intersection of arrays, compares data by a callback function.' flags='130'/>
<tag menu='A' submenu='Array-->>array_su - en' inserttext='array_uintersect_assoc(|)' hint='(PHP 5) array array_uintersect_assoc(array $array1, array $array2 [, array $ ... ], callback $data_compare_func) - Computes the intersection of arrays with additional index check, compares data by a callback function.' flags='130'/>
<tag menu='A' submenu='Array-->>array_su - en' inserttext='array_uintersect_uassoc(|)' hint='(PHP 5) array array_uintersect_uassoc(array $array1, array $array2 [, array $ ... ], callback $data_compare_func, callback $key_compare_func) - Computes the intersection of arrays with additional index check, compares data and indexes by a callback functions.' flags='130'/>
<tag menu='A' submenu='Array-->>array_su - en' inserttext='array_unique(|)' hint='(PHP 4>=4.0.1, PHP 5) array array_unique(array $array [, int $sort_flags=SORT_STRING]) - Removes duplicate values from an array.' flags='130'/>
<tag menu='A' submenu='Array-->>array_su - en' inserttext='array_unshift(|)' hint='(PHP 4, PHP 5) int array_unshift(array &amp;$array, mixed $var [, mixed $...]) - Prepend one or more elements to the beginning of an array.' flags='130'/>
<tag menu='A' submenu='Array-->>array_su - en' inserttext='array_values(|)' hint='(PHP 4, PHP 5) array array_values(array $input) - Return all the values of an array.' flags='130'/>
<tag menu='A' submenu='Array-->>array_su - en' inserttext='array_walk(|)' hint='(PHP 4, PHP 5) bool array_walk(array &amp;$array, callback $funcname [, mixed $userdata]) - Apply a user function to every member of an array.' flags='130'/>
<tag menu='A' submenu='Array-->>array_su - en' inserttext='array_walk_recursive(|)' hint='(PHP 5) bool array_walk_recursive(array &amp;$input, callback $funcname [, mixed $userdata]) - Apply a user function recursively to every member of an array.' flags='130'/>
<tag menu='A' submenu='Array-->>array_su - en' inserttext='arsort(|)' hint='(PHP 4, PHP 5) bool arsort(array &amp;$array [, int $sort_flags=SORT_REGULAR]) - Sort an array in reverse order and maintain index association.' flags='130'/>
<tag menu='A' submenu='Array-->>array_su - en' inserttext='asort(|)' hint='(PHP 4, PHP 5) bool asort(array &amp;$array [, int $sort_flags=SORT_REGULAR]) - Sort an array and maintain index association.' flags='130'/>
<tag menu='A' submenu='Array-->>array_su - en' inserttext='compact(|)' hint='(PHP 4, PHP 5) array compact(mixed $varname [, mixed $...]) - Create array containing variables and their values.' flags='130'/>
<tag menu='A' submenu='Array-->>array_su - en' inserttext='count(|)' hint='(PHP 4, PHP 5) int count(mixed $var [, int $mode=COUNT_NORMAL]) - Count all elements in an array, or properties in an object.' flags='130'/>
<tag menu='A' submenu='Array-->>array_su - en' inserttext='current(|)' hint='(PHP 4, PHP 5) mixed current(array &amp;$array) - Return the current element in an array.' flags='130'/>
<tag menu='A' submenu='Array-->>array_su - en' inserttext='each(|)' hint='(PHP 4, PHP 5) array each(array &amp;$array) - Return the current key and value pair from an array and advance the array cursor.' flags='130'/>
<tag menu='A' submenu='Array-->>array_su - en' inserttext='end(|)' hint='(PHP 4, PHP 5) mixed end(array &amp;$array) - Set the internal pointer of an array to its last element.' flags='130'/>
<tag menu='A' submenu='Array-->>ex - u' inserttext='extract(|)' hint='(PHP 4, PHP 5) int extract(array $var_array [, int $extract_type=EXTR_OVERWRITE [, string $prefix ]]) - Import variables into the current symbol table from an array.' flags='130'/>
<tag menu='A' submenu='Array-->>ex - u' inserttext='in_array(|)' hint='(PHP 4, PHP 5) bool in_array(mixed $needle, array $haystack [, bool $strict]) - Checks if a value exists in an array.' flags='130'/>
<tag menu='A' submenu='Array-->>ex - u' inserttext='key(|)' hint='(PHP 4, PHP 5) mixed key(array &amp;$array) - Fetch a key from an array.' flags='130'/>
<tag menu='A' submenu='Array-->>ex - u' inserttext='krsort(|)' hint='(PHP 4, PHP 5) bool krsort(array &amp;$array [, int $sort_flags=SORT_REGULAR]) - Sort an array by key in reverse order.' flags='130'/>
<tag menu='A' submenu='Array-->>ex - u' inserttext='ksort(|)' hint='(PHP 4, PHP 5) bool ksort(array &amp;$array [, int $sort_flags=SORT_REGULAR]) - Sort an array by key.' flags='130'/>
<tag menu='A' submenu='Array-->>ex - u' inserttext='list(|)' hint='(PHP 4, PHP 5) array list(mixed $varname [, mixed $...]) - Assign variables as if they were an array.' flags='130'/>
<tag menu='A' submenu='Array-->>ex - u' inserttext='natcasesort(|)' hint='(PHP 4, PHP 5) bool natcasesort(array &amp;$array) - Sort an array using a case insensitive "natural order" algorithm.' flags='130'/>
<tag menu='A' submenu='Array-->>ex - u' inserttext='natsort(|)' hint='(PHP 4, PHP 5) bool natsort(array &amp;$array) - Sort an array using a "natural order" algorithm.' flags='130'/>
<tag menu='A' submenu='Array-->>ex - u' inserttext='next(|)' hint='(PHP 4, PHP 5) mixed next(array &amp;$array) - Advance the internal array pointer of an array.' flags='130'/>
<tag menu='A' submenu='Array-->>ex - u' inserttext='pos(|)' hint='(PHP 4, PHP 5) Alias of current().' flags='130'/>
<tag menu='A' submenu='Array-->>ex - u' inserttext='prev(|)' hint='(PHP 4, PHP 5) mixed prev(array &amp;$array) - Rewind the internal array pointer.' flags='130'/>
<tag menu='A' submenu='Array-->>ex - u' inserttext='range(|)' hint='(PHP 4, PHP 5) array range(mixed $low, mixed $high [, number $step]) - Create an array containing a range of elements.' flags='130'/>
<tag menu='A' submenu='Array-->>ex - u' inserttext='reset(|)' hint='(PHP 4, PHP 5) mixed reset(array &amp;$array) - Set the internal pointer of an array to its first element.' flags='130'/>
<tag menu='A' submenu='Array-->>ex - u' inserttext='rsort(|)' hint='(PHP 4, PHP 5) bool rsort(array &amp;$array [, int $sort_flags=SORT_REGULAR]) - Sort an array in reverse order.' flags='130'/>
<tag menu='A' submenu='Array-->>ex - u' inserttext='shuffle(|)' hint='(PHP 4, PHP 5) bool shuffle(array &amp;$array) - Shuffle an array.' flags='130'/>
<tag menu='A' submenu='Array-->>ex - u' inserttext='sizeof(|)' hint='(PHP 4, PHP 5) Alias of count().' flags='130'/>
<tag menu='A' submenu='Array-->>ex - u' inserttext='sort(|)' hint='(PHP 4, PHP 5) bool sort(array &amp;$array [, int $sort_flags=SORT_REGULAR]) - Sort an array.' flags='130'/>
<tag menu='A' submenu='Array-->>ex - u' inserttext='uasort(|)' hint='(PHP 4, PHP 5) bool uasort(array &amp;$array, callback $cmp_function) - Sort an array with a user-defined comparison function and maintain index association.' flags='130'/>
<tag menu='A' submenu='Array-->>ex - u' inserttext='uksort(|)' hint='(PHP 4, PHP 5) bool uksort(array &amp;$array, callback $cmp_function) - Sort an array by keys using a user-defined comparison function.' flags='130'/>
<tag menu='A' submenu='Array-->>ex - u' inserttext='usort(|)' hint='(PHP 4, PHP 5) bool usort(array &amp;$array, callback $cmp_function) - Sort an array by values using a user-defined comparison function.' flags='130'/>
<tag menu='A' submenu='ArrayAccess interface' inserttext='ArrayAccess::offsetExists(|)' hint='(PHP 5>=5.1.0) abstract public boolean ArrayAccess::offsetExists(mixed $offset) - Whether a offset exists.' flags='130'/>
<tag menu='A' submenu='ArrayAccess interface' inserttext='ArrayAccess::offsetGet(|)' hint='(PHP 5>=5.1.0) abstract public mixed ArrayAccess::offsetGet(mixed $offset) - Offset to retrieve.' flags='130'/>
<tag menu='A' submenu='ArrayAccess interface' inserttext='ArrayAccess::offsetSet(|)' hint='(PHP 5>=5.1.0) abstract public void ArrayAccess::offsetSet(mixed $offset, mixed $value) - Offset to set.' flags='130'/>
<tag menu='A' submenu='ArrayAccess interface' inserttext='ArrayAccess::offsetUnset(|)' hint='(PHP 5>=5.1.0) abstract public void ArrayAccess::offsetUnset(mixed $offset) - Offset to unset.' flags='130'/>
<tag menu='A' submenu='ArrayIterator class' inserttext='ArrayIterator::__construct(|)' hint='(PHP 5>=5.0.0) ArrayIterator::__construct(mixed $array) - Construct an ArrayIterator.' flags='130'/>
<tag menu='A' submenu='ArrayIterator class' inserttext='ArrayIterator::append(|)' hint='(PHP 5>=5.0.0) public void ArrayIterator::append(mixed $value) - Append an element.' flags='130'/>
<tag menu='A' submenu='ArrayIterator class' inserttext='ArrayIterator::asort()' hint='(PHP 5>=5.2.0) public void ArrayIterator::asort(void) - Sort array by values.' flags='130'/>
<tag menu='A' submenu='ArrayIterator class' inserttext='ArrayIterator::count()' hint='(PHP 5>=5.0.0) public void ArrayIterator::count(void) - Count elements.' flags='130'/>
<tag menu='A' submenu='ArrayIterator class' inserttext='ArrayIterator::current()' hint='(PHP 5>=5.0.0) mixed ArrayIterator::current(void) - Return current array entry.' flags='130'/>
<tag menu='A' submenu='ArrayIterator class' inserttext='ArrayIterator::getArrayCopy()' hint='(PHP 5>=5.0.0) public array ArrayIterator::getArrayCopy(void) - Get array copy.' flags='130'/>
<tag menu='A' submenu='ArrayIterator class' inserttext='ArrayIterator::getFlags()' hint='(PHP 5>=5.1.0) public void ArrayIterator::getFlags(void) - Get flags.' flags='130'/>
<tag menu='A' submenu='ArrayIterator class' inserttext='ArrayIterator::key()' hint='(PHP 5>=5.0.0) mixed ArrayIterator::key(void) - Return current array key.' flags='130'/>
<tag menu='A' submenu='ArrayIterator class' inserttext='ArrayIterator::ksort()' hint='(PHP 5>=5.2.0) public void ArrayIterator::ksort(void) - Sort array by keys.' flags='130'/>
<tag menu='A' submenu='ArrayIterator class' inserttext='ArrayIterator::natcasesort()' hint='(PHP 5>=5.2.0) public void ArrayIterator::natcasesort(void) - Sort an array naturally, case insensitive.' flags='130'/>
<tag menu='A' submenu='ArrayIterator class' inserttext='ArrayIterator::natsort()' hint='(PHP 5>=5.2.0) public void ArrayIterator::natsort(void) - Sort an array naturally.' flags='130'/>
<tag menu='A' submenu='ArrayIterator class' inserttext='ArrayIterator::next()' hint='(PHP 5>=5.0.0) void ArrayIterator::next(void) - Move to next entry.' flags='130'/>
<tag menu='A' submenu='ArrayIterator class' inserttext='ArrayIterator::offsetExists(|)' hint='(PHP 5>=5.0.0) public void ArrayIterator::offsetExists(string $index) - Check if offset exists.' flags='130'/>
<tag menu='A' submenu='ArrayIterator class' inserttext='ArrayIterator::offsetGet(|)' hint='(PHP 5>=5.0.0) public mixed ArrayIterator::offsetGet(string $index) - Get value for an offset.' flags='130'/>
<tag menu='A' submenu='ArrayIterator class' inserttext='ArrayIterator::offsetSet(|)' hint='(PHP 5>=5.0.0) public void ArrayIterator::offsetSet(string $index, string $newval) - Set value for an offset.' flags='130'/>
<tag menu='A' submenu='ArrayIterator class' inserttext='ArrayIterator::offsetUnset(|)' hint='(PHP 5>=5.0.0) public void ArrayIterator::offsetUnset(string $index) - Unset value for an offset.' flags='130'/>
<tag menu='A' submenu='ArrayIterator class' inserttext='ArrayIterator::rewind()' hint='(PHP 5>=5.0.0) void ArrayIterator::rewind(void) - Rewind array back to the start.' flags='130'/>
<tag menu='A' submenu='ArrayIterator class' inserttext='ArrayIterator::seek(|)' hint='(PHP 5>=5.0.0) void ArrayIterator::seek(int $position) - Seek to position.' flags='130'/>
<tag menu='A' submenu='ArrayIterator class' inserttext='ArrayIterator::serialize()' hint='(PHP 5>=5.3.0) public string ArrayIterator::serialize(void) - Serialize.' flags='130'/>
<tag menu='A' submenu='ArrayIterator class' inserttext='ArrayIterator::setFlags(|)' hint='(PHP 5>=5.1.0) public void ArrayIterator::setFlags(string $flags) - Set behaviour flags.' flags='130'/>
<tag menu='A' submenu='ArrayIterator class' inserttext='ArrayIterator::uasort(|)' hint='(PHP 5>=5.2.0) public void ArrayIterator::uasort(string $cmp_function) - User defined sort.' flags='130'/>
<tag menu='A' submenu='ArrayIterator class' inserttext='ArrayIterator::uksort(|)' hint='(PHP 5>=5.2.0) public void ArrayIterator::uksort(string $cmp_function) - User defined sort.' flags='130'/>
<tag menu='A' submenu='ArrayIterator class' inserttext='ArrayIterator::unserialize(|)' hint='(PHP 5>=5.3.0) public string ArrayIterator::unserialize(string $serialized) - Unserialize.' flags='130'/>
<tag menu='A' submenu='ArrayIterator class' inserttext='ArrayIterator::valid()' hint='(PHP 5>=5.0.0) bool ArrayIterator::valid(void) - Check whether array contains more entries.' flags='130'/>
<tag menu='A' submenu='ArrayObject class' inserttext='ArrayObject::__construct(|)' hint='(PHP 5>=5.0.0) Construct a new array object.' flags='130'/>
<tag menu='A' submenu='ArrayObject class' inserttext='ArrayObject::append(|)' hint='(PHP 5>=5.0.0) void ArrayObject::append(mixed $value) - Appends the value.' flags='130'/>
<tag menu='A' submenu='ArrayObject class' inserttext='ArrayObject::asort()' hint='(PHP 5>=5.2.0) void ArrayObject::asort(void) - Sort the entries by value.' flags='130'/>
<tag menu='A' submenu='ArrayObject class' inserttext='ArrayObject::count()' hint='(PHP 5>=5.0.0) int ArrayObject::count(void) - Get the number of public properties in the ArrayObject.' flags='130'/>
<tag menu='A' submenu='ArrayObject class' inserttext='ArrayObject::exchangeArray(|)' hint='(PHP 5>=5.1.0) array ArrayObject::exchangeArray(mixed $input) - Exchange the array for another one.' flags='130'/>
<tag menu='A' submenu='ArrayObject class' inserttext='ArrayObject::getArrayCopy()' hint='(PHP 5>=5.0.0) array ArrayObject::getArrayCopy(void) - Creates a copy of the ArrayObject.' flags='130'/>
<tag menu='A' submenu='ArrayObject class' inserttext='ArrayObject::getFlags()' hint='(PHP 5>=5.1.0) int ArrayObject::getFlags(void) - Gets the behavior flags.' flags='130'/>
<tag menu='A' submenu='ArrayObject class' inserttext='ArrayObject::getIterator()' hint='(PHP 5>=5.0.0) ArrayIterator ArrayObject::getIterator(void) - Create a new iterator from an ArrayObject instance.' flags='130'/>
<tag menu='A' submenu='ArrayObject class' inserttext='ArrayObject::getIteratorClass()' hint='(PHP 5>=5.1.0) public string ArrayObject::getIteratorClass(void) - Gets the iterator classname for the ArrayObject.' flags='130'/>
<tag menu='A' submenu='ArrayObject class' inserttext='ArrayObject::ksort()' hint='(PHP 5>=5.2.0) void ArrayObject::ksort(void) - Sort the entries by key.' flags='130'/>
<tag menu='A' submenu='ArrayObject class' inserttext='ArrayObject::natcasesort()' hint='(PHP 5>=5.2.0) void ArrayObject::natcasesort(void) - Sort an array using a case insensitive "natural order" algorithm.' flags='130'/>
<tag menu='A' submenu='ArrayObject class' inserttext='ArrayObject::natsort()' hint='(PHP 5>=5.2.0) void ArrayObject::natsort(void) - Sort entries using a "natural order" algorithm.' flags='130'/>
<tag menu='A' submenu='ArrayObject class' inserttext='ArrayObject::offsetExists(|)' hint='(PHP 5>=5.0.0) bool ArrayObject::offsetExists(mixed $index) - Returns whether the requested index exists.' flags='130'/>
<tag menu='A' submenu='ArrayObject class' inserttext='ArrayObject::offsetGet(|)' hint='(PHP 5>=5.0.0) mixed ArrayObject::offsetGet(mixed $index) - Returns the value at the specified index.' flags='130'/>
<tag menu='A' submenu='ArrayObject class' inserttext='ArrayObject::offsetSet(|)' hint='(PHP 5>=5.0.0) void ArrayObject::offsetSet(mixed $index, mixed $newval) - Sets the value at the specified index to newval.' flags='130'/>
<tag menu='A' submenu='ArrayObject class' inserttext='ArrayObject::offsetUnset(|)' hint='(PHP 5>=5.0.0) void ArrayObject::offsetUnset(mixed $index) - Unsets the value at the specified index.' flags='130'/>
<tag menu='A' submenu='ArrayObject class' inserttext='ArrayObject::serialize()' hint='(PHP 5>=5.3.0) public void ArrayObject::serialize(void) - Serialize an ArrayObject.' flags='130'/>
<tag menu='A' submenu='ArrayObject class' inserttext='ArrayObject::setFlags(|)' hint='(PHP 5>=5.1.0) void ArrayObject::setFlags(int $flags) - Sets the behavior flags.' flags='130'/>
<tag menu='A' submenu='ArrayObject class' inserttext='ArrayObject::setIteratorClass(|)' hint='(PHP 5>=5.1.0) void ArrayObject::setIteratorClass(string $iterator_class) - Sets the iterator classname for the ArrayObject.' flags='130'/>
<tag menu='A' submenu='ArrayObject class' inserttext='ArrayObject::uasort(|)' hint='(PHP 5>=5.2.0) void ArrayObject::uasort(callback $cmp_function) - Sort the entries with a user-defined comparison function and maintain key association.' flags='130'/>
<tag menu='A' submenu='ArrayObject class' inserttext='ArrayObject::uksort(|)' hint='(PHP 5>=5.2.0) void ArrayObject::uksort(callback $cmp_function) - Sort the entries by keys using a user-defined comparison function.' flags='130'/>
<tag menu='A' submenu='ArrayObject class' inserttext='ArrayObject::unserialize(|)' hint='(PHP 5>=5.3.0) public void ArrayObject::unserialize(string $serialized) - Unserialize an ArrayObject.' flags='130'/>
<tag menu='B' submenu='BC Math' inserttext='bcadd(|)' hint='(PHP 4, PHP 5) string bcadd(string $left_operand, string $right_operand [, int $scale]) - Add two arbitrary precision numbers.' flags='130'/>
<tag menu='B' submenu='BC Math' inserttext='bccomp(|)' hint='(PHP 4, PHP 5) int bccomp(string $left_operand, string $right_operand [, int $scale]) - Compare two arbitrary precision numbers.' flags='130'/>
<tag menu='B' submenu='BC Math' inserttext='bcdiv(|)' hint='(PHP 4, PHP 5) string bcdiv(string $left_operand, string $right_operand [, int $scale]) - Divide two arbitrary precision numbers.' flags='130'/>
<tag menu='B' submenu='BC Math' inserttext='bcmod(|)' hint='(PHP 4, PHP 5) string bcmod(string $left_operand, string $modulus) - Get modulus of an arbitrary precision number.' flags='130'/>
<tag menu='B' submenu='BC Math' inserttext='bcmul(|)' hint='(PHP 4, PHP 5) string bcmul(string $left_operand, string $right_operand [, int $scale]) - Multiply two arbitrary precision number.' flags='130'/>
<tag menu='B' submenu='BC Math' inserttext='bcpow(|)' hint='(PHP 4, PHP 5) string bcpow(string $left_operand, string $right_operand [, int $scale]) - Raise an arbitrary precision number to another.' flags='130'/>
<tag menu='B' submenu='BC Math' inserttext='bcpowmod(|)' hint='(PHP 5) string bcpowmod(string $left_operand, string $right_operand, string $modulus [, int $scale]) - Raise an arbitrary precision number to another, reduced by a specified modulus.' flags='130'/>
<tag menu='B' submenu='BC Math' inserttext='bcscale(|)' hint='(PHP 4, PHP 5) bool bcscale(int $scale) - Set default scale parameter for all bc math functions.' flags='130'/>
<tag menu='B' submenu='BC Math' inserttext='bcsqrt(|)' hint='(PHP 4, PHP 5) string bcsqrt(string $operand [, int $scale]) - Get the square root of an arbitrary precision number.' flags='130'/>
<tag menu='B' submenu='BC Math' inserttext='bcsub(|)' hint='(PHP 4, PHP 5) string bcsub(string $left_operand, string $right_operand [, int $scale]) - Subtract one arbitrary precision number from another.' flags='130'/>
<tag menu='B' submenu='Bzip2' inserttext='bzclose(|)' hint='(PHP 4>=4.0.4, PHP 5) int bzclose(resource $bz) - Close a bzip2 file.' flags='130'/>
<tag menu='B' submenu='Bzip2' inserttext='bzcompress(|)' hint='(PHP 4>=4.0.4, PHP 5) mixed bzcompress(string $source [, int $blocksize=4 [, int $workfactor=0 ]]) - Compress a string into bzip2 encoded data.' flags='130'/>
<tag menu='B' submenu='Bzip2' inserttext='bzdecompress(|)' hint='(PHP 4>=4.0.4, PHP 5) mixed bzdecompress(string $source [, int $small=0]) - Decompresses bzip2 encoded data.' flags='130'/>
<tag menu='B' submenu='Bzip2' inserttext='bzerrno(|)' hint='(PHP 4>=4.0.4, PHP 5) int bzerrno(resource $bz) - Returns a bzip2 error number.' flags='130'/>
<tag menu='B' submenu='Bzip2' inserttext='bzerror(|)' hint='(PHP 4>=4.0.4, PHP 5) array bzerror(resource $bz) - Returns the bzip2 error number and error string in an array.' flags='130'/>
<tag menu='B' submenu='Bzip2' inserttext='bzerrstr(|)' hint='(PHP 4>=4.0.4, PHP 5) string bzerrstr(resource $bz) - Returns a bzip2 error string.' flags='130'/>
<tag menu='B' submenu='Bzip2' inserttext='bzflush(|)' hint='(PHP 4>=4.0.4, PHP 5) int bzflush(resource $bz) - Force a write of all buffered data.' flags='130'/>
<tag menu='B' submenu='Bzip2' inserttext='bzopen(|)' hint='(PHP 4>=4.0.4, PHP 5) resource bzopen(string $filename, string $mode) - Opens a bzip2 compressed file.' flags='130'/>
<tag menu='B' submenu='Bzip2' inserttext='bzread(|)' hint='(PHP 4>=4.0.4, PHP 5) string bzread(resource $bz [, int $length=1024]) - Binary safe bzip2 file read.' flags='130'/>
<tag menu='B' submenu='Bzip2' inserttext='bzwrite(|)' hint='(PHP 4>=4.0.4, PHP 5) int bzwrite(resource $bz, string $data [, int $length]) - Binary safe bzip2 file write.' flags='130'/>
<tag menu='C' submenu='COM-->>C - variant_a' inserttext='COM(|)' hint='(PHP 4>=4.1.0, PHP 5) com COM::COM(string $module_name [, mixed $server_name [, int $codepage [, string $typelib ]]]) - COM class.' flags='130'/>
<tag menu='C' submenu='COM-->>C - variant_a' inserttext='DOTNET(|)' hint='(PHP 4>=4.1.0, PHP 5) string DOTNET::DOTNET(string $assembly_name, string $class_name [, int $codepage]) - DOTNET class.' flags='130'/>
<tag menu='C' submenu='COM-->>C - variant_a' inserttext='VARIANT(|)' hint='(PHP 4>=4.1.0, PHP 5) object VARIANT::VARIANT([mixed $value [, int $type [, int $codepage ]]]) - VARIANT class.' flags='130'/>
<tag menu='C' submenu='COM-->>C - variant_a' inserttext='com_addref()' hint='(PHP 4>=4.1.0) void com_addref(void) - Increases the components reference counter [deprecated].' flags='130'/>
<tag menu='C' submenu='COM-->>C - variant_a' inserttext='com_create_guid()' hint='(PHP 5) string com_create_guid(void) - Generate a globally unique identifier (GUID).' flags='130'/>
<tag menu='C' submenu='COM-->>C - variant_a' inserttext='com_event_sink(|)' hint='(PHP 4>=4.2.0, PHP 5) bool com_event_sink(variant $comobject, object $sinkobject [, mixed $sinkinterface]) - Connect events from a COM object to a PHP object.' flags='130'/>
<tag menu='C' submenu='COM-->>C - variant_a' inserttext='com_get(|)' hint="(PHP 4) Gets the value of a COM Component's property [deprecated]." flags='130'/>
<tag menu='C' submenu='COM-->>C - variant_a' inserttext='com_get_active_object(|)' hint='(PHP 5) variant com_get_active_object(string $progid [, int $code_page]) - Returns a handle to an already running instance of a COM object.' flags='130'/>
<tag menu='C' submenu='COM-->>C - variant_a' inserttext='com_invoke(|)' hint="(PHP 4) mixed com_invoke(resource $com_object, string $function_name [, mixed $function_parameters]) - Calls a COM component's method [deprecated]." flags='130'/>
<tag menu='C' submenu='COM-->>C - variant_a' inserttext='com_isenum(|)' hint='(PHP 4>=4.1.0) bool com_isenum(variant $com_module) - Indicates if a COM object has an IEnumVariant interface for iteration [deprecated].' flags='130'/>
<tag menu='C' submenu='COM-->>C - variant_a' inserttext='com_load(|)' hint='(PHP 4) Creates a new reference to a COM component [deprecated].' flags='130'/>
<tag menu='C' submenu='COM-->>C - variant_a' inserttext='com_load_typelib(|)' hint='(PHP 4>=4.1.0, PHP 5) bool com_load_typelib(string $typelib_name [, bool $case_insensitive]) - Loads a Typelib.' flags='130'/>
<tag menu='C' submenu='COM-->>C - variant_a' inserttext='com_message_pump(|)' hint='(PHP 4>=4.2.0, PHP 5) bool com_message_pump([int $timeoutms]) - Process COM messages, sleeping for up to timeoutms milliseconds.' flags='130'/>
<tag menu='C' submenu='COM-->>C - variant_a' inserttext='com_print_typeinfo(|)' hint='(PHP 4>=4.2.0, PHP 5) bool com_print_typeinfo(object $comobject [, string $dispinterface [, bool $wantsink ]]) - Print out a PHP class definition for a dispatchable interface.' flags='130'/>
<tag menu='C' submenu='COM-->>C - variant_a' inserttext='com_propget(|)' hint='(PHP 4) Alias of com_get().' flags='130'/>
<tag menu='C' submenu='COM-->>C - variant_a' inserttext='com_propput(|)' hint='(PHP 4) Alias of com_set().' flags='130'/>
<tag menu='C' submenu='COM-->>C - variant_a' inserttext='com_propset(|)' hint='(PHP 4) Alias of com_set().' flags='130'/>
<tag menu='C' submenu='COM-->>C - variant_a' inserttext='com_release()' hint='(PHP 4>=4.1.0) void com_release(void) - Decreases the components reference counter [deprecated].' flags='130'/>
<tag menu='C' submenu='COM-->>C - variant_a' inserttext='com_set(|)' hint="(PHP 4) Assigns a value to a COM component's property." flags='130'/>
<tag menu='C' submenu='COM-->>C - variant_a' inserttext='variant_abs(|)' hint='(PHP 5) mixed variant_abs(mixed $val) - Returns the absolute value of a variant.' flags='130'/>
<tag menu='C' submenu='COM-->>C - variant_a' inserttext='variant_add(|)' hint='(PHP 5) mixed variant_add(mixed $left, mixed $right) - "Adds" two variant values together and returns the result.' flags='130'/>
<tag menu='C' submenu='COM-->>C - variant_a' inserttext='variant_and(|)' hint='(PHP 5) mixed variant_and(mixed $left, mixed $right) - Performs a bitwise AND operation between two variants.' flags='130'/>
<tag menu='C' submenu='COM-->>variant_c - v' inserttext='variant_cast(|)' hint='(PHP 5) variant variant_cast(variant $variant, int $type) - Convert a variant into a new variant object of another type.' flags='130'/>
<tag menu='C' submenu='COM-->>variant_c - v' inserttext='variant_cat(|)' hint='(PHP 5) mixed variant_cat(mixed $left, mixed $right) - concatenates two variant values together and returns the result.' flags='130'/>
<tag menu='C' submenu='COM-->>variant_c - v' inserttext='variant_cmp(|)' hint='(PHP 5) int variant_cmp(mixed $left, mixed $right [, int $lcid [, int $flags ]]) - Compares two variants.' flags='130'/>
<tag menu='C' submenu='COM-->>variant_c - v' inserttext='variant_date_from_timestamp(|)' hint='(PHP 5) variant variant_date_from_timestamp(int $timestamp) - Returns a variant date representation of a Unix timestamp.' flags='130'/>
<tag menu='C' submenu='COM-->>variant_c - v' inserttext='variant_date_to_timestamp(|)' hint='(PHP 5) int variant_date_to_timestamp(variant $variant) - Converts a variant date/time value to Unix timestamp.' flags='130'/>
<tag menu='C' submenu='COM-->>variant_c - v' inserttext='variant_div(|)' hint='(PHP 5) mixed variant_div(mixed $left, mixed $right) - Returns the result from dividing two variants.' flags='130'/>
<tag menu='C' submenu='COM-->>variant_c - v' inserttext='variant_eqv(|)' hint='(PHP 5) mixed variant_eqv(mixed $left, mixed $right) - Performs a bitwise equivalence on two variants.' flags='130'/>
<tag menu='C' submenu='COM-->>variant_c - v' inserttext='variant_fix(|)' hint='(PHP 5) mixed variant_fix(mixed $variant) - Returns the integer portion of a variant.' flags='130'/>
<tag menu='C' submenu='COM-->>variant_c - v' inserttext='variant_get_type(|)' hint='(PHP 5) int variant_get_type(variant $variant) - Returns the type of a variant object.' flags='130'/>
<tag menu='C' submenu='COM-->>variant_c - v' inserttext='variant_idiv(|)' hint='(PHP 5) mixed variant_idiv(mixed $left, mixed $right) - Converts variants to integers and then returns the result from dividing them.' flags='130'/>
<tag menu='C' submenu='COM-->>variant_c - v' inserttext='variant_imp(|)' hint='(PHP 5) mixed variant_imp(mixed $left, mixed $right) - Performs a bitwise implication on two variants.' flags='130'/>
<tag menu='C' submenu='COM-->>variant_c - v' inserttext='variant_int(|)' hint='(PHP 5) mixed variant_int(mixed $variant) - Returns the integer portion of a variant.' flags='130'/>
<tag menu='C' submenu='COM-->>variant_c - v' inserttext='variant_mod(|)' hint='(PHP 5) mixed variant_mod(mixed $left, mixed $right) - Divides two variants and returns only the remainder.' flags='130'/>
<tag menu='C' submenu='COM-->>variant_c - v' inserttext='variant_mul(|)' hint='(PHP 5) mixed variant_mul(mixed $left, mixed $right) - Multiplies the values of the two variants.' flags='130'/>
<tag menu='C' submenu='COM-->>variant_c - v' inserttext='variant_neg(|)' hint='(PHP 5) mixed variant_neg(mixed $variant) - Performs logical negation on a variant.' flags='130'/>
<tag menu='C' submenu='COM-->>variant_c - v' inserttext='variant_not(|)' hint='(PHP 5) mixed variant_not(mixed $variant) - Performs bitwise not negation on a variant.' flags='130'/>
<tag menu='C' submenu='COM-->>variant_c - v' inserttext='variant_or(|)' hint='(PHP 5) mixed variant_or(mixed $left, mixed $right) - Performs a logical disjunction on two variants.' flags='130'/>
<tag menu='C' submenu='COM-->>variant_c - v' inserttext='variant_pow(|)' hint='(PHP 5) mixed variant_pow(mixed $left, mixed $right) - Returns the result of performing the power function with two variants.' flags='130'/>
<tag menu='C' submenu='COM-->>variant_c - v' inserttext='variant_round(|)' hint='(PHP 5) mixed variant_round(mixed $variant, int $decimals) - Rounds a variant to the specified number of decimal places.' flags='130'/>
<tag menu='C' submenu='COM-->>variant_c - v' inserttext='variant_set(|)' hint='(PHP 5) void variant_set(variant $variant, mixed $value) - Assigns a new value for a variant object.' flags='130'/>
<tag menu='C' submenu='COM-->>variant_c - v' inserttext='variant_set_type(|)' hint='(PHP 5) void variant_set_type(variant $variant, int $type) - Convert a variant into another type "in-place".' flags='130'/>
<tag menu='C' submenu='COM-->>variant_c - v' inserttext='variant_sub(|)' hint='(PHP 5) mixed variant_sub(mixed $left, mixed $right) - Subtracts the value of the right variant from the left variant value.' flags='130'/>
<tag menu='C' submenu='COM-->>variant_c - v' inserttext='variant_xor(|)' hint='(PHP 5) mixed variant_xor(mixed $left, mixed $right) - Performs a logical exclusion on two variants.' flags='130'/>
<tag menu='C' submenu='CachingIterator class' inserttext='CachingIterator::__construct(|)' hint='(PHP 5) CachingIterator::__construct(Iterator $iterator [, string $flags]) - Construct a new CachingIterator object for the iterator.' flags='130'/>
<tag menu='C' submenu='CachingIterator class' inserttext='CachingIterator::__toString()' hint='(PHP 5) public void CachingIterator::__toString(void) - Return the string representation of the current element.' flags='130'/>
<tag menu='C' submenu='CachingIterator class' inserttext='CachingIterator::count()' hint='(PHP 5>=5.2.2) public void CachingIterator::count(void) - The number of elements in the iterator.' flags='130'/>
<tag menu='C' submenu='CachingIterator class' inserttext='CachingIterator::current()' hint='(PHP 5) public void CachingIterator::current(void) - Return the current element.' flags='130'/>
<tag menu='C' submenu='CachingIterator class' inserttext='CachingIterator::getCache()' hint='(PHP 5>=5.2.0) public void CachingIterator::getCache(void) - The getCache purpose.' flags='130'/>
<tag menu='C' submenu='CachingIterator class' inserttext='CachingIterator::getFlags()' hint='(PHP 5>=5.2.0) public void CachingIterator::getFlags(void) - Get flags used.' flags='130'/>
<tag menu='C' submenu='CachingIterator class' inserttext='CachingIterator::getInnerIterator()' hint='(PHP 5) public void CachingIterator::getInnerIterator(void) - Return the innter iterator.' flags='130'/>
<tag menu='C' submenu='CachingIterator class' inserttext='CachingIterator::hasNext()' hint='(PHP 5) public void CachingIterator::hasNext(void) - Check whether the inner iterator has a valid next element.' flags='130'/>
<tag menu='C' submenu='CachingIterator class' inserttext='CachingIterator::key()' hint='(PHP 5) public void CachingIterator::key(void) - Return the key for the current element.' flags='130'/>
<tag menu='C' submenu='CachingIterator class' inserttext='CachingIterator::next()' hint='(PHP 5) public void CachingIterator::next(void) - Move the iterator forward.' flags='130'/>
<tag menu='C' submenu='CachingIterator class' inserttext='CachingIterator::offsetExists(|)' hint='(PHP 5>=5.2.0) public void CachingIterator::offsetExists(string $index) - The offsetExists purpose.' flags='130'/>
<tag menu='C' submenu='CachingIterator class' inserttext='CachingIterator::offsetGet(|)' hint='(PHP 5>=5.2.0) public void CachingIterator::offsetGet(string $index) - The offsetGet purpose.' flags='130'/>
<tag menu='C' submenu='CachingIterator class' inserttext='CachingIterator::offsetSet(|)' hint='(PHP 5>=5.2.0) public void CachingIterator::offsetSet(string $index, string $newval) - The offsetSet purpose.' flags='130'/>
<tag menu='C' submenu='CachingIterator class' inserttext='CachingIterator::offsetUnset(|)' hint='(PHP 5>=5.2.0) public void CachingIterator::offsetUnset(string $index) - The offsetUnset purpose.' flags='130'/>
<tag menu='C' submenu='CachingIterator class' inserttext='CachingIterator::rewind()' hint='(PHP 5) public void CachingIterator::rewind(void) - Rewind the iterator.' flags='130'/>
<tag menu='C' submenu='CachingIterator class' inserttext='CachingIterator::setFlags(|)' hint='(PHP 5>=5.2.0) public void CachingIterator::setFlags(bitmask $flags) - The setFlags purpose.' flags='130'/>
<tag menu='C' submenu='CachingIterator class' inserttext='CachingIterator::valid()' hint='(PHP 5) public void CachingIterator::valid(void) - Check whether the current element is valid.' flags='130'/>
<tag menu='C' submenu='Calendar' inserttext='FrenchToJD(|)' hint='(PHP 4, PHP 5) int frenchtojd(int $month, int $day, int $year) - Converts a date from the French Republican Calendar to a Julian Day Count.' flags='130'/>
<tag menu='C' submenu='Calendar' inserttext='GregorianToJD(|)' hint='(PHP 4, PHP 5) int gregoriantojd(int $month, int $day, int $year) - Converts a Gregorian date to Julian Day Count.' flags='130'/>
<tag menu='C' submenu='Calendar' inserttext='JDDayOfWeek(|)' hint='(PHP 4, PHP 5) mixed jddayofweek(int $julianday [, int $mode=CAL_DOW_DAYNO]) - Returns the day of the week.' flags='130'/>
<tag menu='C' submenu='Calendar' inserttext='JDMonthName(|)' hint='(PHP 4, PHP 5) string jdmonthname(int $julianday, int $mode) - Returns a month name.' flags='130'/>
<tag menu='C' submenu='Calendar' inserttext='JDToFrench(|)' hint='(PHP 4, PHP 5) string jdtofrench(int $juliandaycount) - Converts a Julian Day Count to the French Republican Calendar.' flags='130'/>
<tag menu='C' submenu='Calendar' inserttext='JDToGregorian(|)' hint='(PHP 4, PHP 5) string jdtogregorian(int $julianday) - Converts Julian Day Count to Gregorian date.' flags='130'/>
<tag menu='C' submenu='Calendar' inserttext='JDToJulian(|)' hint='(PHP 4, PHP 5) string jdtojulian(int $julianday) - Converts a Julian Day Count to a Julian Calendar Date.' flags='130'/>
<tag menu='C' submenu='Calendar' inserttext='JewishToJD(|)' hint='(PHP 4, PHP 5) int jewishtojd(int $month, int $day, int $year) - Converts a date in the Jewish Calendar to Julian Day Count.' flags='130'/>
<tag menu='C' submenu='Calendar' inserttext='JulianToJD(|)' hint='(PHP 4, PHP 5) int juliantojd(int $month, int $day, int $year) - Converts a Julian Calendar date to Julian Day Count.' flags='130'/>
<tag menu='C' submenu='Calendar' inserttext='cal_days_in_month(|)' hint='(PHP 4>=4.1.0, PHP 5) int cal_days_in_month(int $calendar, int $month, int $year) - Return the number of days in a month for a given year and calendar.' flags='130'/>
<tag menu='C' submenu='Calendar' inserttext='cal_from_jd(|)' hint='(PHP 4>=4.1.0, PHP 5) array cal_from_jd(int $jd, int $calendar) - Converts from Julian Day Count to a supported calendar.' flags='130'/>
<tag menu='C' submenu='Calendar' inserttext='cal_info(|)' hint='(PHP 4>=4.1.0, PHP 5) array cal_info([int $calendar=-1]) - Returns information about a particular calendar.' flags='130'/>
<tag menu='C' submenu='Calendar' inserttext='cal_to_jd(|)' hint='(PHP 4>=4.1.0, PHP 5) int cal_to_jd(int $calendar, int $month, int $day, int $year) - Converts from a supported calendar to Julian Day Count.' flags='130'/>
<tag menu='C' submenu='Calendar' inserttext='easter_date(|)' hint='(PHP 4, PHP 5) int easter_date([int $year]) - Get Unix timestamp for midnight on Easter of a given year.' flags='130'/>
<tag menu='C' submenu='Calendar' inserttext='easter_days(|)' hint='(PHP 4, PHP 5) int easter_days([int $year [, int $method=CAL_EASTER_DEFAULT ]]) - Get number of days after March 21 on which Easter falls for a given year.' flags='130'/>
<tag menu='C' submenu='Calendar' inserttext='jdtojewish(|)' hint='(PHP 4, PHP 5) string jdtojewish(int $juliandaycount [, bool $hebrew=false [, int $fl=0 ]]) - Converts a Julian day count to a Jewish calendar date.' flags='130'/>
<tag menu='C' submenu='Calendar' inserttext='jdtounix(|)' hint='(PHP 4, PHP 5) int jdtounix(int $jday) - Convert Julian Day to Unix timestamp.' flags='130'/>
<tag menu='C' submenu='Calendar' inserttext='unixtojd(|)' hint='(PHP 4, PHP 5) int unixtojd([int $timestamp=time()]) - Convert Unix timestamp to Julian Day.' flags='130'/>
<tag menu='C' submenu='Classes/Object' inserttext='call_user_method(|)' hint='(PHP 4, PHP 5) mixed call_user_method(string $method_name, object &amp;$obj [, mixed $parameter [, mixed $... ]]) - Call a user method on an specific object [deprecated].' flags='130'/>
<tag menu='C' submenu='Classes/Object' inserttext='call_user_method_array(|)' hint='(PHP 4>=4.0.5, PHP 5) mixed call_user_method_array(string $method_name, object &amp;$obj, array $params) - Call a user method given with an array of parameters [deprecated].' flags='130'/>
<tag menu='C' submenu='Classes/Object' inserttext='class_alias(|)' hint='(PHP 5>=5.3.0) boolean class_alias([string $original [, string $alias ]]) - Creates an alias for a class.' flags='130'/>
<tag menu='C' submenu='Classes/Object' inserttext='class_exists(|)' hint='(PHP 4, PHP 5) bool class_exists(string $class_name [, bool $autoload=true]) - Checks if the class has been defined.' flags='130'/>
<tag menu='C' submenu='Classes/Object' inserttext='get_called_class()' hint='(PHP 5>=5.3.0) string get_called_class(void) - the "Late Static Binding" class name.' flags='130'/>
<tag menu='C' submenu='Classes/Object' inserttext='get_class(|)' hint='(PHP 4, PHP 5) string get_class([object $object=NULL]) - Returns the name of the class of an object.' flags='130'/>
<tag menu='C' submenu='Classes/Object' inserttext='get_class_methods(|)' hint="(PHP 4, PHP 5) array get_class_methods(mixed $class_name) - Gets the class methods' names." flags='130'/>
<tag menu='C' submenu='Classes/Object' inserttext='get_class_vars(|)' hint='(PHP 4, PHP 5) array get_class_vars(string $class_name) - Get the default properties of the class.' flags='130'/>
<tag menu='C' submenu='Classes/Object' inserttext='get_declared_classes()' hint='(PHP 4, PHP 5) array get_declared_classes(void) - Returns an array with the name of the defined classes.' flags='130'/>
<tag menu='C' submenu='Classes/Object' inserttext='get_declared_interfaces()' hint='(PHP 5) array get_declared_interfaces(void) - Returns an array of all declared interfaces.' flags='130'/>
<tag menu='C' submenu='Classes/Object' inserttext='get_object_vars(|)' hint='(PHP 4, PHP 5) array get_object_vars(object $object) - Gets the properties of the given object.' flags='130'/>
<tag menu='C' submenu='Classes/Object' inserttext='get_parent_class(|)' hint='(PHP 4, PHP 5) string get_parent_class([mixed $object]) - Retrieves the parent class name for object or class.' flags='130'/>
<tag menu='C' submenu='Classes/Object' inserttext='interface_exists(|)' hint='(PHP 5>=5.0.2) bool interface_exists(string $interface_name [, bool $autoload=true]) - Checks if the interface has been defined.' flags='130'/>
<tag menu='C' submenu='Classes/Object' inserttext='is_a(|)' hint='(PHP 4>=4.2.0, PHP 5) bool is_a(object $object, string $class_name) - Checks if the object is of this class or has this class as one of its parents.' flags='130'/>
<tag menu='C' submenu='Classes/Object' inserttext='is_subclass_of(|)' hint='(PHP 4, PHP 5) bool is_subclass_of(mixed $object, string $class_name) - Checks if the object has this class as one of its parents.' flags='130'/>
<tag menu='C' submenu='Classes/Object' inserttext='method_exists(|)' hint='(PHP 4, PHP 5) bool method_exists(mixed $object, string $method_name) - Checks if the class method exists.' flags='130'/>
<tag menu='C' submenu='Classes/Object' inserttext='property_exists(|)' hint='(PHP 5>=5.1.0) bool property_exists(mixed $class, string $property) - Checks if the object or class has a property.' flags='130'/>
<tag menu='C' submenu='Client URL Library' inserttext='curl_close(|)' hint='(PHP 4>=4.0.2, PHP 5) void curl_close(resource $ch) - Close a cURL session.' flags='130'/>
<tag menu='C' submenu='Client URL Library' inserttext='curl_copy_handle(|)' hint='(PHP 5) resource curl_copy_handle(resource $ch) - Copy a cURL handle along with all of its preferences.' flags='130'/>
<tag menu='C' submenu='Client URL Library' inserttext='curl_errno(|)' hint='(PHP 4>=4.0.3, PHP 5) int curl_errno(resource $ch) - Return the last error number.' flags='130'/>
<tag menu='C' submenu='Client URL Library' inserttext='curl_error(|)' hint='(PHP 4>=4.0.3, PHP 5) string curl_error(resource $ch) - Return a string containing the last error for the current session.' flags='130'/>
<tag menu='C' submenu='Client URL Library' inserttext='curl_exec(|)' hint='(PHP 4>=4.0.2, PHP 5) mixed curl_exec(resource $ch) - Perform a cURL session.' flags='130'/>
<tag menu='C' submenu='Client URL Library' inserttext='curl_getinfo(|)' hint='(PHP 4>=4.0.4, PHP 5) mixed curl_getinfo(resource $ch [, int $opt=0]) - Get information regarding a specific transfer.' flags='130'/>
<tag menu='C' submenu='Client URL Library' inserttext='curl_init(|)' hint='(PHP 4>=4.0.2, PHP 5) resource curl_init([string $url=NULL]) - Initialize a cURL session.' flags='130'/>
<tag menu='C' submenu='Client URL Library' inserttext='curl_multi_add_handle(|)' hint='(PHP 5) int curl_multi_add_handle(resource $mh, resource $ch) - Add a normal cURL handle to a cURL multi handle.' flags='130'/>
<tag menu='C' submenu='Client URL Library' inserttext='curl_multi_close(|)' hint='(PHP 5) void curl_multi_close(resource $mh) - Close a set of cURL handles.' flags='130'/>
<tag menu='C' submenu='Client URL Library' inserttext='curl_multi_exec(|)' hint='(PHP 5) int curl_multi_exec(resource $mh, int &amp;$still_running) - Run the sub-connections of the current cURL handle.' flags='130'/>
<tag menu='C' submenu='Client URL Library' inserttext='curl_multi_getcontent(|)' hint='(PHP 5) string curl_multi_getcontent(resource $ch) - Return the content of a cURL handle if CURLOPT_RETURNTRANSFER is set.' flags='130'/>
<tag menu='C' submenu='Client URL Library' inserttext='curl_multi_info_read(|)' hint='(PHP 5) array curl_multi_info_read(resource $mh [, int &amp;$msgs_in_queue=NULL]) - Get information about the current transfers.' flags='130'/>
<tag menu='C' submenu='Client URL Library' inserttext='curl_multi_init()' hint='(PHP 5) resource curl_multi_init(void) - Returns a new cURL multi handle.' flags='130'/>
<tag menu='C' submenu='Client URL Library' inserttext='curl_multi_remove_handle(|)' hint='(PHP 5) int curl_multi_remove_handle(resource $mh, resource $ch) - Remove a multi handle from a set of cURL handles.' flags='130'/>
<tag menu='C' submenu='Client URL Library' inserttext='curl_multi_select(|)' hint='(PHP 5) int curl_multi_select(resource $mh [, float $timeout=1.0]) - Wait for activity on any curl_multi connection.' flags='130'/>
<tag menu='C' submenu='Client URL Library' inserttext='curl_setopt(|)' hint='(PHP 4>=4.0.2, PHP 5) bool curl_setopt(resource $ch, int $option, mixed $value) - Set an option for a cURL transfer.' flags='130'/>
<tag menu='C' submenu='Client URL Library' inserttext='curl_setopt_array(|)' hint='(PHP 5>=5.1.3) bool curl_setopt_array(resource $ch, array $options) - Set multiple options for a cURL transfer.' flags='130'/>
<tag menu='C' submenu='Client URL Library' inserttext='curl_version(|)' hint='(PHP 4>=4.0.2, PHP 5) array curl_version([int $age=CURLVERSION_NOW]) - Gets cURL version information.' flags='130'/>
<tag menu='C' submenu='Collator class' inserttext='Collator::__construct(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) Create a collator.' flags='130'/>
<tag menu='C' submenu='Collator class' inserttext='Collator::asort(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) bool Collator::asort(array &amp;$arr [, int $sort_flag]) - Sort array maintaining index association.' flags='130'/>
<tag menu='C' submenu='Collator class' inserttext='Collator::compare(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) int Collator::compare(string $str1, string $str2) - Compare two Unicode strings.' flags='130'/>
<tag menu='C' submenu='Collator class' inserttext='Collator::create(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) static Collator Collator::create(string $locale) - Create a collator.' flags='130'/>
<tag menu='C' submenu='Collator class' inserttext='Collator::getAttribute(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) int Collator::getAttribute(int $attr) - Get collation attribute value.' flags='130'/>
<tag menu='C' submenu='Collator class' inserttext='Collator::getErrorCode()' hint="(PHP 5>=5.3.0, PECL intl>=1.0.0) int Collator::getErrorCode(void) - Get collator's last error code." flags='130'/>
<tag menu='C' submenu='Collator class' inserttext='Collator::getErrorMessage()' hint="(PHP 5>=5.3.0, PECL intl>=1.0.0) string Collator::getErrorMessage(void) - Get text for collator's last error code." flags='130'/>
<tag menu='C' submenu='Collator class' inserttext='Collator::getLocale(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) string Collator::getLocale([int $type]) - Get the locale name of the collator.' flags='130'/>
<tag menu='C' submenu='Collator class' inserttext='Collator::getStrength()' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) int Collator::getStrength(void) - Get current collation strength.' flags='130'/>
<tag menu='C' submenu='Collator class' inserttext='Collator::setAttribute(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) bool Collator::setAttribute(int $attr, int $val) - Set collation attribute.' flags='130'/>
<tag menu='C' submenu='Collator class' inserttext='Collator::setStrength(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) bool Collator::setStrength(int $strength) - Set collation strength.' flags='130'/>
<tag menu='C' submenu='Collator class' inserttext='Collator::sort(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) bool Collator::sort(array &amp;$arr [, int $sort_flag]) - Sort array using specified collator.' flags='130'/>
<tag menu='C' submenu='Collator class' inserttext='Collator::sortWithSortKeys(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) bool Collator::sortWithSortKeys(array &amp;$arr) - Sort array using specified collator and sort keys.' flags='130'/>
<tag menu='C' submenu='Countable interface' inserttext='Countable::count()' hint='(PHP 5>=5.1.0) abstract public int Countable::count(void) - Count elements of an object.' flags='130'/>
<tag menu='C' submenu='Ctype' inserttext='ctype_alnum(|)' hint='(PHP 4>=4.0.4, PHP 5) bool ctype_alnum(string $text) - Check for alphanumeric character(s).' flags='130'/>
<tag menu='C' submenu='Ctype' inserttext='ctype_alpha(|)' hint='(PHP 4>=4.0.4, PHP 5) bool ctype_alpha(string $text) - Check for alphabetic character(s).' flags='130'/>
<tag menu='C' submenu='Ctype' inserttext='ctype_cntrl(|)' hint='(PHP 4>=4.0.4, PHP 5) bool ctype_cntrl(string $text) - Check for control character(s).' flags='130'/>
<tag menu='C' submenu='Ctype' inserttext='ctype_digit(|)' hint='(PHP 4>=4.0.4, PHP 5) bool ctype_digit(string $text) - Check for numeric character(s).' flags='130'/>
<tag menu='C' submenu='Ctype' inserttext='ctype_graph(|)' hint='(PHP 4>=4.0.4, PHP 5) bool ctype_graph(string $text) - Check for any printable character(s) except space.' flags='130'/>
<tag menu='C' submenu='Ctype' inserttext='ctype_lower(|)' hint='(PHP 4>=4.0.4, PHP 5) bool ctype_lower(string $text) - Check for lowercase character(s).' flags='130'/>
<tag menu='C' submenu='Ctype' inserttext='ctype_print(|)' hint='(PHP 4>=4.0.4, PHP 5) bool ctype_print(string $text) - Check for printable character(s).' flags='130'/>
<tag menu='C' submenu='Ctype' inserttext='ctype_punct(|)' hint='(PHP 4>=4.0.4, PHP 5) bool ctype_punct(string $text) - Check for any printable character which is not whitespace or an alphanumeric character.' flags='130'/>
<tag menu='C' submenu='Ctype' inserttext='ctype_space(|)' hint='(PHP 4>=4.0.4, PHP 5) bool ctype_space(string $text) - Check for whitespace character(s).' flags='130'/>
<tag menu='C' submenu='Ctype' inserttext='ctype_upper(|)' hint='(PHP 4>=4.0.4, PHP 5) bool ctype_upper(string $text) - Check for uppercase character(s).' flags='130'/>
<tag menu='C' submenu='Ctype' inserttext='ctype_xdigit(|)' hint='(PHP 4>=4.0.4, PHP 5) bool ctype_xdigit(string $text) - Check for character(s) representing a hexadecimal digit.' flags='130'/>
<tag menu='C' submenu='Cyrus' inserttext='cyrus_authenticate(|)' hint='(PHP 4>=4.1.0, PECL cyrus 1.0) void cyrus_authenticate(resource $connection [, string $mechlist [, string $service [, string $user [, int $minssf [, int $maxssf [, string $authname [, string $password ]]]]]]]) - Authenticate against a Cyrus IMAP server.' flags='130'/>
<tag menu='C' submenu='Cyrus' inserttext='cyrus_bind(|)' hint='(PHP 4>=4.1.0, PECL cyrus 1.0) bool cyrus_bind(resource $connection, array $callbacks) - Bind callbacks to a Cyrus IMAP connection.' flags='130'/>
<tag menu='C' submenu='Cyrus' inserttext='cyrus_close(|)' hint='(PHP 4>=4.1.0, PECL cyrus 1.0) bool cyrus_close(resource $connection) - Close connection to a Cyrus IMAP server.' flags='130'/>
<tag menu='C' submenu='Cyrus' inserttext='cyrus_connect(|)' hint='(PHP 4>=4.1.0, PECL cyrus 1.0) resource cyrus_connect([string $host [, string $port [, int $flags ]]]) - Connect to a Cyrus IMAP server.' flags='130'/>
<tag menu='C' submenu='Cyrus' inserttext='cyrus_query(|)' hint='(PHP 4>=4.1.0, PECL cyrus 1.0) array cyrus_query(resource $connection, string $query) - Send a query to a Cyrus IMAP server.' flags='130'/>
<tag menu='C' submenu='Cyrus' inserttext='cyrus_unbind(|)' hint='(PHP 4>=4.1.0, PECL cyrus 1.0) bool cyrus_unbind(resource $connection, string $trigger_name) - Unbind ...' flags='130'/>
<tag menu='D' submenu='DBA' inserttext='dba_close(|)' hint='(PHP 4, PHP 5) void dba_close(resource $handle) - Close a DBA database.' flags='130'/>
<tag menu='D' submenu='DBA' inserttext='dba_delete(|)' hint='(PHP 4, PHP 5) bool dba_delete(string $key, resource $handle) - Delete DBA entry specified by key.' flags='130'/>
<tag menu='D' submenu='DBA' inserttext='dba_exists(|)' hint='(PHP 4, PHP 5) bool dba_exists(string $key, resource $handle) - Check whether key exists.' flags='130'/>
<tag menu='D' submenu='DBA' inserttext='dba_fetch(|)' hint='(PHP 4, PHP 5) string dba_fetch(string $key, resource $handle) - Fetch data specified by key.' flags='130'/>
<tag menu='D' submenu='DBA' inserttext='dba_firstkey(|)' hint='(PHP 4, PHP 5) string dba_firstkey(resource $handle) - Fetch first key.' flags='130'/>
<tag menu='D' submenu='DBA' inserttext='dba_handlers(|)' hint='(PHP 4>=4.3.0, PHP 5) array dba_handlers([bool $full_info=false]) - List all the handlers available.' flags='130'/>
<tag menu='D' submenu='DBA' inserttext='dba_insert(|)' hint='(PHP 4, PHP 5) bool dba_insert(string $key, string $value, resource $handle) - Insert entry.' flags='130'/>
<tag menu='D' submenu='DBA' inserttext='dba_key_split(|)' hint='(PHP 5) mixed dba_key_split(mixed $key) - Splits a key in string representation into array representation.' flags='130'/>
<tag menu='D' submenu='DBA' inserttext='dba_list()' hint='(PHP 4>=4.3.0, PHP 5) array dba_list(void) - List all open database files.' flags='130'/>
<tag menu='D' submenu='DBA' inserttext='dba_nextkey(|)' hint='(PHP 4, PHP 5) string dba_nextkey(resource $handle) - Fetch next key.' flags='130'/>
<tag menu='D' submenu='DBA' inserttext='dba_open(|)' hint='(PHP 4, PHP 5) resource dba_open(string $path, string $mode [, string $handler [, mixed $... ]]) - Open database.' flags='130'/>
<tag menu='D' submenu='DBA' inserttext='dba_optimize(|)' hint='(PHP 4, PHP 5) bool dba_optimize(resource $handle) - Optimize database.' flags='130'/>
<tag menu='D' submenu='DBA' inserttext='dba_popen(|)' hint='(PHP 4, PHP 5) resource dba_popen(string $path, string $mode [, string $handler [, mixed $... ]]) - Open database persistently.' flags='130'/>
<tag menu='D' submenu='DBA' inserttext='dba_replace(|)' hint='(PHP 4, PHP 5) bool dba_replace(string $key, string $value, resource $handle) - Replace or insert entry.' flags='130'/>
<tag menu='D' submenu='DBA' inserttext='dba_sync(|)' hint='(PHP 4, PHP 5) bool dba_sync(resource $handle) - Synchronize database.' flags='130'/>
<tag menu='D' submenu='Date/Time-->>c - date_timestamp_g' inserttext='checkdate(|)' hint='(PHP 4, PHP 5) bool checkdate(int $month, int $day, int $year) - Validate a Gregorian date.' flags='130'/>
<tag menu='D' submenu='Date/Time-->>c - date_timestamp_g' inserttext='date(|)' hint='(PHP 4, PHP 5) string date(string $format [, int $timestamp]) - Format a local time/date.' flags='130'/>
<tag menu='D' submenu='Date/Time-->>c - date_timestamp_g' inserttext='date_add(|)' hint='(PHP 5>=5.3.0) Alias of DateTime::add().' flags='130'/>
<tag menu='D' submenu='Date/Time-->>c - date_timestamp_g' inserttext='date_create(|)' hint='(PHP 5>=5.2.0) Alias of DateTime::__construct().' flags='130'/>
<tag menu='D' submenu='Date/Time-->>c - date_timestamp_g' inserttext='date_create_from_format(|)' hint='(PHP 5>=5.3.0) Alias of DateTime::createFromFormat().' flags='130'/>
<tag menu='D' submenu='Date/Time-->>c - date_timestamp_g' inserttext='date_date_set(|)' hint='(PHP 5>=5.2.0) Alias of DateTime::setDate().' flags='130'/>
<tag menu='D' submenu='Date/Time-->>c - date_timestamp_g' inserttext='date_default_timezone_get()' hint='(PHP 5>=5.1.0) string date_default_timezone_get(void) - Gets the default timezone used by all date/time functions in a script.' flags='130'/>
<tag menu='D' submenu='Date/Time-->>c - date_timestamp_g' inserttext='date_default_timezone_set(|)' hint='(PHP 5>=5.1.0) bool date_default_timezone_set(string $timezone_identifier) - Sets the default timezone used by all date/time functions in a script.' flags='130'/>
<tag menu='D' submenu='Date/Time-->>c - date_timestamp_g' inserttext='date_diff(|)' hint='(PHP 5>=5.3.0) Alias of DateTime::diff().' flags='130'/>
<tag menu='D' submenu='Date/Time-->>c - date_timestamp_g' inserttext='date_format(|)' hint='(PHP 5>=5.2.0) Alias of DateTime::format().' flags='130'/>
<tag menu='D' submenu='Date/Time-->>c - date_timestamp_g' inserttext='date_get_last_errors(|)' hint='(PHP 5>=5.3.0) Alias of DateTime::getLastErrors().' flags='130'/>
<tag menu='D' submenu='Date/Time-->>c - date_timestamp_g' inserttext='date_interval_create_from_date_string(|)' hint='(PHP 5>=5.3.0) Alias of DateInterval::createFromDateString().' flags='130'/>
<tag menu='D' submenu='Date/Time-->>c - date_timestamp_g' inserttext='date_interval_format(|)' hint='(PHP 5>=5.3.0) Alias of DateInterval::format().' flags='130'/>
<tag menu='D' submenu='Date/Time-->>c - date_timestamp_g' inserttext='date_isodate_set(|)' hint='(PHP 5>=5.2.0) Alias of DateTime::setISODate().' flags='130'/>
<tag menu='D' submenu='Date/Time-->>c - date_timestamp_g' inserttext='date_modify(|)' hint='(PHP 5>=5.2.0) Alias of DateTime::modify().' flags='130'/>
<tag menu='D' submenu='Date/Time-->>c - date_timestamp_g' inserttext='date_offset_get(|)' hint='(PHP 5>=5.2.0) Alias of DateTime::getOffset().' flags='130'/>
<tag menu='D' submenu='Date/Time-->>c - date_timestamp_g' inserttext='date_parse(|)' hint='(PHP 5>=5.2.0) array date_parse(string $date) - Returns associative array with detailed info about given date.' flags='130'/>
<tag menu='D' submenu='Date/Time-->>c - date_timestamp_g' inserttext='date_parse_from_format(|)' hint='(PHP 5>=5.3.0) array date_parse_from_format(string $format, string $date) - Get info about given date.' flags='130'/>
<tag menu='D' submenu='Date/Time-->>c - date_timestamp_g' inserttext='date_sub(|)' hint='(PHP 5>=5.3.0) Alias of DateTime::sub().' flags='130'/>
<tag menu='D' submenu='Date/Time-->>c - date_timestamp_g' inserttext='date_sun_info(|)' hint='(PHP 5>=5.1.2) array date_sun_info(int $time, float $latitude, float $longitude) - Returns an array with information about sunset/sunrise and twilight begin/end.' flags='130'/>
<tag menu='D' submenu='Date/Time-->>c - date_timestamp_g' inserttext='date_sunrise(|)' hint='(PHP 5) mixed date_sunrise(int $timestamp [, int $format=SUNFUNCS_RET_STRING [, float $latitude=ini_get("date.default_latitude") [, float $longitude=ini_get("date.default_longitude") [, float $zenith=ini_get("date.sunrise_zenith") [, float $gmt_offset=0 ]]]]]) - Returns time of sunrise for a given day and location.' flags='130'/>
<tag menu='D' submenu='Date/Time-->>c - date_timestamp_g' inserttext='date_sunset(|)' hint='(PHP 5) mixed date_sunset(int $timestamp [, int $format=SUNFUNCS_RET_STRING [, float $latitude=ini_get("date.default_latitude") [, float $longitude=ini_get("date.default_longitude") [, float $zenith=ini_get("date.sunset_zenith") [, float $gmt_offset=0 ]]]]]) - Returns time of sunset for a given day and location.' flags='130'/>
<tag menu='D' submenu='Date/Time-->>c - date_timestamp_g' inserttext='date_time_set(|)' hint='(PHP 5>=5.2.0) Alias of DateTime::setTime().' flags='130'/>
<tag menu='D' submenu='Date/Time-->>c - date_timestamp_g' inserttext='date_timestamp_get(|)' hint='(PHP 5>=5.3.0) Alias of DateTime::getTimestamp().' flags='130'/>
<tag menu='D' submenu='Date/Time-->>date_timestamp_s - t' inserttext='date_timestamp_set(|)' hint='(PHP 5>=5.3.0) Alias of DateTime::setTimestamp().' flags='130'/>
<tag menu='D' submenu='Date/Time-->>date_timestamp_s - t' inserttext='date_timezone_get(|)' hint='(PHP 5>=5.2.0) Alias of DateTime::getTimezone().' flags='130'/>
<tag menu='D' submenu='Date/Time-->>date_timestamp_s - t' inserttext='date_timezone_set(|)' hint='(PHP 5>=5.2.0) Alias of DateTime::setTimezone().' flags='130'/>
<tag menu='D' submenu='Date/Time-->>date_timestamp_s - t' inserttext='getdate(|)' hint='(PHP 4, PHP 5) array getdate([int $timestamp=time()]) - Get date/time information.' flags='130'/>
<tag menu='D' submenu='Date/Time-->>date_timestamp_s - t' inserttext='gettimeofday(|)' hint='(PHP 4, PHP 5) mixed gettimeofday([bool $return_float]) - Get current time.' flags='130'/>
<tag menu='D' submenu='Date/Time-->>date_timestamp_s - t' inserttext='gmdate(|)' hint='(PHP 4, PHP 5) string gmdate(string $format [, int $timestamp]) - Format a GMT/UTC date/time.' flags='130'/>
<tag menu='D' submenu='Date/Time-->>date_timestamp_s - t' inserttext='gmmktime(|)' hint='(PHP 4, PHP 5) int gmmktime([int $hour=gmdate("H") [, int $minute=gmdate("i") [, int $second=gmdate("s") [, int $month=gmdate("n") [, int $day=gmdate("j") [, int $year=gmdate("Y") [, int $is_dst=-1 ]]]]]]]) - Get Unix timestamp for a GMT date.' flags='130'/>
<tag menu='D' submenu='Date/Time-->>date_timestamp_s - t' inserttext='gmstrftime(|)' hint='(PHP 4, PHP 5) string gmstrftime(string $format [, int $timestamp=time()]) - Format a GMT/UTC time/date according to locale settings.' flags='130'/>
<tag menu='D' submenu='Date/Time-->>date_timestamp_s - t' inserttext='idate(|)' hint='(PHP 5) int idate(string $format [, int $timestamp=time()]) - Format a local time/date as integer.' flags='130'/>
<tag menu='D' submenu='Date/Time-->>date_timestamp_s - t' inserttext='localtime(|)' hint='(PHP 4, PHP 5) array localtime([int $timestamp=time() [, bool $is_associative=false ]]) - Get the local time.' flags='130'/>
<tag menu='D' submenu='Date/Time-->>date_timestamp_s - t' inserttext='microtime(|)' hint='(PHP 4, PHP 5) mixed microtime([bool $get_as_float]) - Return current Unix timestamp with microseconds.' flags='130'/>
<tag menu='D' submenu='Date/Time-->>date_timestamp_s - t' inserttext='mktime(|)' hint='(PHP 4, PHP 5) int mktime([int $hour=date("H") [, int $minute=date("i") [, int $second=date("s") [, int $month=date("n") [, int $day=date("j") [, int $year=date("Y") [, int $is_dst=-1 ]]]]]]]) - Get Unix timestamp for a date.' flags='130'/>
<tag menu='D' submenu='Date/Time-->>date_timestamp_s - t' inserttext='strftime(|)' hint='(PHP 4, PHP 5) string strftime(string $format [, int $timestamp=time()]) - Format a local time/date according to locale settings.' flags='130'/>
<tag menu='D' submenu='Date/Time-->>date_timestamp_s - t' inserttext='strtotime(|)' hint='(PHP 4, PHP 5) int strtotime(string $time [, int $now]) - Parse about any English textual datetime description into a Unix timestamp.' flags='130'/>
<tag menu='D' submenu='Date/Time-->>date_timestamp_s - t' inserttext='time()' hint='(PHP 4, PHP 5) int time(void) - Return current Unix timestamp.' flags='130'/>
<tag menu='D' submenu='Date/Time-->>date_timestamp_s - t' inserttext='timezone_abbreviations_list(|)' hint='(PHP 5>=5.1.0) Alias of DateTimeZone::listAbbreviations().' flags='130'/>
<tag menu='D' submenu='Date/Time-->>date_timestamp_s - t' inserttext='timezone_identifiers_list(|)' hint='(PHP 5>=5.1.0) Alias of DateTimeZone::listIdentifiers().' flags='130'/>
<tag menu='D' submenu='Date/Time-->>date_timestamp_s - t' inserttext='timezone_location_get(|)' hint='(PHP 5>=5.3.0) Alias of DateTimeZone::getLocation().' flags='130'/>
<tag menu='D' submenu='Date/Time-->>date_timestamp_s - t' inserttext='timezone_name_from_abbr(|)' hint='(PHP 5>=5.1.3) string timezone_name_from_abbr(string $abbr [, int $gmtOffset=-1 [, int $isdst=-1 ]]) - Returns the timezone name from abbreviation.' flags='130'/>
<tag menu='D' submenu='Date/Time-->>date_timestamp_s - t' inserttext='timezone_name_get(|)' hint='(PHP 5>=5.1.0) Alias of DateTimeZone::getName().' flags='130'/>
<tag menu='D' submenu='Date/Time-->>date_timestamp_s - t' inserttext='timezone_offset_get(|)' hint='(PHP 5>=5.1.0) Alias of DateTimeZone::getOffset().' flags='130'/>
<tag menu='D' submenu='Date/Time-->>date_timestamp_s - t' inserttext='timezone_open(|)' hint='(PHP 5>=5.1.0) Alias of DateTimeZone::__construct().' flags='130'/>
<tag menu='D' submenu='Date/Time-->>date_timestamp_s - t' inserttext='timezone_transitions_get(|)' hint='(PHP 5>=5.2.0) Alias of DateTimeZone::getTransitions().' flags='130'/>
<tag menu='D' submenu='Date/Time-->>date_timestamp_s - t' inserttext='timezone_version_get()' hint='(PHP 5>=5.3.0) string timezone_version_get(void) - Gets the version of the timezonedb.' flags='130'/>
<tag menu='D' submenu='DateInterval class' inserttext='DateInterval::__construct(|)' hint='(PHP 5>=5.3.0) Creates new DateInterval object.' flags='130'/>
<tag menu='D' submenu='DateInterval class' inserttext='DateInterval::createFromDateString(|)' hint='(PHP 5>=5.3.0) public static DateInterval DateInterval::createFromDateString(string $time) - Sets up a DateInterval from the relative parts of the string.' flags='130'/>
<tag menu='D' submenu='DateInterval class' inserttext='DateInterval::format(|)' hint='(PHP 5>=5.3.0) public string DateInterval::format(string $format) - Formats the interval.' flags='130'/>
<tag menu='D' submenu='DatePeriod class' inserttext='DatePeriod::__construct(|)' hint='(PHP 5>=5.3.0) Creates new DatePeriod object.' flags='130'/>
<tag menu='D' submenu='DateTime class' inserttext='DateTime::__construct(|)' hint='(PHP 5>=5.2.0) DateTime date_create([string $time="now" [, DateTimeZone $timezone=NULL ]]) - Returns new DateTime object.' flags='130'/>
<tag menu='D' submenu='DateTime class' inserttext='DateTime::__set_state(|)' hint='(PHP 5>=5.2.0) public static DateTime DateTime::__set_state(array $array) - The __set_state handler.' flags='130'/>
<tag menu='D' submenu='DateTime class' inserttext='DateTime::__wakeup()' hint='(PHP 5>=5.2.0) public DateTime DateTime::__wakeup(void) - The __wakeup handler.' flags='130'/>
<tag menu='D' submenu='DateTime class' inserttext='DateTime::add(|)' hint='(PHP 5>=5.3.0) public DateTime DateTime::add(DateInterval $interval) - Adds an amount of days, months, years, hours, minutes and seconds to a DateTime object.' flags='130'/>
<tag menu='D' submenu='DateTime class' inserttext='DateTime::createFromFormat(|)' hint='(PHP 5>=5.3.0) public static DateTime DateTime::createFromFormat(string $format, string $time [, DateTimeZone $timezone]) - Returns new DateTime object formatted according to the specified format.' flags='130'/>
<tag menu='D' submenu='DateTime class' inserttext='DateTime::diff(|)' hint='(PHP 5>=5.3.0) public DateInterval DateTime::diff(DateTime $datetime2 [, bool $absolute=false]) - Returns the difference between two DateTime objects.' flags='130'/>
<tag menu='D' submenu='DateTime class' inserttext='DateTime::format(|)' hint='(PHP 5>=5.2.0) public string DateTime::format(string $format) - Returns date formatted according to given format.' flags='130'/>
<tag menu='D' submenu='DateTime class' inserttext='DateTime::getLastErrors()' hint='(PHP 5>=5.3.0) public static array DateTime::getLastErrors(void) - Returns the warnings and errors.' flags='130'/>
<tag menu='D' submenu='DateTime class' inserttext='DateTime::getOffset()' hint='(PHP 5>=5.2.0) public int DateTime::getOffset(void) - Returns the timezone offset.' flags='130'/>
<tag menu='D' submenu='DateTime class' inserttext='DateTime::getTimestamp()' hint='(PHP 5>=5.3.0) public int DateTime::getTimestamp(void) - Gets the Unix timestamp.' flags='130'/>
<tag menu='D' submenu='DateTime class' inserttext='DateTime::getTimezone()' hint='(PHP 5>=5.2.0) public DateTimeZone DateTime::getTimezone(void) - Return time zone relative to given DateTime.' flags='130'/>
<tag menu='D' submenu='DateTime class' inserttext='DateTime::modify(|)' hint='(PHP 5>=5.2.0) public DateTime DateTime::modify(string $modify) - Alters the timestamp.' flags='130'/>
<tag menu='D' submenu='DateTime class' inserttext='DateTime::setDate(|)' hint='(PHP 5>=5.2.0) public DateTime DateTime::setDate(int $year, int $month, int $day) - Sets the date.' flags='130'/>
<tag menu='D' submenu='DateTime class' inserttext='DateTime::setISODate(|)' hint='(PHP 5>=5.2.0) public DateTime DateTime::setISODate(int $year, int $week [, int $day=1]) - Sets the ISO date.' flags='130'/>
<tag menu='D' submenu='DateTime class' inserttext='DateTime::setTime(|)' hint='(PHP 5>=5.2.0) public DateTime DateTime::setTime(int $hour, int $minute [, int $second=0]) - Sets the time.' flags='130'/>
<tag menu='D' submenu='DateTime class' inserttext='DateTime::setTimestamp(|)' hint='(PHP 5>=5.3.0) public DateTime DateTime::setTimestamp(int $unixtimestamp) - Sets the date and time based on an Unix timestamp.' flags='130'/>
<tag menu='D' submenu='DateTime class' inserttext='DateTime::setTimezone(|)' hint='(PHP 5>=5.2.0) public DateTime DateTime::setTimezone(DateTimeZone $timezone) - Sets the time zone for the DateTime object.' flags='130'/>
<tag menu='D' submenu='DateTime class' inserttext='DateTime::sub(|)' hint='(PHP 5>=5.3.0) public DateTime DateTime::sub(DateInterval $interval) - Subtracts an amount of days, months, years, hours, minutes and seconds from a DateTime object.' flags='130'/>
<tag menu='D' submenu='DateTimeZone class' inserttext='DateTimeZone::__construct(|)' hint='(PHP 5>=5.2.0) DateTimeZone timezone_open(string $timezone) - Creates new DateTimeZone object.' flags='130'/>
<tag menu='D' submenu='DateTimeZone class' inserttext='DateTimeZone::getLocation()' hint='(PHP 5>=5.3.0) public array DateTimeZone::getLocation(void) - Returns location information for a timezone.' flags='130'/>
<tag menu='D' submenu='DateTimeZone class' inserttext='DateTimeZone::getName()' hint='(PHP 5>=5.2.0) public string DateTimeZone::getName(void) - Returns the name of the timezone.' flags='130'/>
<tag menu='D' submenu='DateTimeZone class' inserttext='DateTimeZone::getOffset(|)' hint='(PHP 5>=5.2.0) public int DateTimeZone::getOffset(DateTime $datetime) - Returns the timezone offset from GMT.' flags='130'/>
<tag menu='D' submenu='DateTimeZone class' inserttext='DateTimeZone::getTransitions(|)' hint='(PHP 5>=5.2.0) public array DateTimeZone::getTransitions([int $timestamp_begin [, int $timestamp_end ]]) - Returns all transitions for the timezone.' flags='130'/>
<tag menu='D' submenu='DateTimeZone class' inserttext='DateTimeZone::listAbbreviations()' hint='(PHP 5>=5.2.0) public static array DateTimeZone::listAbbreviations(void) - Returns associative array containing dst, offset and the timezone name.' flags='130'/>
<tag menu='D' submenu='DateTimeZone class' inserttext='DateTimeZone::listIdentifiers(|)' hint='(PHP 5>=5.2.0) public static array DateTimeZone::listIdentifiers([int $what=DateTimeZone::ALL [, string $country=NULL ]]) - Returns numerically index array with all timezone identifiers.' flags='130'/>
<tag menu='D' submenu='Direct IO' inserttext='dio_close(|)' hint='(PHP 4>=4.2.0, PHP 5&lt;=5.0.5) void dio_close(resource $fd) - Closes the file descriptor given by fd.' flags='130'/>
<tag menu='D' submenu='Direct IO' inserttext='dio_fcntl(|)' hint='(PHP 4>=4.2.0, PHP 5&lt;=5.0.5) mixed dio_fcntl(resource $fd, int $cmd [, mixed $args]) - Performs a c library fcntl on fd.' flags='130'/>
<tag menu='D' submenu='Direct IO' inserttext='dio_open(|)' hint='(PHP 4>=4.2.0, PHP 5&lt;=5.0.5) resource dio_open(string $filename, int $flags [, int $mode=0]) - Opens a file (creating it if necessary) at a lower level than the C library input/ouput stream functions allow.' flags='130'/>
<tag menu='D' submenu='Direct IO' inserttext='dio_read(|)' hint='(PHP 4>=4.2.0, PHP 5&lt;=5.0.5) string dio_read(resource $fd [, int $len=1024]) - Reads bytes from a file descriptor.' flags='130'/>
<tag menu='D' submenu='Direct IO' inserttext='dio_seek(|)' hint='(PHP 4>=4.2.0, PHP 5&lt;=5.0.5) int dio_seek(resource $fd, int $pos [, int $whence=SEEK_SET]) - Seeks to pos on fd from whence.' flags='130'/>
<tag menu='D' submenu='Direct IO' inserttext='dio_stat(|)' hint='(PHP 4>=4.2.0, PHP 5&lt;=5.0.5) array dio_stat(resource $fd) - Gets stat information about the file descriptor fd.' flags='130'/>
<tag menu='D' submenu='Direct IO' inserttext='dio_tcsetattr(|)' hint='(PHP 4>=4.3.0, PHP 5&lt;=5.0.5) bool dio_tcsetattr(resource $fd, array $options) - Sets terminal attributes and baud rate for a serial port.' flags='130'/>
<tag menu='D' submenu='Direct IO' inserttext='dio_truncate(|)' hint='(PHP 4>=4.2.0, PHP 5&lt;=5.0.5) bool dio_truncate(resource $fd, int $offset) - Truncates file descriptor fd to offset bytes.' flags='130'/>
<tag menu='D' submenu='Direct IO' inserttext='dio_write(|)' hint='(PHP 4>=4.2.0, PHP 5&lt;=5.0.5) int dio_write(resource $fd, string $data [, int $len=0]) - Writes data to fd with optional truncation at length.' flags='130'/>
<tag menu='D' submenu='Directory' inserttext='chdir(|)' hint='(PHP 4, PHP 5) bool chdir(string $directory) - Change directory.' flags='130'/>
<tag menu='D' submenu='Directory' inserttext='chroot(|)' hint='(PHP 4>=4.0.5, PHP 5) bool chroot(string $directory) - Change the root directory.' flags='130'/>
<tag menu='D' submenu='Directory' inserttext='closedir(|)' hint='(PHP 4, PHP 5) void closedir([resource $dir_handle]) - Close directory handle.' flags='130'/>
<tag menu='D' submenu='Directory' inserttext='dir(|)' hint='(PHP 4, PHP 5) string read(void) - Return an instance of the Directory class.' flags='130'/>
<tag menu='D' submenu='Directory' inserttext='getcwd()' hint='(PHP 4, PHP 5) string getcwd(void) - Gets the current working directory.' flags='130'/>
<tag menu='D' submenu='Directory' inserttext='opendir(|)' hint='(PHP 4, PHP 5) resource opendir(string $path [, resource $context]) - Open directory handle.' flags='130'/>
<tag menu='D' submenu='Directory' inserttext='readdir(|)' hint='(PHP 4, PHP 5) string readdir([resource $dir_handle]) - Read entry from directory handle.' flags='130'/>
<tag menu='D' submenu='Directory' inserttext='rewinddir(|)' hint='(PHP 4, PHP 5) void rewinddir([resource $dir_handle]) - Rewind directory handle.' flags='130'/>
<tag menu='D' submenu='Directory' inserttext='scandir(|)' hint='(PHP 5) array scandir(string $directory [, int $sorting_order=0 [, resource $context ]]) - List files and directories inside the specified path.' flags='130'/>
<tag menu='D' submenu='DirectoryIterator class' inserttext='DirectoryIterator::__construct(|)' hint='(PHP 5) Constructs a new directory iterator from a path.' flags='130'/>
<tag menu='D' submenu='DirectoryIterator class' inserttext='DirectoryIterator::__toString()' hint='(PHP 5) public string DirectoryIterator::__toString(void) - Get file name as a string.' flags='130'/>
<tag menu='D' submenu='DirectoryIterator class' inserttext='DirectoryIterator::current()' hint='(PHP 5) public DirectoryIterator DirectoryIterator::current(void) - Return the current DirectoryIterator item.' flags='130'/>
<tag menu='D' submenu='DirectoryIterator class' inserttext='DirectoryIterator::getATime()' hint='(PHP 5) public int DirectoryIterator::getATime(void) - Get last access time of the current DirectoryIterator item.' flags='130'/>
<tag menu='D' submenu='DirectoryIterator class' inserttext='DirectoryIterator::getBasename(|)' hint='(PHP 5>=5.2.2) public string DirectoryIterator::getBasename([string $suffix]) - Get base name of current DirectoryIterator item.' flags='130'/>
<tag menu='D' submenu='DirectoryIterator class' inserttext='DirectoryIterator::getCTime()' hint='(PHP 5) public int DirectoryIterator::getCTime(void) - Get inode change time of the current DirectoryIterator item.' flags='130'/>
<tag menu='D' submenu='DirectoryIterator class' inserttext='DirectoryIterator::getFilename()' hint='(PHP 5) public string DirectoryIterator::getFilename(void) - Return file name of current DirectoryIterator item.' flags='130'/>
<tag menu='D' submenu='DirectoryIterator class' inserttext='DirectoryIterator::getGroup()' hint='(PHP 5) public int DirectoryIterator::getGroup(void) - Get group for the current DirectoryIterator item.' flags='130'/>
<tag menu='D' submenu='DirectoryIterator class' inserttext='DirectoryIterator::getInode()' hint='(PHP 5) public int DirectoryIterator::getInode(void) - Get inode for the current DirectoryIterator item.' flags='130'/>
<tag menu='D' submenu='DirectoryIterator class' inserttext='DirectoryIterator::getMTime()' hint='(PHP 5) public int DirectoryIterator::getMTime(void) - Get last modification time of current DirectoryIterator item.' flags='130'/>
<tag menu='D' submenu='DirectoryIterator class' inserttext='DirectoryIterator::getOwner()' hint='(PHP 5) public int DirectoryIterator::getOwner(void) - Get owner of current DirectoryIterator item.' flags='130'/>
<tag menu='D' submenu='DirectoryIterator class' inserttext='DirectoryIterator::getPath()' hint='(PHP 5) public string DirectoryIterator::getPath(void) - Get path of current Iterator item without filename.' flags='130'/>
<tag menu='D' submenu='DirectoryIterator class' inserttext='DirectoryIterator::getPathname()' hint='(PHP 5) public string DirectoryIterator::getPathname(void) - Return path and file name of current DirectoryIterator item.' flags='130'/>
<tag menu='D' submenu='DirectoryIterator class' inserttext='DirectoryIterator::getPerms()' hint='(PHP 5) public int DirectoryIterator::getPerms(void) - Get the permissions of current DirectoryIterator item.' flags='130'/>
<tag menu='D' submenu='DirectoryIterator class' inserttext='DirectoryIterator::getSize()' hint='(PHP 5) public int DirectoryIterator::getSize(void) - Get size of current DirectoryIterator item.' flags='130'/>
<tag menu='D' submenu='DirectoryIterator class' inserttext='DirectoryIterator::getType()' hint='(PHP 5) public string DirectoryIterator::getType(void) - Determine the type of the current DirectoryIterator item.' flags='130'/>
<tag menu='D' submenu='DirectoryIterator class' inserttext='DirectoryIterator::isDir()' hint='(PHP 5) public bool DirectoryIterator::isDir(void) - Determine if current DirectoryIterator item is a directory.' flags='130'/>
<tag menu='D' submenu='DirectoryIterator class' inserttext='DirectoryIterator::isDot()' hint="(PHP 5) public bool DirectoryIterator::isDot(void) - Determine if current DirectoryIterator item is '.' or '..'." flags='130'/>
<tag menu='D' submenu='DirectoryIterator class' inserttext='DirectoryIterator::isExecutable()' hint='(PHP 5) public bool DirectoryIterator::isExecutable(void) - Determine if current DirectoryIterator item is executable.' flags='130'/>
<tag menu='D' submenu='DirectoryIterator class' inserttext='DirectoryIterator::isFile()' hint='(PHP 5) public bool DirectoryIterator::isFile(void) - Determine if current DirectoryIterator item is a regular file.' flags='130'/>
<tag menu='D' submenu='DirectoryIterator class' inserttext='DirectoryIterator::isLink()' hint='(PHP 5) public bool DirectoryIterator::isLink(void) - Determine if current DirectoryIterator item is a symbolic link.' flags='130'/>
<tag menu='D' submenu='DirectoryIterator class' inserttext='DirectoryIterator::isReadable()' hint='(PHP 5) public bool DirectoryIterator::isReadable(void) - Determine if current DirectoryIterator item can be read.' flags='130'/>
<tag menu='D' submenu='DirectoryIterator class' inserttext='DirectoryIterator::isWritable()' hint='(PHP 5) public bool DirectoryIterator::isWritable(void) - Determine if current DirectoryIterator item can be written to.' flags='130'/>
<tag menu='D' submenu='DirectoryIterator class' inserttext='DirectoryIterator::key()' hint='(PHP 5) public string DirectoryIterator::key(void) - Return the key for the current DirectoryIterator item.' flags='130'/>
<tag menu='D' submenu='DirectoryIterator class' inserttext='DirectoryIterator::next()' hint='(PHP 5) public void DirectoryIterator::next(void) - Move forward to next DirectoryIterator item.' flags='130'/>
<tag menu='D' submenu='DirectoryIterator class' inserttext='DirectoryIterator::rewind()' hint='(PHP 5) public void DirectoryIterator::rewind(void) - Rewind the DirectoryIterator back to the start.' flags='130'/>
<tag menu='D' submenu='DirectoryIterator class' inserttext='DirectoryIterator::seek(|)' hint='(PHP 5>=5.3.0) public void DirectoryIterator::seek(int $position) - Seek to a DirectoryIterator item.' flags='130'/>
<tag menu='D' submenu='DirectoryIterator class' inserttext='DirectoryIterator::valid()' hint='(PHP 5) public bool DirectoryIterator::valid(void) - Check whether current DirectoryIterator position is a valid file.' flags='130'/>
<tag menu='D' submenu='dBase' inserttext='dbase_add_record(|)' hint='(PHP 4, PHP 5) bool dbase_add_record(int $dbase_identifier, array $record) - Adds a record to a database.' flags='130'/>
<tag menu='D' submenu='dBase' inserttext='dbase_close(|)' hint='(PHP 4, PHP 5) bool dbase_close(int $dbase_identifier) - Closes a database.' flags='130'/>
<tag menu='D' submenu='dBase' inserttext='dbase_create(|)' hint='(PHP 4, PHP 5) int dbase_create(string $filename, array $fields) - Creates a database.' flags='130'/>
<tag menu='D' submenu='dBase' inserttext='dbase_delete_record(|)' hint='(PHP 4, PHP 5) bool dbase_delete_record(int $dbase_identifier, int $record_number) - Deletes a record from a database.' flags='130'/>
<tag menu='D' submenu='dBase' inserttext='dbase_get_header_info(|)' hint='(PHP 5) array dbase_get_header_info(int $dbase_identifier) - Gets the header info of a database.' flags='130'/>
<tag menu='D' submenu='dBase' inserttext='dbase_get_record(|)' hint='(PHP 4, PHP 5) array dbase_get_record(int $dbase_identifier, int $record_number) - Gets a record from a database as an indexed array.' flags='130'/>
<tag menu='D' submenu='dBase' inserttext='dbase_get_record_with_names(|)' hint='(PHP 4, PHP 5) array dbase_get_record_with_names(int $dbase_identifier, int $record_number) - Gets a record from a database as an associative array.' flags='130'/>
<tag menu='D' submenu='dBase' inserttext='dbase_numfields(|)' hint='(PHP 4, PHP 5) int dbase_numfields(int $dbase_identifier) - Gets the number of fields of a database.' flags='130'/>
<tag menu='D' submenu='dBase' inserttext='dbase_numrecords(|)' hint='(PHP 4, PHP 5) int dbase_numrecords(int $dbase_identifier) - Gets the number of records in a database.' flags='130'/>
<tag menu='D' submenu='dBase' inserttext='dbase_open(|)' hint='(PHP 4, PHP 5) int dbase_open(string $filename, int $mode) - Opens a database.' flags='130'/>
<tag menu='D' submenu='dBase' inserttext='dbase_pack(|)' hint='(PHP 4, PHP 5) bool dbase_pack(int $dbase_identifier) - Packs a database.' flags='130'/>
<tag menu='D' submenu='dBase' inserttext='dbase_replace_record(|)' hint='(PHP 4, PHP 5) bool dbase_replace_record(int $dbase_identifier, array $record, int $record_number) - Replaces a record in a database.' flags='130'/>
<tag menu='D' submenu='dbx' inserttext='dbx_close(|)' hint='(PHP 4>=4.0.6, PHP 5&lt;=5.0.5, PECL dbx>=1.1.0) int dbx_close(object $link_identifier) - Close an open connection/database.' flags='130'/>
<tag menu='D' submenu='dbx' inserttext='dbx_compare(|)' hint='(PHP 4>=4.1.0, PHP 5&lt;=5.0.5, PECL dbx>=1.1.0) int dbx_compare(array $row_a, array $row_b, string $column_key [, int $flags=DBX_CMP_ASC | DBX_CMP_NATIVE]) - Compare two rows for sorting purposes.' flags='130'/>
<tag menu='D' submenu='dbx' inserttext='dbx_connect(|)' hint='(PHP 4>=4.0.6, PHP 5&lt;=5.0.5, PECL dbx>=1.1.0) object dbx_connect(mixed $module, string $host, string $database, string $username, string $password [, int $persistent]) - Open a connection/database.' flags='130'/>
<tag menu='D' submenu='dbx' inserttext='dbx_error(|)' hint='(PHP 4>=4.0.6, PHP 5&lt;=5.0.5, PECL dbx>=1.1.0) string dbx_error(object $link_identifier) - Report the error message of the latest function call in the module.' flags='130'/>
<tag menu='D' submenu='dbx' inserttext='dbx_escape_string(|)' hint='(PHP 4>=4.3.0, PHP 5&lt;=5.0.5, PECL dbx>=1.1.0) string dbx_escape_string(object $link_identifier, string $text) - Escape a string so it can safely be used in an sql-statement.' flags='130'/>
<tag menu='D' submenu='dbx' inserttext='dbx_fetch_row(|)' hint='(PHP 5&lt;=5.0.5, PECL dbx>=1.1.0) mixed dbx_fetch_row(object $result_identifier) - Fetches rows from a query-result that had the DBX_RESULT_UNBUFFERED flag set.' flags='130'/>
<tag menu='D' submenu='dbx' inserttext='dbx_query(|)' hint='(PHP 4>=4.0.6, PHP 5&lt;=5.0.5, PECL dbx>=1.1.0) mixed dbx_query(object $link_identifier, string $sql_statement [, int $flags]) - Send a query and fetch all results (if any).' flags='130'/>
<tag menu='D' submenu='dbx' inserttext='dbx_sort(|)' hint='(PHP 4>=4.0.6, PHP 5&lt;=5.0.5, PECL dbx>=1.1.0) bool dbx_sort(object $result, string $user_compare_function) - Sort a result from a dbx_query by a custom sort function.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>D - DomNode->a' inserttext='DomAttribute->name(|)' hint='(PHP 4>=4.1.0) string DomAttribute::name(void) - Returns the name of attribute.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>D - DomNode->a' inserttext='DomAttribute->set_value(|)' hint='(PHP 4>=4.1.0) bool DomAttribute::set_value(string $content) - Sets the value of an attribute.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>D - DomNode->a' inserttext='DomAttribute->specified(|)' hint='(PHP 4>=4.1.0) bool DomAttribute::specified(void) - Checks if attribute is specified.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>D - DomNode->a' inserttext='DomAttribute->value(|)' hint='(PHP 4>=4.1.0) string DomAttribute::value(void) - Returns value of attribute.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>D - DomNode->a' inserttext='DomDocumentType->entities(|)' hint='(PHP 4>=4.1.0) array DomDocumentType::entities(void) - Returns list of entities.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>D - DomNode->a' inserttext='DomDocumentType->internal_subset(|)' hint='(PHP 4>=4.1.0) bool DomDocumentType::internal_subset(void) - Returns internal subset.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>D - DomNode->a' inserttext='DomDocumentType->name(|)' hint='(PHP 4>=4.1.0) string DomDocumentType::name(void) - Returns name of document type.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>D - DomNode->a' inserttext='DomDocumentType->notations(|)' hint='(PHP 4>=4.1.0) array DomDocumentType::notations(void) - Returns list of notations.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>D - DomNode->a' inserttext='DomDocumentType->public_id(|)' hint='(PHP 4>=4.1.0) string DomDocumentType::public_id(void) - Returns public id of document type.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>D - DomNode->a' inserttext='DomDocumentType->system_id(|)' hint='(PHP 4>=4.1.0) string DomDocumentType::system_id(void) - Returns the system id of document type.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>D - DomNode->a' inserttext='DomElement->get_attribute(|)' hint='(PHP 4>=4.1.0) string DomElement::get_attribute(string $name) - Returns the value of the given attribute.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>D - DomNode->a' inserttext='DomElement->get_attribute_node(|)' hint='(PHP 4>=4.1.0) DomAttribute DomElement::get_attribute_node(string $name) - Returns the node of the given attribute.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>D - DomNode->a' inserttext='DomElement->get_elements_by_tagname(|)' hint='(PHP 4>=4.1.0) array DomElement::get_elements_by_tagname(string $name) - Gets elements by tagname.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>D - DomNode->a' inserttext='DomElement->has_attribute(|)' hint='(PHP 4>=4.1.0) bool DomElement::has_attribute(string $name) - Checks to see if an attribute exists in the current node.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>D - DomNode->a' inserttext='DomElement->remove_attribute(|)' hint='(PHP 4>=4.1.0) bool DomElement::remove_attribute(string $name) - Removes attribute.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>D - DomNode->a' inserttext='DomElement->set_attribute(|)' hint='(PHP 4>=4.1.0) DomAttribute DomElement::set_attribute(string $name, string $value) - Sets the value of an attribute.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>D - DomNode->a' inserttext='DomElement->set_attribute_node(|)' hint='(PHP 4>=4.1.0) DomNode DomElement::set_attribute_node(DomNode $attr) - Adds new attribute.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>D - DomNode->a' inserttext='DomElement->tagname(|)' hint='(PHP 4>=4.1.0) string DomElement::tagname(void) - Returns the name of the current element.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>D - DomNode->a' inserttext='DomNode->add_namespace(|)' hint='(PHP 4>=4.3.0) bool DOMNode::add_namespace(string $uri, string $prefix) - Adds a namespace declaration to a node.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>D - DomNode->a' inserttext='DomNode->append_child(|)' hint='(PHP 4>=4.1.0) DOMNode DOMNode::append_child(DOMNode $newnode) - Adds a new child at the end of the children.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>D - DomNode->a' inserttext='DomNode->append_sibling(|)' hint='(PHP 4>=4.2.0) domelement DomNode->append_sibling(domelement $newnode) - Adds new sibling to a node.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>D - DomNode->a' inserttext='DomNode->attributes()' hint='(PHP 4>=4.1.0) array DomNode->attributes(void) - Returns list of attributes.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>DomNode->c - DomNode->set_c' inserttext='DomNode->child_nodes()' hint='(PHP 4>=4.1.0) array DomNode->child_nodes(void) - Returns children of node.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>DomNode->c - DomNode->set_c' inserttext='DomNode->clone_node()' hint='(PHP 4>=4.1.0) domelement DomNode->clone_node(void) - Clones a node.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>DomNode->c - DomNode->set_c' inserttext='DomNode->dump_node()' hint='(PHP 4>=4.1.0) string DomNode->dump_node(void) - Dumps a single node.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>DomNode->c - DomNode->set_c' inserttext='DomNode->first_child()' hint='(PHP 4>=4.1.0) domelement DomNode->first_child(void) - Returns first child of node.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>DomNode->c - DomNode->set_c' inserttext='DomNode->get_content()' hint='(PHP 4>=4.2.0) string DomNode->get_content(void) - Gets content of node.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>DomNode->c - DomNode->set_c' inserttext='DomNode->has_attributes()' hint='(PHP 4>=4.1.0) bool DomNode->has_attributes(void) - Checks if node has attributes.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>DomNode->c - DomNode->set_c' inserttext='DomNode->has_child_nodes()' hint='(PHP 4>=4.1.0) bool DomNode->has_child_nodes(void) - Checks if node has children.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>DomNode->c - DomNode->set_c' inserttext='DomNode->insert_before(|)' hint='(PHP 4>=4.1.0) domelement DomNode->insert_before(domelement $newnode, domelement $refnode) - Inserts new node as child.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>DomNode->c - DomNode->set_c' inserttext='DomNode->is_blank_node()' hint='(PHP 4>=4.1.0) bool DomNode->is_blank_node(void) - Checks if node is blank.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>DomNode->c - DomNode->set_c' inserttext='DomNode->last_child()' hint='(PHP 4>=4.1.0) domelement DomNode->last_child(void) - Returns last child of node.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>DomNode->c - DomNode->set_c' inserttext='DomNode->next_sibling()' hint='(PHP 4>=4.1.0) domelement DomNode->next_sibling(void) - Returns the next sibling of node.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>DomNode->c - DomNode->set_c' inserttext='DomNode->node_name()' hint='(PHP 4>=4.1.0) string DomNode->node_name(void) - Returns name of node.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>DomNode->c - DomNode->set_c' inserttext='DomNode->node_type()' hint='(PHP 4>=4.1.0) int DomNode->node_type(void) - Returns type of node.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>DomNode->c - DomNode->set_c' inserttext='DomNode->node_value()' hint='(PHP 4>=4.1.0) string DomNode->node_value(void) - Returns value of a node.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>DomNode->c - DomNode->set_c' inserttext='DomNode->owner_document()' hint='(PHP 4>=4.1.0) domdocument DomNode->owner_document(void) - Returns the document this node belongs to.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>DomNode->c - DomNode->set_c' inserttext='DomNode->parent_node()' hint='(PHP 4>=4.1.0) domnode DomNode->parent_node(void) - Returns the parent of the node.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>DomNode->c - DomNode->set_c' inserttext='DomNode->prefix()' hint='(PHP 4>=4.1.0) string DomNode->prefix(void) - Returns name space prefix of node.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>DomNode->c - DomNode->set_c' inserttext='DomNode->previous_sibling()' hint='(PHP 4>=4.1.0) domelement DomNode->previous_sibling(void) - Returns the previous sibling of node.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>DomNode->c - DomNode->set_c' inserttext='DomNode->remove_child(|)' hint='(PHP 4>=4.2.0) domtext DomNode->remove_child(domtext $oldchild) - Removes child from list of children.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>DomNode->c - DomNode->set_c' inserttext='DomNode->replace_child(|)' hint='(PHP 4>=4.2.0) domelement DomNode->replace_child(domelement $newnode, domelement $oldnode) - Replaces a child.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>DomNode->c - DomNode->set_c' inserttext='DomNode->replace_node(|)' hint='(PHP 4>=4.2.0) domelement DomNode->replace_node(domelement $newnode) - Replaces node.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>DomNode->c - DomNode->set_c' inserttext='DomNode->set_content(|)' hint='(PHP 4>=4.1.0) bool DomNode->set_content(string $content) - Sets content of node.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>DomNode->set_n - x' inserttext='DomNode->set_name()' hint='(PHP 4>=4.1.0) bool DomNode->set_name(void) - Sets name of node.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>DomNode->set_n - x' inserttext='DomNode->set_namespace(|)' hint='(PHP 4>=4.3.0) void DomNode->set_namespace(string $uri [, string $prefix]) - Sets namespace of a node.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>DomNode->set_n - x' inserttext='DomNode->unlink_node()' hint='(PHP 4>=4.1.0) void DomNode->unlink_node(void) - Deletes node.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>DomNode->set_n - x' inserttext='DomProcessingInstruction->data(|)' hint='(PHP 4>=4.1.0) string DomProcessingInstruction::data(void) - Returns the data of ProcessingInstruction node.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>DomNode->set_n - x' inserttext='DomProcessingInstruction->target(|)' hint='(PHP 4>=4.1.0) string DomProcessingInstruction::target(void) - Returns the target of a ProcessingInstruction node.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>DomNode->set_n - x' inserttext='DomXsltStylesheet->process(|)' hint='(PHP 4>=4.1.0) DomDocument DomXsltStylesheet::process(DomDocument $xml_doc [, array $xslt_params [, bool $is_xpath_param [, string $profile_filename ]]]) - Applies the XSLT-Transformation on a DomDocument Object.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>DomNode->set_n - x' inserttext='DomXsltStylesheet->result_dump_file(|)' hint='(PHP 4>=4.1.0) string DomXsltStylesheet::result_dump_file(DomDocument $xmldoc, string $filename) - Dumps the result from a XSLT-Transformation into a file.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>DomNode->set_n - x' inserttext='DomXsltStylesheet->result_dump_mem(|)' hint='(PHP 4>=4.1.0) string DomXsltStylesheet::result_dump_mem(DomDocument $xmldoc) - Dumps the result from a XSLT-Transformation back into a string.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>DomNode->set_n - x' inserttext='domxml_new_doc(|)' hint='(PHP 4>=4.2.0) DomDocument domxml_new_doc(string $version) - Creates new empty XML document.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>DomNode->set_n - x' inserttext='domxml_open_file(|)' hint='(PHP 4>=4.2.0) DomDocument domxml_open_file(string $filename [, int $mode [, array &amp;$error ]]) - Creates a DOM object from an XML file.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>DomNode->set_n - x' inserttext='domxml_open_mem(|)' hint='(PHP 4>=4.2.0) DomDocument domxml_open_mem(string $str [, int $mode [, array &amp;$error ]]) - Creates a DOM object of an XML document.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>DomNode->set_n - x' inserttext='domxml_version()' hint='(PHP 4>=4.1.0) string domxml_version(void) - Gets the XML library version.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>DomNode->set_n - x' inserttext='domxml_xmltree(|)' hint='(PHP 4>=4.2.0) DomDocument domxml_xmltree(string $str) - Creates a tree of PHP objects from an XML document.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>DomNode->set_n - x' inserttext='domxml_xslt_stylesheet(|)' hint='(PHP 4>=4.2.0) DomXsltStylesheet domxml_xslt_stylesheet(string $xsl_buf) - Creates a DomXsltStylesheet object from an XSL document in a string.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>DomNode->set_n - x' inserttext='domxml_xslt_stylesheet_doc(|)' hint='(PHP 4>=4.2.0) DomXsltStylesheet domxml_xslt_stylesheet_doc(DomDocument $xsl_doc) - Creates a DomXsltStylesheet Object from a DomDocument Object.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>DomNode->set_n - x' inserttext='domxml_xslt_stylesheet_file(|)' hint='(PHP 4>=4.2.0) DomXsltStylesheet domxml_xslt_stylesheet_file(string $xsl_file) - Creates a DomXsltStylesheet Object from an XSL document in a file.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>DomNode->set_n - x' inserttext='domxml_xslt_version()' hint='(PHP 4>=4.2.0) int domxml_xslt_version(void) - Gets the XSLT library version.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>DomNode->set_n - x' inserttext='xpath_new_context(|)' hint='(PHP 4) XPathContext xpath_new_context(domdocument $dom_document) - Creates new xpath context.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>DomNode->set_n - x' inserttext='xpath_register_ns(|)' hint='(PHP 4>=4.2.0) bool xpath_register_ns(XPathContext $xpath_context, string $prefix, string $uri) - Register the given namespace in the passed XPath context.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>DomNode->set_n - x' inserttext='xpath_register_ns_auto(|)' hint='(PHP 4>=4.3.0) bool xpath_register_ns_auto(XPathContext $xpath_context [, object $context_node]) - Register the given namespace in the passed XPath context.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>DomNode->set_n - x' inserttext='xptr_eval(|)' hint='(PHP 4) int XPathContext::xptr_eval(string $eval_str [, domnode $contextnode]) - Evaluate the XPtr Location Path in the given string.' flags='130'/>
<tag menu='DOM' submenu='DOM XML (PHP 4)-->>DomNode->set_n - x' inserttext='xptr_new_context()' hint='(PHP 4) XPathContext xptr_new_context(void) - Create new XPath Context.' flags='130'/>
<tag menu='DOM' submenu='DOMAttr class' inserttext='DOMAttr::__construct(|)' hint='(PHP 5) DOMAttr::__construct(string $name [, string $value]) - Creates a new DOMAttr object.' flags='130'/>
<tag menu='DOM' submenu='DOMAttr class' inserttext='DOMAttr::isId()' hint='(PHP 5) bool DOMAttr::isId(void) - Checks if attribute is a defined ID.' flags='130'/>
<tag menu='DOM' submenu='DOMCharacterData class' inserttext='DOMCharacterData::appendData(|)' hint='(PHP 5) void DOMCharacterData::appendData(string $data) - Append the string to the end of the character data of the node.' flags='130'/>
<tag menu='DOM' submenu='DOMCharacterData class' inserttext='DOMCharacterData::deleteData(|)' hint='(PHP 5) void DOMCharacterData::deleteData(int $offset, int $count) - Remove a range of characters from the node.' flags='130'/>
<tag menu='DOM' submenu='DOMCharacterData class' inserttext='DOMCharacterData::insertData(|)' hint='(PHP 5) void DOMCharacterData::insertData(int $offset, string $data) - Insert a string at the specified 16-bit unit offset.' flags='130'/>
<tag menu='DOM' submenu='DOMCharacterData class' inserttext='DOMCharacterData::replaceData(|)' hint='(PHP 5) void DOMCharacterData::replaceData(int $offset, int $count, string $data) - Replace a substring within the DOMCharacterData node.' flags='130'/>
<tag menu='DOM' submenu='DOMCharacterData class' inserttext='DOMCharacterData::substringData(|)' hint='(PHP 5) string DOMCharacterData::substringData(int $offset, int $count) - Extracts a range of data from the node.' flags='130'/>
<tag menu='DOM' submenu='DOMComment class' inserttext='DOMComment::__construct(|)' hint='(PHP 5) DOMComment::__construct([string $value]) - Creates a new DOMComment object.' flags='130'/>
<tag menu='DOM' submenu='DOMDocument class-->>D - DOMDocument::i' inserttext='DOMDocument::__construct(|)' hint='(PHP 5) DOMDocument::__construct([string $version [, string $encoding ]]) - Creates a new DOMDocument object.' flags='130'/>
<tag menu='DOM' submenu='DOMDocument class-->>D - DOMDocument::i' inserttext='DOMDocument::createAttribute(|)' hint='(PHP 5) DOMAttr DOMDocument::createAttribute(string $name) - Create new attribute.' flags='130'/>
<tag menu='DOM' submenu='DOMDocument class-->>D - DOMDocument::i' inserttext='DOMDocument::createAttributeNS(|)' hint='(PHP 5) DOMAttr DOMDocument::createAttributeNS(string $namespaceURI, string $qualifiedName) - Create new attribute node with an associated namespace.' flags='130'/>
<tag menu='DOM' submenu='DOMDocument class-->>D - DOMDocument::i' inserttext='DOMDocument::createCDATASection(|)' hint='(PHP 5) DOMCDATASection DOMDocument::createCDATASection(string $data) - Create new cdata node.' flags='130'/>
<tag menu='DOM' submenu='DOMDocument class-->>D - DOMDocument::i' inserttext='DOMDocument::createComment(|)' hint='(PHP 5) DOMComment DOMDocument::createComment(string $data) - Create new comment node.' flags='130'/>
<tag menu='DOM' submenu='DOMDocument class-->>D - DOMDocument::i' inserttext='DOMDocument::createDocumentFragment()' hint='(PHP 5) DOMDocumentFragment DOMDocument::createDocumentFragment(void) - Create new document fragment.' flags='130'/>
<tag menu='DOM' submenu='DOMDocument class-->>D - DOMDocument::i' inserttext='DOMDocument::createElement(|)' hint='(PHP 5) DOMElement DOMDocument::createElement(string $name [, string $value]) - Create new element node.' flags='130'/>
<tag menu='DOM' submenu='DOMDocument class-->>D - DOMDocument::i' inserttext='DOMDocument::createElementNS(|)' hint='(PHP 5) DOMElement DOMDocument::createElementNS(string $namespaceURI, string $qualifiedName [, string $value]) - Create new element node with an associated namespace.' flags='130'/>
<tag menu='DOM' submenu='DOMDocument class-->>D - DOMDocument::i' inserttext='DOMDocument::createEntityReference(|)' hint='(PHP 5) DOMEntityReference DOMDocument::createEntityReference(string $name) - Create new entity reference node.' flags='130'/>
<tag menu='DOM' submenu='DOMDocument class-->>D - DOMDocument::i' inserttext='DOMDocument::createProcessingInstruction(|)' hint='(PHP 5) DOMProcessingInstruction DOMDocument::createProcessingInstruction(string $target [, string $data]) - Creates new PI node.' flags='130'/>
<tag menu='DOM' submenu='DOMDocument class-->>D - DOMDocument::i' inserttext='DOMDocument::createTextNode(|)' hint='(PHP 5) DOMText DOMDocument::createTextNode(string $content) - Create new text node.' flags='130'/>
<tag menu='DOM' submenu='DOMDocument class-->>D - DOMDocument::i' inserttext='DOMDocument::getElementById(|)' hint='(PHP 5) DOMElement DOMDocument::getElementById(string $elementId) - Searches for an element with a certain id.' flags='130'/>
<tag menu='DOM' submenu='DOMDocument class-->>D - DOMDocument::i' inserttext='DOMDocument::getElementsByTagName(|)' hint='(PHP 5) DOMNodeList DOMDocument::getElementsByTagName(string $name) - Searches for all elements with given tag name.' flags='130'/>
<tag menu='DOM' submenu='DOMDocument class-->>D - DOMDocument::i' inserttext='DOMDocument::getElementsByTagNameNS(|)' hint='(PHP 5) DOMNodeList DOMDocument::getElementsByTagNameNS(string $namespaceURI, string $localName) - Searches for all elements with given tag name in specified namespace.' flags='130'/>
<tag menu='DOM' submenu='DOMDocument class-->>D - DOMDocument::i' inserttext='DOMDocument::importNode(|)' hint='(PHP 5) DOMNode DOMDocument::importNode(DOMNode $importedNode [, bool $deep]) - Import node into current document.' flags='130'/>
<tag menu='DOM' submenu='DOMDocument class-->>DOMDocument::l - D' inserttext='DOMDocument::load(|)' hint='(PHP 5) mixed DOMDocument::load(string $filename [, int $options=0]) - Load XML from a file.' flags='130'/>
<tag menu='DOM' submenu='DOMDocument class-->>DOMDocument::l - D' inserttext='DOMDocument::loadHTML(|)' hint='(PHP 5) bool DOMDocument::loadHTML(string $source) - Load HTML from a string.' flags='130'/>
<tag menu='DOM' submenu='DOMDocument class-->>DOMDocument::l - D' inserttext='DOMDocument::loadHTMLFile(|)' hint='(PHP 5) bool DOMDocument::loadHTMLFile(string $filename) - Load HTML from a file.' flags='130'/>
<tag menu='DOM' submenu='DOMDocument class-->>DOMDocument::l - D' inserttext='DOMDocument::loadXML(|)' hint='(PHP 5) mixed DOMDocument::loadXML(string $source [, int $options=0]) - Load XML from a string.' flags='130'/>
<tag menu='DOM' submenu='DOMDocument class-->>DOMDocument::l - D' inserttext='DOMDocument::normalizeDocument()' hint='(PHP 5) void DOMDocument::normalizeDocument(void) - Normalizes the document.' flags='130'/>
<tag menu='DOM' submenu='DOMDocument class-->>DOMDocument::l - D' inserttext='DOMDocument::registerNodeClass(|)' hint='(PHP 5>=5.2.0) bool DOMDocument::registerNodeClass(string $baseclass, string $extendedclass) - Register extended class used to create base node type.' flags='130'/>
<tag menu='DOM' submenu='DOMDocument class-->>DOMDocument::l - D' inserttext='DOMDocument::relaxNGValidate(|)' hint='(PHP 5) bool DOMDocument::relaxNGValidate(string $filename) - Performs relaxNG validation on the document.' flags='130'/>
<tag menu='DOM' submenu='DOMDocument class-->>DOMDocument::l - D' inserttext='DOMDocument::relaxNGValidateSource(|)' hint='(PHP 5) bool DOMDocument::relaxNGValidateSource(string $source) - Performs relaxNG validation on the document.' flags='130'/>
<tag menu='DOM' submenu='DOMDocument class-->>DOMDocument::l - D' inserttext='DOMDocument::save(|)' hint='(PHP 5) int DOMDocument::save(string $filename [, int $options]) - Dumps the internal XML tree back into a file.' flags='130'/>
<tag menu='DOM' submenu='DOMDocument class-->>DOMDocument::l - D' inserttext='DOMDocument::saveHTML()' hint='(PHP 5) string DOMDocument::saveHTML(void) - Dumps the internal document into a string using HTML formatting.' flags='130'/>
<tag menu='DOM' submenu='DOMDocument class-->>DOMDocument::l - D' inserttext='DOMDocument::saveHTMLFile(|)' hint='(PHP 5) int DOMDocument::saveHTMLFile(string $filename) - Dumps the internal document into a file using HTML formatting.' flags='130'/>
<tag menu='DOM' submenu='DOMDocument class-->>DOMDocument::l - D' inserttext='DOMDocument::saveXML(|)' hint='(PHP 5) string DOMDocument::saveXML([DOMNode $node [, int $options ]]) - Dumps the internal XML tree back into a string.' flags='130'/>
<tag menu='DOM' submenu='DOMDocument class-->>DOMDocument::l - D' inserttext='DOMDocument::schemaValidate(|)' hint='(PHP 5) bool DOMDocument::schemaValidate(string $filename) - Validates a document based on a schema.' flags='130'/>
<tag menu='DOM' submenu='DOMDocument class-->>DOMDocument::l - D' inserttext='DOMDocument::schemaValidateSource(|)' hint='(PHP 5) bool DOMDocument::schemaValidateSource(string $source) - Validates a document based on a schema.' flags='130'/>
<tag menu='DOM' submenu='DOMDocument class-->>DOMDocument::l - D' inserttext='DOMDocument::validate()' hint='(PHP 5) bool DOMDocument::validate(void) - Validates the document based on its DTD.' flags='130'/>
<tag menu='DOM' submenu='DOMDocument class-->>DOMDocument::l - D' inserttext='DOMDocument::xinclude(|)' hint='(PHP 5) int DOMDocument::xinclude([int $options]) - Substitutes XIncludes in a DOMDocument Object.' flags='130'/>
<tag menu='DOM' submenu='DOMDocumentFragment class' inserttext='DOMDocumentFragment::appendXML(|)' hint='(PHP 5>=5.1.0) bool DOMDocumentFragment::appendXML(string $data) - Append raw XML data.' flags='130'/>
<tag menu='DOM' submenu='DOMElement class' inserttext='DOMElement::__construct(|)' hint='(PHP 5) DOMElement::__construct(string $name [, string $value [, string $namespaceURI ]]) - Creates a new DOMElement object.' flags='130'/>
<tag menu='DOM' submenu='DOMElement class' inserttext='DOMElement::getAttribute(|)' hint='(PHP 5) string DOMElement::getAttribute(string $name) - Returns value of attribute.' flags='130'/>
<tag menu='DOM' submenu='DOMElement class' inserttext='DOMElement::getAttributeNS(|)' hint='(PHP 5) string DOMElement::getAttributeNS(string $namespaceURI, string $localName) - Returns value of attribute.' flags='130'/>
<tag menu='DOM' submenu='DOMElement class' inserttext='DOMElement::getAttributeNode(|)' hint='(PHP 5) DOMAttr DOMElement::getAttributeNode(string $name) - Returns attribute node.' flags='130'/>
<tag menu='DOM' submenu='DOMElement class' inserttext='DOMElement::getAttributeNodeNS(|)' hint='(PHP 5) DOMAttr DOMElement::getAttributeNodeNS(string $namespaceURI, string $localName) - Returns attribute node.' flags='130'/>
<tag menu='DOM' submenu='DOMElement class' inserttext='DOMElement::getElementsByTagName(|)' hint='(PHP 5) DOMNodeList DOMElement::getElementsByTagName(string $name) - Gets elements by tagname.' flags='130'/>
<tag menu='DOM' submenu='DOMElement class' inserttext='DOMElement::getElementsByTagNameNS(|)' hint='(PHP 5) DOMNodeList DOMElement::getElementsByTagNameNS(string $namespaceURI, string $localName) - Get elements by namespaceURI and localName.' flags='130'/>
<tag menu='DOM' submenu='DOMElement class' inserttext='DOMElement::hasAttribute(|)' hint='(PHP 5) bool DOMElement::hasAttribute(string $name) - Checks to see if attribute exists.' flags='130'/>
<tag menu='DOM' submenu='DOMElement class' inserttext='DOMElement::hasAttributeNS(|)' hint='(PHP 5) bool DOMElement::hasAttributeNS(string $namespaceURI, string $localName) - Checks to see if attribute exists.' flags='130'/>
<tag menu='DOM' submenu='DOMElement class' inserttext='DOMElement::removeAttribute(|)' hint='(PHP 5) bool DOMElement::removeAttribute(string $name) - Removes attribute.' flags='130'/>
<tag menu='DOM' submenu='DOMElement class' inserttext='DOMElement::removeAttributeNS(|)' hint='(PHP 5) bool DOMElement::removeAttributeNS(string $namespaceURI, string $localName) - Removes attribute.' flags='130'/>
<tag menu='DOM' submenu='DOMElement class' inserttext='DOMElement::removeAttributeNode(|)' hint='(PHP 5) bool DOMElement::removeAttributeNode(DOMAttr $oldnode) - Removes attribute.' flags='130'/>
<tag menu='DOM' submenu='DOMElement class' inserttext='DOMElement::setAttribute(|)' hint='(PHP 5) DOMAttr DOMElement::setAttribute(string $name, string $value) - Adds new attribute.' flags='130'/>
<tag menu='DOM' submenu='DOMElement class' inserttext='DOMElement::setAttributeNS(|)' hint='(PHP 5) void DOMElement::setAttributeNS(string $namespaceURI, string $qualifiedName, string $value) - Adds new attribute.' flags='130'/>
<tag menu='DOM' submenu='DOMElement class' inserttext='DOMElement::setAttributeNode(|)' hint='(PHP 5) DOMAttr DOMElement::setAttributeNode(DOMAttr $attr) - Adds new attribute node to element.' flags='130'/>
<tag menu='DOM' submenu='DOMElement class' inserttext='DOMElement::setAttributeNodeNS(|)' hint='(PHP 5) DOMAttr DOMElement::setAttributeNodeNS(DOMAttr $attr) - Adds new attribute node to element.' flags='130'/>
<tag menu='DOM' submenu='DOMElement class' inserttext='DOMElement::setIdAttribute(|)' hint='(PHP 5) void DOMElement::setIdAttribute(string $name, bool $isId) - Declares the attribute specified by name to be of type ID.' flags='130'/>
<tag menu='DOM' submenu='DOMElement class' inserttext='DOMElement::setIdAttributeNS(|)' hint='(PHP 5) void DOMElement::setIdAttributeNS(string $namespaceURI, string $localName, bool $isId) - Declares the attribute specified by local name and namespace URI to be of type ID.' flags='130'/>
<tag menu='DOM' submenu='DOMElement class' inserttext='DOMElement::setIdAttributeNode(|)' hint='(PHP 5) void DOMElement::setIdAttributeNode(DOMAttr $attr, bool $isId) - Declares the attribute specified by node to be of type ID.' flags='130'/>
<tag menu='DOM' submenu='DOMEntityReference class' inserttext='DOMEntityReference::__construct(|)' hint='(PHP 5) DOMEntityReference::__construct(string $name) - Creates a new DOMEntityReference object.' flags='130'/>
<tag menu='DOM' submenu='DOMImplementation class' inserttext='DOMImplementation::__construct()' hint='(PHP 5) DOMImplementation::__construct(void) - Creates a new DOMImplementation object.' flags='130'/>
<tag menu='DOM' submenu='DOMImplementation class' inserttext='DOMImplementation::createDocument(|)' hint='(PHP 5) DOMDocument DOMImplementation::createDocument([string $namespaceURI=NULL [, string $qualifiedName=NULL [, DOMDocumentType $doctype=NULL ]]]) - Creates a DOMDocument object of the specified type with its document element.' flags='130'/>
<tag menu='DOM' submenu='DOMImplementation class' inserttext='DOMImplementation::createDocumentType(|)' hint='(PHP 5) DOMDocumentType DOMImplementation::createDocumentType([string $qualifiedName=NULL [, string $publicId=NULL [, string $systemId=NULL ]]]) - Creates an empty DOMDocumentType object.' flags='130'/>
<tag menu='DOM' submenu='DOMImplementation class' inserttext='DOMImplementation::hasFeature(|)' hint='(PHP 5) bool DOMImplementation::hasFeature(string $feature, string $version) - Test if the DOM implementation implements a specific feature.' flags='130'/>
<tag menu='DOM' submenu='DOMNamedNodeMap class' inserttext='DOMNamedNodeMap::getNamedItem(|)' hint='(PHP 5) DOMNode DOMNamedNodeMap::getNamedItem(string $name) - Retrieves a node specified by name.' flags='130'/>
<tag menu='DOM' submenu='DOMNamedNodeMap class' inserttext='DOMNamedNodeMap::getNamedItemNS(|)' hint='(PHP 5) DOMNode DOMNamedNodeMap::getNamedItemNS(string $namespaceURI, string $localName) - Retrieves a node specified by local name and namespace URI.' flags='130'/>
<tag menu='DOM' submenu='DOMNamedNodeMap class' inserttext='DOMNamedNodeMap::item(|)' hint='(PHP 5) DOMNode DOMNamedNodeMap::item(int $index) - Retrieves a node specified by index.' flags='130'/>
<tag menu='DOM' submenu='DOMNode class' inserttext='DOMNode::appendChild(|)' hint='(PHP 5) DOMNode DOMNode::appendChild(DOMNode $newnode) - Adds new child at the end of the children.' flags='130'/>
<tag menu='DOM' submenu='DOMNode class' inserttext='DOMNode::cloneNode(|)' hint='(PHP 5) DOMNode DOMNode::cloneNode([bool $deep]) - Clones a node.' flags='130'/>
<tag menu='DOM' submenu='DOMNode class' inserttext='DOMNode::getLineNo()' hint='(PHP 5>=5.3.0) public int DOMNode::getLineNo(void) - Get line number for a node.' flags='130'/>
<tag menu='DOM' submenu='DOMNode class' inserttext='DOMNode::hasAttributes()' hint='(PHP 5) bool DOMNode::hasAttributes(void) - Checks if node has attributes.' flags='130'/>
<tag menu='DOM' submenu='DOMNode class' inserttext='DOMNode::hasChildNodes()' hint='(PHP 5) bool DOMNode::hasChildNodes(void) - Checks if node has children.' flags='130'/>
<tag menu='DOM' submenu='DOMNode class' inserttext='DOMNode::insertBefore(|)' hint='(PHP 5) DOMNode DOMNode::insertBefore(DOMNode $newnode [, DOMNode $refnode]) - Adds a new child before a reference node.' flags='130'/>
<tag menu='DOM' submenu='DOMNode class' inserttext='DOMNode::isDefaultNamespace(|)' hint='(PHP 5) bool DOMNode::isDefaultNamespace(string $namespaceURI) - Checks if the specified namespaceURI is the default namespace or not.' flags='130'/>
<tag menu='DOM' submenu='DOMNode class' inserttext='DOMNode::isSameNode(|)' hint='(PHP 5) bool DOMNode::isSameNode(DOMNode $node) - Indicates if two nodes are the same node.' flags='130'/>
<tag menu='DOM' submenu='DOMNode class' inserttext='DOMNode::isSupported(|)' hint='(PHP 5) bool DOMNode::isSupported(string $feature, string $version) - Checks if feature is supported for specified version.' flags='130'/>
<tag menu='DOM' submenu='DOMNode class' inserttext='DOMNode::lookupNamespaceURI(|)' hint='(PHP 5) string DOMNode::lookupNamespaceURI(string $prefix) - Gets the namespace URI of the node based on the prefix.' flags='130'/>
<tag menu='DOM' submenu='DOMNode class' inserttext='DOMNode::lookupPrefix(|)' hint='(PHP 5) string DOMNode::lookupPrefix(string $namespaceURI) - Gets the namespace prefix of the node based on the namespace URI.' flags='130'/>
<tag menu='DOM' submenu='DOMNode class' inserttext='DOMNode::normalize()' hint='(PHP 5) void DOMNode::normalize(void) - Normalizes the node.' flags='130'/>
<tag menu='DOM' submenu='DOMNode class' inserttext='DOMNode::removeChild(|)' hint='(PHP 5) DOMNode DOMNode::removeChild(DOMNode $oldnode) - Removes child from list of children.' flags='130'/>
<tag menu='DOM' submenu='DOMNode class' inserttext='DOMNode::replaceChild(|)' hint='(PHP 5) DOMNode DOMNode::replaceChild(DOMNode $newnode, DOMNode $oldnode) - Replaces a child.' flags='130'/>
<tag menu='DOM' submenu='DOMNodeList class' inserttext='DOMNodelist::item(|)' hint='(PHP 5) DOMNode DOMNodelist::item(int $index) - Retrieves a node specified by index.' flags='130'/>
<tag menu='DOM' submenu='DOMProcessingInstruction class' inserttext='DOMProcessingInstruction::__construct(|)' hint='(PHP 5) DOMProcessingInstruction::__construct(string $name [, string $value]) - Creates a new DOMProcessingInstruction object.' flags='130'/>
<tag menu='DOM' submenu='DOMText class' inserttext='DOMText::__construct(|)' hint='(PHP 5) DOMText::__construct([string $value]) - Creates a new DOMText object.' flags='130'/>
<tag menu='DOM' submenu='DOMText class' inserttext='DOMText::isWhitespaceInElementContent()' hint='(PHP 5) bool DOMText::isWhitespaceInElementContent(void) - Indicates whether this text node contains whitespace.' flags='130'/>
<tag menu='DOM' submenu='DOMText class' inserttext='DOMText::splitText(|)' hint='(PHP 5) DOMText DOMText::splitText(int $offset) - Breaks this node into two nodes at the specified offset.' flags='130'/>
<tag menu='DOM' submenu='DOMXPath class' inserttext='DOMXPath::__construct(|)' hint='(PHP 5) DOMXPath::__construct(DOMDocument $doc) - Creates a new DOMXPath object.' flags='130'/>
<tag menu='DOM' submenu='DOMXPath class' inserttext='DOMXPath::evaluate(|)' hint='(PHP 5>=5.1.0) mixed DOMXPath::evaluate(string $expression [, DOMNode $contextnode [, boolean $registerNodeNS=true ]]) - Evaluates the given XPath expression and returns a typed result if possible.' flags='130'/>
<tag menu='DOM' submenu='DOMXPath class' inserttext='DOMXPath::query(|)' hint='(PHP 5) DOMNodeList DOMXPath::query(string $expression [, DOMNode $contextnode [, boolean $registerNodeNS=true ]]) - Evaluates the given XPath expression.' flags='130'/>
<tag menu='DOM' submenu='DOMXPath class' inserttext='DOMXPath::registerNamespace(|)' hint='(PHP 5) bool DOMXPath::registerNamespace(string $prefix, string $namespaceURI) - Registers the namespace with the DOMXPath object.' flags='130'/>
<tag menu='DOM' submenu='DOMXPath class' inserttext='DOMXPath::registerPhpFunctions(|)' hint='(PHP 5>=5.3.0) public void DOMXPath::registerPhpFunctions([mixed $restrict]) - Register PHP functions as XPath functions.' flags='130'/>
<tag menu='DOM' submenu='DOMXPath class' inserttext='dom_import_simplexml(|)' hint='(PHP 5) DOMElement dom_import_simplexml(SimpleXMLElement $node) - Gets a DOMElement object from a SimpleXMLElement object.' flags='130'/>
<tag menu='E' submenu='EmptyIterator class' inserttext='EmptyIterator::current()' hint='(PHP 5>=5.1.0) public void EmptyIterator::current(void) - The current() method.' flags='130'/>
<tag menu='E' submenu='EmptyIterator class' inserttext='EmptyIterator::key()' hint='(PHP 5>=5.1.0) public void EmptyIterator::key(void) - The key() method.' flags='130'/>
<tag menu='E' submenu='EmptyIterator class' inserttext='EmptyIterator::next()' hint='(PHP 5>=5.1.0) public void EmptyIterator::next(void) - The next() method.' flags='130'/>
<tag menu='E' submenu='EmptyIterator class' inserttext='EmptyIterator::rewind()' hint='(PHP 5>=5.1.0) public void EmptyIterator::rewind(void) - The rewind() method.' flags='130'/>
<tag menu='E' submenu='EmptyIterator class' inserttext='EmptyIterator::valid()' hint='(PHP 5>=5.1.0) public void EmptyIterator::valid(void) - The valid() method.' flags='130'/>
<tag menu='E' submenu='Error Handling' inserttext='debug_backtrace(|)' hint='(PHP 4>=4.3.0, PHP 5) array debug_backtrace([bool $provide_object=true]) - Generates a backtrace.' flags='130'/>
<tag menu='E' submenu='Error Handling' inserttext='error_get_last()' hint='(PHP 5>=5.2.0) array error_get_last(void) - Get the last occurred error.' flags='130'/>
<tag menu='E' submenu='Error Handling' inserttext='error_log(|)' hint='(PHP 4, PHP 5) bool error_log(string $message [, int $message_type=0 [, string $destination [, string $extra_headers ]]]) - Send an error message somewhere.' flags='130'/>
<tag menu='E' submenu='Error Handling' inserttext='error_reporting(|)' hint='(PHP 4, PHP 5) int error_reporting([int $level]) - Sets which PHP errors are reported.' flags='130'/>
<tag menu='E' submenu='Error Handling' inserttext='restore_error_handler()' hint='(PHP 4>=4.0.1, PHP 5) bool restore_error_handler(void) - Restores the previous error handler function.' flags='130'/>
<tag menu='E' submenu='Error Handling' inserttext='restore_exception_handler()' hint='(PHP 5) bool restore_exception_handler(void) - Restores the previously defined exception handler function.' flags='130'/>
<tag menu='E' submenu='Error Handling' inserttext='set_error_handler(|)' hint='(PHP 4>=4.0.1, PHP 5) mixed set_error_handler(callback $error_handler [, int $error_types=E_ALL | E_STRICT]) - Sets a user-defined error handler function.' flags='130'/>
<tag menu='E' submenu='Error Handling' inserttext='set_exception_handler(|)' hint='(PHP 5) callback set_exception_handler(callback $exception_handler) - Sets a user-defined exception handler function.' flags='130'/>
<tag menu='E' submenu='Error Handling' inserttext='trigger_error(|)' hint='(PHP 4>=4.0.1, PHP 5) bool trigger_error(string $error_msg [, int $error_type=E_USER_NOTICE]) - Generates a user-level error/warning/notice message.' flags='130'/>
<tag menu='E' submenu='Error Handling' inserttext='user_error(|)' hint='(PHP 4, PHP 5) Alias of trigger_error().' flags='130'/>
<tag menu='E' submenu='ErrorException' inserttext='ErrorException::__construct(|)' hint='(PHP 5>=5.1.0) Construct the exception.' flags='130'/>
<tag menu='E' submenu='ErrorException' inserttext='ErrorException::getSeverity()' hint='(PHP 5>=5.1.0) final public int ErrorException::getSeverity(void) - Gets the exception severity.' flags='130'/>
<tag menu='E' submenu='Exception' inserttext='Exception::__clone()' hint='(PHP 5>=5.1.0) final private void Exception::__clone(void) - Clone the exception.' flags='130'/>
<tag menu='E' submenu='Exception' inserttext='Exception::__construct(|)' hint='(PHP 5>=5.1.0) Construct the exception.' flags='130'/>
<tag menu='E' submenu='Exception' inserttext='Exception::__toString()' hint='(PHP 5>=5.1.0) public string Exception::__toString(void) - String representation of the exception.' flags='130'/>
<tag menu='E' submenu='Exception' inserttext='Exception::getCode()' hint='(PHP 5>=5.1.0) final public int Exception::getCode(void) - Gets the Exception code.' flags='130'/>
<tag menu='E' submenu='Exception' inserttext='Exception::getFile()' hint='(PHP 5>=5.1.0) final public string Exception::getFile(void) - Gets the file in which the exception occurred.' flags='130'/>
<tag menu='E' submenu='Exception' inserttext='Exception::getLine()' hint='(PHP 5>=5.1.0) final public int Exception::getLine(void) - Gets the line in which the exception occurred.' flags='130'/>
<tag menu='E' submenu='Exception' inserttext='Exception::getMessage()' hint='(PHP 5>=5.1.0) final public string Exception::getMessage(void) - Gets the Exception message.' flags='130'/>
<tag menu='E' submenu='Exception' inserttext='Exception::getPrevious()' hint='(PHP 5>=5.3.0) final public Exception Exception::getPrevious(void) - Returns previous Exception.' flags='130'/>
<tag menu='E' submenu='Exception' inserttext='Exception::getTrace()' hint='(PHP 5>=5.1.0) final public array Exception::getTrace(void) - Gets the stack trace.' flags='130'/>
<tag menu='E' submenu='Exception' inserttext='Exception::getTraceAsString()' hint='(PHP 5>=5.1.0) final public string Exception::getTraceAsString(void) - Gets the stack trace as a string.' flags='130'/>
<tag menu='E' submenu='Exif' inserttext='exif_imagetype(|)' hint='(PHP 4>=4.3.0, PHP 5) int exif_imagetype(string $filename) - Determine the type of an image.' flags='130'/>
<tag menu='E' submenu='Exif' inserttext='exif_read_data(|)' hint='(PHP 4>=4.2.0, PHP 5) array exif_read_data(string $filename [, string $sections=NULL [, bool $arrays=false [, bool $thumbnail=false ]]]) - Reads the EXIF headers from JPEG or TIFF.' flags='130'/>
<tag menu='E' submenu='Exif' inserttext='exif_tagname(|)' hint='(PHP 4>=4.2.0, PHP 5) string exif_tagname(int $index) - Get the header name for an index.' flags='130'/>
<tag menu='E' submenu='Exif' inserttext='exif_thumbnail(|)' hint='(PHP 4>=4.2.0, PHP 5) string exif_thumbnail(string $filename [, int &amp;$width [, int &amp;$height [, int &amp;$imagetype ]]]) - Retrieve the embedded thumbnail of a TIFF or JPEG image.' flags='130'/>
<tag menu='E' submenu='Exif' inserttext='read_exif_data(|)' hint='(PHP 4>=4.0.1, PHP 5) Alias of exif_read_data().' flags='130'/>
<tag menu='F' submenu='FDF-->>f - fdf_h' inserttext='fdf_add_doc_javascript(|)' hint='(PHP 4>=4.3.0, PHP 5) bool fdf_add_doc_javascript(resource $fdf_document, string $script_name, string $script_code) - Adds javascript code to the FDF document.' flags='130'/>
<tag menu='F' submenu='FDF-->>f - fdf_h' inserttext='fdf_add_template(|)' hint='(PHP 4, PHP 5) bool fdf_add_template(resource $fdf_document, int $newpage, string $filename, string $template, int $rename) - Adds a template into the FDF document.' flags='130'/>
<tag menu='F' submenu='FDF-->>f - fdf_h' inserttext='fdf_close(|)' hint='(PHP 4, PHP 5) void fdf_close(resource $fdf_document) - Close an FDF document.' flags='130'/>
<tag menu='F' submenu='FDF-->>f - fdf_h' inserttext='fdf_create()' hint='(PHP 4, PHP 5) resource fdf_create(void) - Create a new FDF document.' flags='130'/>
<tag menu='F' submenu='FDF-->>f - fdf_h' inserttext='fdf_enum_values(|)' hint='(PHP 4>=4.3.0, PHP 5) bool fdf_enum_values(resource $fdf_document, callback $function [, mixed $userdata]) - Call a user defined function for each document value.' flags='130'/>
<tag menu='F' submenu='FDF-->>f - fdf_h' inserttext='fdf_errno()' hint='(PHP 4>=4.3.0, PHP 5) int fdf_errno(void) - Return error code for last fdf operation.' flags='130'/>
<tag menu='F' submenu='FDF-->>f - fdf_h' inserttext='fdf_error(|)' hint='(PHP 4>=4.3.0, PHP 5) string fdf_error([int $error_code]) - Return error description for FDF error code.' flags='130'/>
<tag menu='F' submenu='FDF-->>f - fdf_h' inserttext='fdf_get_ap(|)' hint='(PHP 4>=4.3.0, PHP 5) bool fdf_get_ap(resource $fdf_document, string $field, int $face, string $filename) - Get the appearance of a field.' flags='130'/>
<tag menu='F' submenu='FDF-->>f - fdf_h' inserttext='fdf_get_attachment(|)' hint='(PHP 4>=4.3.0, PHP 5) array fdf_get_attachment(resource $fdf_document, string $fieldname, string $savepath) - Extracts uploaded file embedded in the FDF.' flags='130'/>
<tag menu='F' submenu='FDF-->>f - fdf_h' inserttext='fdf_get_encoding(|)' hint='(PHP 4>=4.3.0, PHP 5) string fdf_get_encoding(resource $fdf_document) - Get the value of the /Encoding key.' flags='130'/>
<tag menu='F' submenu='FDF-->>f - fdf_h' inserttext='fdf_get_file(|)' hint='(PHP 4, PHP 5) string fdf_get_file(resource $fdf_document) - Get the value of the /F key.' flags='130'/>
<tag menu='F' submenu='FDF-->>f - fdf_h' inserttext='fdf_get_flags(|)' hint='(PHP 4>=4.3.0, PHP 5) int fdf_get_flags(resource $fdf_document, string $fieldname, int $whichflags) - Gets the flags of a field.' flags='130'/>
<tag menu='F' submenu='FDF-->>f - fdf_h' inserttext='fdf_get_opt(|)' hint='(PHP 4>=4.3.0, PHP 5) mixed fdf_get_opt(resource $fdf_document, string $fieldname [, int $element]) - Gets a value from the opt array of a field.' flags='130'/>
<tag menu='F' submenu='FDF-->>f - fdf_h' inserttext='fdf_get_status(|)' hint='(PHP 4, PHP 5) string fdf_get_status(resource $fdf_document) - Get the value of the /STATUS key.' flags='130'/>
<tag menu='F' submenu='FDF-->>f - fdf_h' inserttext='fdf_get_value(|)' hint='(PHP 4, PHP 5) mixed fdf_get_value(resource $fdf_document, string $fieldname [, int $which]) - Get the value of a field.' flags='130'/>
<tag menu='F' submenu='FDF-->>f - fdf_h' inserttext='fdf_get_version(|)' hint='(PHP 4>=4.3.0, PHP 5) string fdf_get_version([resource $fdf_document]) - Gets version number for FDF API or file.' flags='130'/>
<tag menu='F' submenu='FDF-->>f - fdf_h' inserttext='fdf_header()' hint='(PHP 4>=4.3.0, PHP 5) void fdf_header(void) - Sets FDF-specific output headers.' flags='130'/>
<tag menu='F' submenu='FDF-->>fdf_n - f' inserttext='fdf_next_field_name(|)' hint='(PHP 4, PHP 5) string fdf_next_field_name(resource $fdf_document [, string $fieldname]) - Get the next field name.' flags='130'/>
<tag menu='F' submenu='FDF-->>fdf_n - f' inserttext='fdf_open(|)' hint='(PHP 4, PHP 5) resource fdf_open(string $filename) - Open a FDF document.' flags='130'/>
<tag menu='F' submenu='FDF-->>fdf_n - f' inserttext='fdf_open_string(|)' hint='(PHP 4>=4.3.0, PHP 5) resource fdf_open_string(string $fdf_data) - Read a FDF document from a string.' flags='130'/>
<tag menu='F' submenu='FDF-->>fdf_n - f' inserttext='fdf_remove_item(|)' hint='(PHP 4>=4.3.0, PHP 5) bool fdf_remove_item(resource $fdf_document, string $fieldname, int $item) - Sets target frame for form.' flags='130'/>
<tag menu='F' submenu='FDF-->>fdf_n - f' inserttext='fdf_save(|)' hint='(PHP 4, PHP 5) bool fdf_save(resource $fdf_document [, string $filename]) - Save a FDF document.' flags='130'/>
<tag menu='F' submenu='FDF-->>fdf_n - f' inserttext='fdf_save_string(|)' hint='(PHP 4>=4.3.0, PHP 5) string fdf_save_string(resource $fdf_document) - Returns the FDF document as a string.' flags='130'/>
<tag menu='F' submenu='FDF-->>fdf_n - f' inserttext='fdf_set_ap(|)' hint='(PHP 4, PHP 5) bool fdf_set_ap(resource $fdf_document, string $field_name, int $face, string $filename, int $page_number) - Set the appearance of a field.' flags='130'/>
<tag menu='F' submenu='FDF-->>fdf_n - f' inserttext='fdf_set_encoding(|)' hint='(PHP 4>=4.0.7, PHP 5) bool fdf_set_encoding(resource $fdf_document, string $encoding) - Sets FDF character encoding.' flags='130'/>
<tag menu='F' submenu='FDF-->>fdf_n - f' inserttext='fdf_set_file(|)' hint='(PHP 4, PHP 5) bool fdf_set_file(resource $fdf_document, string $url [, string $target_frame]) - Set PDF document to display FDF data in.' flags='130'/>
<tag menu='F' submenu='FDF-->>fdf_n - f' inserttext='fdf_set_flags(|)' hint='(PHP 4>=4.0.2, PHP 5) bool fdf_set_flags(resource $fdf_document, string $fieldname, int $whichFlags, int $newFlags) - Sets a flag of a field.' flags='130'/>
<tag menu='F' submenu='FDF-->>fdf_n - f' inserttext='fdf_set_javascript_action(|)' hint='(PHP 4>=4.0.2, PHP 5) bool fdf_set_javascript_action(resource $fdf_document, string $fieldname, int $trigger, string $script) - Sets an javascript action of a field.' flags='130'/>
<tag menu='F' submenu='FDF-->>fdf_n - f' inserttext='fdf_set_on_import_javascript(|)' hint='(PHP 4>=4.3.0, PHP 5) bool fdf_set_on_import_javascript(resource $fdf_document, string $script, bool $before_data_import) - Adds javascript code to be executed when Acrobat opens the FDF.' flags='130'/>
<tag menu='F' submenu='FDF-->>fdf_n - f' inserttext='fdf_set_opt(|)' hint='(PHP 4>=4.0.2, PHP 5) bool fdf_set_opt(resource $fdf_document, string $fieldname, int $element, string $str1, string $str2) - Sets an option of a field.' flags='130'/>
<tag menu='F' submenu='FDF-->>fdf_n - f' inserttext='fdf_set_status(|)' hint='(PHP 4, PHP 5) bool fdf_set_status(resource $fdf_document, string $status) - Set the value of the /STATUS key.' flags='130'/>
<tag menu='F' submenu='FDF-->>fdf_n - f' inserttext='fdf_set_submit_form_action(|)' hint='(PHP 4>=4.0.2, PHP 5) bool fdf_set_submit_form_action(resource $fdf_document, string $fieldname, int $trigger, string $script, int $flags) - Sets a submit form action of a field.' flags='130'/>
<tag menu='F' submenu='FDF-->>fdf_n - f' inserttext='fdf_set_target_frame(|)' hint='(PHP 4>=4.3.0, PHP 5) bool fdf_set_target_frame(resource $fdf_document, string $frame_name) - Set target frame for form display.' flags='130'/>
<tag menu='F' submenu='FDF-->>fdf_n - f' inserttext='fdf_set_value(|)' hint='(PHP 4, PHP 5) bool fdf_set_value(resource $fdf_document, string $fieldname, mixed $value [, int $isName]) - Set the value of a field.' flags='130'/>
<tag menu='F' submenu='FDF-->>fdf_n - f' inserttext='fdf_set_version(|)' hint='(PHP 4>=4.3.0, PHP 5) bool fdf_set_version(resource $fdf_document, string $version) - Sets version number for a FDF file.' flags='130'/>
<tag menu='F' submenu='FTP-->>f - ftp_nb_fg' inserttext='ftp_alloc(|)' hint='(PHP 5) bool ftp_alloc(resource $ftp_stream, int $filesize [, string &amp;$result]) - Allocates space for a file to be uploaded.' flags='130'/>
<tag menu='F' submenu='FTP-->>f - ftp_nb_fg' inserttext='ftp_cdup(|)' hint='(PHP 4, PHP 5) bool ftp_cdup(resource $ftp_stream) - Changes to the parent directory.' flags='130'/>
<tag menu='F' submenu='FTP-->>f - ftp_nb_fg' inserttext='ftp_chdir(|)' hint='(PHP 4, PHP 5) bool ftp_chdir(resource $ftp_stream, string $directory) - Changes the current directory on a FTP server.' flags='130'/>
<tag menu='F' submenu='FTP-->>f - ftp_nb_fg' inserttext='ftp_chmod(|)' hint='(PHP 5) int ftp_chmod(resource $ftp_stream, int $mode, string $filename) - Set permissions on a file via FTP.' flags='130'/>
<tag menu='F' submenu='FTP-->>f - ftp_nb_fg' inserttext='ftp_close(|)' hint='(PHP 4>=4.2.0, PHP 5) bool ftp_close(resource $ftp_stream) - Closes an FTP connection.' flags='130'/>
<tag menu='F' submenu='FTP-->>f - ftp_nb_fg' inserttext='ftp_connect(|)' hint='(PHP 4, PHP 5) resource ftp_connect(string $host [, int $port=21 [, int $timeout=90 ]]) - Opens an FTP connection.' flags='130'/>
<tag menu='F' submenu='FTP-->>f - ftp_nb_fg' inserttext='ftp_delete(|)' hint='(PHP 4, PHP 5) bool ftp_delete(resource $ftp_stream, string $path) - Deletes a file on the FTP server.' flags='130'/>
<tag menu='F' submenu='FTP-->>f - ftp_nb_fg' inserttext='ftp_exec(|)' hint='(PHP 4>=4.0.3, PHP 5) bool ftp_exec(resource $ftp_stream, string $command) - Requests execution of a command on the FTP server.' flags='130'/>
<tag menu='F' submenu='FTP-->>f - ftp_nb_fg' inserttext='ftp_fget(|)' hint='(PHP 4, PHP 5) bool ftp_fget(resource $ftp_stream, resource $handle, string $remote_file, int $mode [, int $resumepos=0]) - Downloads a file from the FTP server and saves to an open file.' flags='130'/>
<tag menu='F' submenu='FTP-->>f - ftp_nb_fg' inserttext='ftp_fput(|)' hint='(PHP 4, PHP 5) bool ftp_fput(resource $ftp_stream, string $remote_file, resource $handle, int $mode [, int $startpos=0]) - Uploads from an open file to the FTP server.' flags='130'/>
<tag menu='F' submenu='FTP-->>f - ftp_nb_fg' inserttext='ftp_get(|)' hint='(PHP 4, PHP 5) bool ftp_get(resource $ftp_stream, string $local_file, string $remote_file, int $mode [, int $resumepos=0]) - Downloads a file from the FTP server.' flags='130'/>
<tag menu='F' submenu='FTP-->>f - ftp_nb_fg' inserttext='ftp_get_option(|)' hint='(PHP 4>=4.2.0, PHP 5) mixed ftp_get_option(resource $ftp_stream, int $option) - Retrieves various runtime behaviours of the current FTP stream.' flags='130'/>
<tag menu='F' submenu='FTP-->>f - ftp_nb_fg' inserttext='ftp_login(|)' hint='(PHP 4, PHP 5) bool ftp_login(resource $ftp_stream, string $username, string $password) - Logs in to an FTP connection.' flags='130'/>
<tag menu='F' submenu='FTP-->>f - ftp_nb_fg' inserttext='ftp_mdtm(|)' hint='(PHP 4, PHP 5) int ftp_mdtm(resource $ftp_stream, string $remote_file) - Returns the last modified time of the given file.' flags='130'/>
<tag menu='F' submenu='FTP-->>f - ftp_nb_fg' inserttext='ftp_mkdir(|)' hint='(PHP 4, PHP 5) string ftp_mkdir(resource $ftp_stream, string $directory) - Creates a directory.' flags='130'/>
<tag menu='F' submenu='FTP-->>f - ftp_nb_fg' inserttext='ftp_nb_continue(|)' hint='(PHP 4>=4.3.0, PHP 5) int ftp_nb_continue(resource $ftp_stream) - Continues retrieving/sending a file (non-blocking).' flags='130'/>
<tag menu='F' submenu='FTP-->>f - ftp_nb_fg' inserttext='ftp_nb_fget(|)' hint='(PHP 4>=4.3.0, PHP 5) int ftp_nb_fget(resource $ftp_stream, resource $handle, string $remote_file, int $mode [, int $resumepos=0]) - Retrieves a file from the FTP server and writes it to an open file (non-blocking).' flags='130'/>
<tag menu='F' submenu='FTP-->>ftp_nb_fp - f' inserttext='ftp_nb_fput(|)' hint='(PHP 4>=4.3.0, PHP 5) int ftp_nb_fput(resource $ftp_stream, string $remote_file, resource $handle, int $mode [, int $startpos=0]) - Stores a file from an open file to the FTP server (non-blocking).' flags='130'/>
<tag menu='F' submenu='FTP-->>ftp_nb_fp - f' inserttext='ftp_nb_get(|)' hint='(PHP 4>=4.3.0, PHP 5) int ftp_nb_get(resource $ftp_stream, string $local_file, string $remote_file, int $mode [, int $resumepos=0]) - Retrieves a file from the FTP server and writes it to a local file (non-blocking).' flags='130'/>
<tag menu='F' submenu='FTP-->>ftp_nb_fp - f' inserttext='ftp_nb_put(|)' hint='(PHP 4>=4.3.0, PHP 5) int ftp_nb_put(resource $ftp_stream, string $remote_file, string $local_file, int $mode [, int $startpos=0]) - Stores a file on the FTP server (non-blocking).' flags='130'/>
<tag menu='F' submenu='FTP-->>ftp_nb_fp - f' inserttext='ftp_nlist(|)' hint='(PHP 4, PHP 5) array ftp_nlist(resource $ftp_stream, string $directory) - Returns a list of files in the given directory.' flags='130'/>
<tag menu='F' submenu='FTP-->>ftp_nb_fp - f' inserttext='ftp_pasv(|)' hint='(PHP 4, PHP 5) bool ftp_pasv(resource $ftp_stream, bool $pasv) - Turns passive mode on or off.' flags='130'/>
<tag menu='F' submenu='FTP-->>ftp_nb_fp - f' inserttext='ftp_put(|)' hint='(PHP 4, PHP 5) bool ftp_put(resource $ftp_stream, string $remote_file, string $local_file, int $mode [, int $startpos=0]) - Uploads a file to the FTP server.' flags='130'/>
<tag menu='F' submenu='FTP-->>ftp_nb_fp - f' inserttext='ftp_pwd(|)' hint='(PHP 4, PHP 5) string ftp_pwd(resource $ftp_stream) - Returns the current directory name.' flags='130'/>
<tag menu='F' submenu='FTP-->>ftp_nb_fp - f' inserttext='ftp_quit(|)' hint='(PHP 4, PHP 5) Alias of ftp_close().' flags='130'/>
<tag menu='F' submenu='FTP-->>ftp_nb_fp - f' inserttext='ftp_raw(|)' hint='(PHP 5) array ftp_raw(resource $ftp_stream, string $command) - Sends an arbitrary command to an FTP server.' flags='130'/>
<tag menu='F' submenu='FTP-->>ftp_nb_fp - f' inserttext='ftp_rawlist(|)' hint='(PHP 4, PHP 5) array ftp_rawlist(resource $ftp_stream, string $directory [, bool $recursive=false]) - Returns a detailed list of files in the given directory.' flags='130'/>
<tag menu='F' submenu='FTP-->>ftp_nb_fp - f' inserttext='ftp_rename(|)' hint='(PHP 4, PHP 5) bool ftp_rename(resource $ftp_stream, string $oldname, string $newname) - Renames a file or a directory on the FTP server.' flags='130'/>
<tag menu='F' submenu='FTP-->>ftp_nb_fp - f' inserttext='ftp_rmdir(|)' hint='(PHP 4, PHP 5) bool ftp_rmdir(resource $ftp_stream, string $directory) - Removes a directory.' flags='130'/>
<tag menu='F' submenu='FTP-->>ftp_nb_fp - f' inserttext='ftp_set_option(|)' hint='(PHP 4>=4.2.0, PHP 5) bool ftp_set_option(resource $ftp_stream, int $option, mixed $value) - Set miscellaneous runtime FTP options.' flags='130'/>
<tag menu='F' submenu='FTP-->>ftp_nb_fp - f' inserttext='ftp_site(|)' hint='(PHP 4, PHP 5) bool ftp_site(resource $ftp_stream, string $command) - Sends a SITE command to the server.' flags='130'/>
<tag menu='F' submenu='FTP-->>ftp_nb_fp - f' inserttext='ftp_size(|)' hint='(PHP 4, PHP 5) int ftp_size(resource $ftp_stream, string $remote_file) - Returns the size of the given file.' flags='130'/>
<tag menu='F' submenu='FTP-->>ftp_nb_fp - f' inserttext='ftp_ssl_connect(|)' hint='(PHP 4>=4.3.0, PHP 5) resource ftp_ssl_connect(string $host [, int $port=21 [, int $timeout=90 ]]) - Opens an Secure SSL-FTP connection.' flags='130'/>
<tag menu='F' submenu='FTP-->>ftp_nb_fp - f' inserttext='ftp_systype(|)' hint='(PHP 4, PHP 5) string ftp_systype(resource $ftp_stream) - Returns the system type identifier of the remote FTP server.' flags='130'/>
<tag menu='F' submenu='File Alteration Monitor' inserttext='fam_cancel_monitor(|)' hint='(PHP 5&lt;=5.0.5) bool fam_cancel_monitor(resource $fam, resource $fam_monitor) - Terminate monitoring.' flags='130'/>
<tag menu='F' submenu='File Alteration Monitor' inserttext='fam_close(|)' hint='(PHP 5&lt;=5.0.5) void fam_close(resource $fam) - Close FAM connection.' flags='130'/>
<tag menu='F' submenu='File Alteration Monitor' inserttext='fam_monitor_collection(|)' hint='(PHP 5&lt;=5.0.5) resource fam_monitor_collection(resource $fam, string $dirname, int $depth, string $mask) - Monitor a collection of files in a directory for changes.' flags='130'/>
<tag menu='F' submenu='File Alteration Monitor' inserttext='fam_monitor_directory(|)' hint='(PHP 5&lt;=5.0.5) resource fam_monitor_directory(resource $fam, string $dirname) - Monitor a directory for changes.' flags='130'/>
<tag menu='F' submenu='File Alteration Monitor' inserttext='fam_monitor_file(|)' hint='(PHP 5&lt;=5.0.5) resource fam_monitor_file(resource $fam, string $filename) - Monitor a regular file for changes.' flags='130'/>
<tag menu='F' submenu='File Alteration Monitor' inserttext='fam_next_event(|)' hint='(PHP 5&lt;=5.0.5) array fam_next_event(resource $fam) - Get next pending FAM event.' flags='130'/>
<tag menu='F' submenu='File Alteration Monitor' inserttext='fam_open(|)' hint='(PHP 5&lt;=5.0.5) resource fam_open([string $appname]) - Open connection to FAM daemon.' flags='130'/>
<tag menu='F' submenu='File Alteration Monitor' inserttext='fam_pending(|)' hint='(PHP 5&lt;=5.0.5) int fam_pending(resource $fam) - Check for pending FAM events.' flags='130'/>
<tag menu='F' submenu='File Alteration Monitor' inserttext='fam_resume_monitor(|)' hint='(PHP 5&lt;=5.0.5) bool fam_resume_monitor(resource $fam, resource $fam_monitor) - Resume suspended monitoring.' flags='130'/>
<tag menu='F' submenu='File Alteration Monitor' inserttext='fam_suspend_monitor(|)' hint='(PHP 5&lt;=5.0.5) bool fam_suspend_monitor(resource $fam, resource $fam_monitor) - Temporarily suspend monitoring.' flags='130'/>
<tag menu='F' submenu='Fileinfo' inserttext='finfo_buffer(|)' hint='(PHP 5>=5.3.0, PECL fileinfo>=0.1.0) string finfo_buffer(resource $finfo, string $string=NULL [, int $options=FILEINFO_NONE [, resource $context=NULL ]]) - Return information about a string buffer.' flags='130'/>
<tag menu='F' submenu='Fileinfo' inserttext='finfo_close(|)' hint='(PHP>=5.3.0, PECL fileinfo>=0.1.0) bool finfo_close(resource $finfo) - Close fileinfo resource.' flags='130'/>
<tag menu='F' submenu='Fileinfo' inserttext='finfo_file(|)' hint='(PHP>=5.3.0, PECL fileinfo>=0.1.0) string finfo_file(resource $finfo, string $file_name=NULL [, int $options=FILEINFO_NONE [, resource $context=NULL ]]) - Return information about a file.' flags='130'/>
<tag menu='F' submenu='Fileinfo' inserttext='finfo_open(|)' hint='(PHP>=5.3.0, PECL fileinfo>=0.1.0) resource finfo_open([int $options=FILEINFO_NONE [, string $magic_file=NULL ]]) - Create a new fileinfo resource.' flags='130'/>
<tag menu='F' submenu='Fileinfo' inserttext='finfo_set_flags(|)' hint='(PHP>=5.3.0, PECL fileinfo>=0.1.0) bool finfo_set_flags(resource $finfo, int $options) - Set libmagic configuration options.' flags='130'/>
<tag menu='F' submenu='Fileinfo' inserttext='mime_content_type(|)' hint='(PHP 4>=4.3.0, PHP 5) string mime_content_type(string $filename) - Detect MIME Content-type for a file (deprecated).' flags='130'/>
<tag menu='F' submenu='Filesystem-->>b - file_g' inserttext='basename(|)' hint='(PHP 4, PHP 5) string basename(string $path [, string $suffix]) - Returns filename component of path.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>b - file_g' inserttext='chgrp(|)' hint='(PHP 4, PHP 5) bool chgrp(string $filename, mixed $group) - Changes file group.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>b - file_g' inserttext='chmod(|)' hint='(PHP 4, PHP 5) bool chmod(string $filename, int $mode) - Changes file mode.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>b - file_g' inserttext='chown(|)' hint='(PHP 4, PHP 5) bool chown(string $filename, mixed $user) - Changes file owner.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>b - file_g' inserttext='clearstatcache(|)' hint='(PHP 4, PHP 5) void clearstatcache([bool $clear_realpath_cache=false [, string $filename ]]) - Clears file status cache.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>b - file_g' inserttext='copy(|)' hint='(PHP 4, PHP 5) bool copy(string $source, string $dest [, resource $context]) - Copies file.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>b - file_g' inserttext='dirname(|)' hint='(PHP 4, PHP 5) string dirname(string $path) - Returns directory name component of path.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>b - file_g' inserttext='disk_free_space(|)' hint='(PHP 4>=4.1.0, PHP 5) float disk_free_space(string $directory) - Returns available space on filesystem or disk partition.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>b - file_g' inserttext='disk_total_space(|)' hint='(PHP 4>=4.1.0, PHP 5) float disk_total_space(string $directory) - Returns the total size of a filesystem or disk partition.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>b - file_g' inserttext='diskfreespace(|)' hint='(PHP 4, PHP 5) Alias of disk_free_space().' flags='130'/>
<tag menu='F' submenu='Filesystem-->>b - file_g' inserttext='fclose(|)' hint='(PHP 4, PHP 5) bool fclose(resource $handle) - Closes an open file pointer.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>b - file_g' inserttext='feof(|)' hint='(PHP 4, PHP 5) bool feof(resource $handle) - Tests for end-of-file on a file pointer.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>b - file_g' inserttext='fflush(|)' hint='(PHP 4>=4.0.1, PHP 5) bool fflush(resource $handle) - Flushes the output to a file.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>b - file_g' inserttext='fgetc(|)' hint='(PHP 4, PHP 5) string fgetc(resource $handle) - Gets character from file pointer.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>b - file_g' inserttext='fgetcsv(|)' hint="(PHP 4, PHP 5) array fgetcsv(resource $handle [, int $length [, string $delimiter=',' [, string $enclosure='&quot;' [, string $escape='\\' ]]]]) - Gets line from file pointer and parse for CSV fields." flags='130'/>
<tag menu='F' submenu='Filesystem-->>b - file_g' inserttext='fgets(|)' hint='(PHP 4, PHP 5) string fgets(resource $handle [, int $length]) - Gets line from file pointer.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>b - file_g' inserttext='fgetss(|)' hint='(PHP 4, PHP 5) string fgetss(resource $handle [, int $length [, string $allowable_tags ]]) - Gets line from file pointer and strip HTML tags.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>b - file_g' inserttext='file(|)' hint='(PHP 4, PHP 5) array file(string $filename [, int $flags=0 [, resource $context ]]) - Reads entire file into an array.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>b - file_g' inserttext='file_exists(|)' hint='(PHP 4, PHP 5) bool file_exists(string $filename) - Checks whether a file or directory exists.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>b - file_g' inserttext='file_get_contents(|)' hint='(PHP 4>=4.3.0, PHP 5) string file_get_contents(string $filename [, bool $use_include_path=false [, resource $context [, int $offset=-1 [, int $maxlen ]]]]) - Reads entire file into a string.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>file_p - fs' inserttext='file_put_contents(|)' hint='(PHP 5) int file_put_contents(string $filename, mixed $data [, int $flags=0 [, resource $context ]]) - Write a string to a file.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>file_p - fs' inserttext='fileatime(|)' hint='(PHP 4, PHP 5) int fileatime(string $filename) - Gets last access time of file.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>file_p - fs' inserttext='filectime(|)' hint='(PHP 4, PHP 5) int filectime(string $filename) - Gets inode change time of file.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>file_p - fs' inserttext='filegroup(|)' hint='(PHP 4, PHP 5) int filegroup(string $filename) - Gets file group.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>file_p - fs' inserttext='fileinode(|)' hint='(PHP 4, PHP 5) int fileinode(string $filename) - Gets file inode.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>file_p - fs' inserttext='filemtime(|)' hint='(PHP 4, PHP 5) int filemtime(string $filename) - Gets file modification time.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>file_p - fs' inserttext='fileowner(|)' hint='(PHP 4, PHP 5) int fileowner(string $filename) - Gets file owner.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>file_p - fs' inserttext='fileperms(|)' hint='(PHP 4, PHP 5) int fileperms(string $filename) - Gets file permissions.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>file_p - fs' inserttext='filesize(|)' hint='(PHP 4, PHP 5) int filesize(string $filename) - Gets file size.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>file_p - fs' inserttext='filetype(|)' hint='(PHP 4, PHP 5) string filetype(string $filename) - Gets file type.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>file_p - fs' inserttext='flock(|)' hint='(PHP 4, PHP 5) bool flock(resource $handle, int $operation [, int &amp;$wouldblock]) - Portable advisory file locking.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>file_p - fs' inserttext='fnmatch(|)' hint='(PHP 4>=4.3.0, PHP 5) bool fnmatch(string $pattern, string $string [, int $flags=0]) - Match filename against a pattern.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>file_p - fs' inserttext='fopen(|)' hint='(PHP 4, PHP 5) resource fopen(string $filename, string $mode [, bool $use_include_path=false [, resource $context ]]) - Opens file or URL.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>file_p - fs' inserttext='fpassthru(|)' hint='(PHP 4, PHP 5) int fpassthru(resource $handle) - Output all remaining data on a file pointer.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>file_p - fs' inserttext='fputcsv(|)' hint="(PHP 5>=5.1.0) int fputcsv(resource $handle, array $fields [, string $delimiter=',' [, string $enclosure='&quot;' ]]) - Format line as CSV and write to file pointer." flags='130'/>
<tag menu='F' submenu='Filesystem-->>file_p - fs' inserttext='fputs(|)' hint='(PHP 4, PHP 5) Alias of fwrite().' flags='130'/>
<tag menu='F' submenu='Filesystem-->>file_p - fs' inserttext='fread(|)' hint='(PHP 4, PHP 5) string fread(resource $handle, int $length) - Binary-safe file read.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>file_p - fs' inserttext='fscanf(|)' hint='(PHP 4>=4.0.1, PHP 5) mixed fscanf(resource $handle, string $format [, mixed &amp;$...]) - Parses input from a file according to a format.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>file_p - fs' inserttext='fseek(|)' hint='(PHP 4, PHP 5) int fseek(resource $handle, int $offset [, int $whence=SEEK_SET]) - Seeks on a file pointer.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>file_p - fs' inserttext='fstat(|)' hint='(PHP 4, PHP 5) array fstat(resource $handle) - Gets information about a file using an open file pointer.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>ft - parse_ini_f' inserttext='ftell(|)' hint='(PHP 4, PHP 5) int ftell(resource $handle) - Returns the current position of the file read/write pointer.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>ft - parse_ini_f' inserttext='ftruncate(|)' hint='(PHP 4, PHP 5) bool ftruncate(resource $handle, int $size) - Truncates a file to a given length.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>ft - parse_ini_f' inserttext='fwrite(|)' hint='(PHP 4, PHP 5) int fwrite(resource $handle, string $string [, int $length]) - Binary-safe file write.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>ft - parse_ini_f' inserttext='glob(|)' hint='(PHP 4>=4.3.0, PHP 5) array glob(string $pattern [, int $flags=0]) - Find pathnames matching a pattern.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>ft - parse_ini_f' inserttext='is_dir(|)' hint='(PHP 4, PHP 5) bool is_dir(string $filename) - Tells whether the filename is a directory.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>ft - parse_ini_f' inserttext='is_executable(|)' hint='(PHP 4, PHP 5) bool is_executable(string $filename) - Tells whether the filename is executable.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>ft - parse_ini_f' inserttext='is_file(|)' hint='(PHP 4, PHP 5) bool is_file(string $filename) - Tells whether the filename is a regular file.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>ft - parse_ini_f' inserttext='is_link(|)' hint='(PHP 4, PHP 5) bool is_link(string $filename) - Tells whether the filename is a symbolic link.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>ft - parse_ini_f' inserttext='is_readable(|)' hint='(PHP 4, PHP 5) bool is_readable(string $filename) - Tells whether a file exists and is readable.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>ft - parse_ini_f' inserttext='is_uploaded_file(|)' hint='(PHP 4>=4.0.3, PHP 5) bool is_uploaded_file(string $filename) - Tells whether the file was uploaded via HTTP POST.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>ft - parse_ini_f' inserttext='is_writable(|)' hint='(PHP 4, PHP 5) bool is_writable(string $filename) - Tells whether the filename is writable.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>ft - parse_ini_f' inserttext='is_writeable(|)' hint='(PHP 4, PHP 5) Alias of is_writable().' flags='130'/>
<tag menu='F' submenu='Filesystem-->>ft - parse_ini_f' inserttext='lchgrp(|)' hint='(PHP 5>=5.1.2) bool lchgrp(string $filename, mixed $group) - Changes group ownership of symlink.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>ft - parse_ini_f' inserttext='lchown(|)' hint='(PHP 5>=5.1.2) bool lchown(string $filename, mixed $user) - Changes user ownership of symlink.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>ft - parse_ini_f' inserttext='link(|)' hint='(PHP 4, PHP 5) bool link(string $from_path, string $to_path) - Create a hard link.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>ft - parse_ini_f' inserttext='linkinfo(|)' hint='(PHP 4, PHP 5) int linkinfo(string $path) - Gets information about a link.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>ft - parse_ini_f' inserttext='lstat(|)' hint='(PHP 4, PHP 5) array lstat(string $filename) - Gives information about a file or symbolic link.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>ft - parse_ini_f' inserttext='mkdir(|)' hint='(PHP 4, PHP 5) bool mkdir(string $pathname [, int $mode=0777 [, bool $recursive=false [, resource $context ]]]) - Makes directory.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>ft - parse_ini_f' inserttext='move_uploaded_file(|)' hint='(PHP 4>=4.0.3, PHP 5) bool move_uploaded_file(string $filename, string $destination) - Moves an uploaded file to a new location.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>ft - parse_ini_f' inserttext='parse_ini_file(|)' hint='(PHP 4, PHP 5) array parse_ini_file(string $filename [, bool $process_sections=false [, int $scanner_mode=INI_SCANNER_NORMAL ]]) - Parse a configuration file.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>parse_ini_s - u' inserttext='parse_ini_string(|)' hint='(PHP 5>=5.3.0) array parse_ini_string(string $ini [, bool $process_sections=false [, int $scanner_mode=INI_SCANNER_NORMAL ]]) - Parse a configuration string.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>parse_ini_s - u' inserttext='pathinfo(|)' hint='(PHP 4>=4.0.3, PHP 5) mixed pathinfo(string $path [, int $options=PATHINFO_DIRNAME | PATHINFO_BASENAME | PATHINFO_EXTENSION | PATHINFO_FILENAME]) - Returns information about a file path.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>parse_ini_s - u' inserttext='pclose(|)' hint='(PHP 4, PHP 5) int pclose(resource $handle) - Closes process file pointer.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>parse_ini_s - u' inserttext='popen(|)' hint='(PHP 4, PHP 5) resource popen(string $command, string $mode) - Opens process file pointer.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>parse_ini_s - u' inserttext='readfile(|)' hint='(PHP 4, PHP 5) int readfile(string $filename [, bool $use_include_path=false [, resource $context ]]) - Outputs a file.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>parse_ini_s - u' inserttext='readlink(|)' hint='(PHP 4, PHP 5) string readlink(string $path) - Returns the target of a symbolic link.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>parse_ini_s - u' inserttext='realpath(|)' hint='(PHP 4, PHP 5) string realpath(string $path) - Returns canonicalized absolute pathname.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>parse_ini_s - u' inserttext='realpath_cache_get()' hint='(PHP 5>=5.3.2) array realpath_cache_get(void) - Get realpath cache entries.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>parse_ini_s - u' inserttext='realpath_cache_size()' hint='(PHP 5>=5.3.2) int realpath_cache_size(void) - Get realpath cache size.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>parse_ini_s - u' inserttext='rename(|)' hint='(PHP 4, PHP 5) bool rename(string $oldname, string $newname [, resource $context]) - Renames a file or directory.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>parse_ini_s - u' inserttext='rewind(|)' hint='(PHP 4, PHP 5) bool rewind(resource $handle) - Rewind the position of a file pointer.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>parse_ini_s - u' inserttext='rmdir(|)' hint='(PHP 4, PHP 5) bool rmdir(string $dirname [, resource $context]) - Removes directory.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>parse_ini_s - u' inserttext='set_file_buffer(|)' hint='(PHP 4, PHP 5) Alias of stream_set_write_buffer().' flags='130'/>
<tag menu='F' submenu='Filesystem-->>parse_ini_s - u' inserttext='stat(|)' hint='(PHP 4, PHP 5) array stat(string $filename) - Gives information about a file.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>parse_ini_s - u' inserttext='symlink(|)' hint='(PHP 4, PHP 5) bool symlink(string $target, string $link) - Creates a symbolic link.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>parse_ini_s - u' inserttext='tempnam(|)' hint='(PHP 4, PHP 5) string tempnam(string $dir, string $prefix) - Create file with unique file name.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>parse_ini_s - u' inserttext='tmpfile()' hint='(PHP 4, PHP 5) resource tmpfile(void) - Creates a temporary file.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>parse_ini_s - u' inserttext='touch(|)' hint='(PHP 4, PHP 5) bool touch(string $filename [, int $time=time() [, int $atime ]]) - Sets access and modification time of file.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>parse_ini_s - u' inserttext='umask(|)' hint='(PHP 4, PHP 5) int umask([int $mask]) - Changes the current umask.' flags='130'/>
<tag menu='F' submenu='Filesystem-->>parse_ini_s - u' inserttext='unlink(|)' hint='(PHP 4, PHP 5) bool unlink(string $filename [, resource $context]) - Deletes a file.' flags='130'/>
<tag menu='F' submenu='FilesystemIterator class' inserttext='FilesystemIterator::__construct(|)' hint='(PHP 5>=5.3.0) FilesystemIterator::__construct(string $path [, int $flags=FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO | FilesystemIterator::SKIP_DOTS]) - Constructs a new filesystem iterator.' flags='130'/>
<tag menu='F' submenu='FilesystemIterator class' inserttext='FilesystemIterator::current()' hint='(PHP 5>=5.3.0) public mixed FilesystemIterator::current(void) - The current file.' flags='130'/>
<tag menu='F' submenu='FilesystemIterator class' inserttext='FilesystemIterator::getFlags()' hint='(PHP 5>=5.3.0) public int FilesystemIterator::getFlags(void) - Get the handling flags.' flags='130'/>
<tag menu='F' submenu='FilesystemIterator class' inserttext='FilesystemIterator::key()' hint='(PHP 5>=5.3.0) public string FilesystemIterator::key(void) - Retrieve the key for the current file.' flags='130'/>
<tag menu='F' submenu='FilesystemIterator class' inserttext='FilesystemIterator::next()' hint='(PHP 5>=5.3.0) public void FilesystemIterator::next(void) - Move to the next file.' flags='130'/>
<tag menu='F' submenu='FilesystemIterator class' inserttext='FilesystemIterator::rewind()' hint='(PHP 5>=5.3.0) public void FilesystemIterator::rewind(void) - Rewinds back to the beginning.' flags='130'/>
<tag menu='F' submenu='FilesystemIterator class' inserttext='FilesystemIterator::setFlags(|)' hint='(PHP 5>=5.3.0) public void FilesystemIterator::setFlags([int $flags]) - Sets handling flags.' flags='130'/>
<tag menu='F' submenu='Filter' inserttext='filter_has_var(|)' hint='(PHP 5>=5.2.0) bool filter_has_var(int $type, string $variable_name) - Checks if variable of specified type exists.' flags='130'/>
<tag menu='F' submenu='Filter' inserttext='filter_id(|)' hint='(PHP 5>=5.2.0) int filter_id(string $filtername) - Returns the filter ID belonging to a named filter.' flags='130'/>
<tag menu='F' submenu='Filter' inserttext='filter_input(|)' hint='(PHP 5>=5.2.0) mixed filter_input(int $type, string $variable_name [, int $filter=FILTER_DEFAULT [, mixed $options ]]) - Gets a specific external variable by name and optionally filters it.' flags='130'/>
<tag menu='F' submenu='Filter' inserttext='filter_input_array(|)' hint='(PHP 5>=5.2.0) mixed filter_input_array(int $type [, mixed $definition]) - Gets external variables and optionally filters them.' flags='130'/>
<tag menu='F' submenu='Filter' inserttext='filter_list()' hint='(PHP 5>=5.2.0) array filter_list(void) - Returns a list of all supported filters.' flags='130'/>
<tag menu='F' submenu='Filter' inserttext='filter_var(|)' hint='(PHP 5>=5.2.0) mixed filter_var(mixed $variable [, int $filter=FILTER_DEFAULT [, mixed $options ]]) - Filters a variable with a specified filter.' flags='130'/>
<tag menu='F' submenu='Filter' inserttext='filter_var_array(|)' hint='(PHP 5>=5.2.0) mixed filter_var_array(array $data [, mixed $definition]) - Gets multiple variables and optionally filters them.' flags='130'/>
<tag menu='F' submenu='FilterIterator class' inserttext='FilterIterator::__construct(|)' hint='(PHP 5>=5.1.0) FilterIterator::__construct(Iterator $iterator) - Construct a filterIterator.' flags='130'/>
<tag menu='F' submenu='FilterIterator class' inserttext='FilterIterator::accept()' hint='(PHP 5>=5.1.0) abstract bool FilterIterator::accept(void) - Check whether the current element of the iterator is acceptable.' flags='130'/>
<tag menu='F' submenu='FilterIterator class' inserttext='FilterIterator::current()' hint='(PHP 5>=5.1.0) mixed FilterIterator::current(void) - Get the current element value.' flags='130'/>
<tag menu='F' submenu='FilterIterator class' inserttext='FilterIterator::getInnerIterator()' hint='(PHP 5>=5.1.0) Iterator FilterIterator::getInnerIterator(void) - Get the inner iterator.' flags='130'/>
<tag menu='F' submenu='FilterIterator class' inserttext='FilterIterator::key()' hint='(PHP 5>=5.1.0) mixed FilterIterator::key(void) - Get the current key.' flags='130'/>
<tag menu='F' submenu='FilterIterator class' inserttext='FilterIterator::next()' hint='(PHP 5>=5.1.0) void FilterIterator::next(void) - Move the iterator forward.' flags='130'/>
<tag menu='F' submenu='FilterIterator class' inserttext='FilterIterator::rewind()' hint='(PHP 5>=5.1.0) void FilterIterator::rewind(void) - Rewind the iterator.' flags='130'/>
<tag menu='F' submenu='FilterIterator class' inserttext='FilterIterator::valid()' hint='(PHP 5>=5.1.0) bool FilterIterator::valid(void) - Check whether the current element is valid.' flags='130'/>
<tag menu='F' submenu='Firebird/InterBase-->>i - ibase_fetch_o' inserttext='ibase_add_user(|)' hint='(PHP 4>=4.2.0, PHP 5) bool ibase_add_user(resource $service_handle, string $user_name, string $password [, string $first_name [, string $middle_name [, string $last_name ]]]) - Add a user to a security database (only for IB6 or later).' flags='130'/>
<tag menu='F' submenu='Firebird/InterBase-->>i - ibase_fetch_o' inserttext='ibase_affected_rows(|)' hint='(PHP 5) int ibase_affected_rows([resource $link_identifier]) - Return the number of rows that were affected by the previous query.' flags='130'/>
<tag menu='F' submenu='Firebird/InterBase-->>i - ibase_fetch_o' inserttext='ibase_backup(|)' hint='(PHP 5) mixed ibase_backup(resource $service_handle, string $source_db, string $dest_file [, int $options=0 [, bool $verbose=false ]]) - Initiates a backup task in the service manager and returns immediately.' flags='130'/>
<tag menu='F' submenu='Firebird/InterBase-->>i - ibase_fetch_o' inserttext='ibase_blob_add(|)' hint='(PHP 4, PHP 5) void ibase_blob_add(resource $blob_handle, string $data) - Add data into a newly created blob.' flags='130'/>
<tag menu='F' submenu='Firebird/InterBase-->>i - ibase_fetch_o' inserttext='ibase_blob_cancel(|)' hint='(PHP 4, PHP 5) bool ibase_blob_cancel(resource $blob_handle) - Cancel creating blob.' flags='130'/>
<tag menu='F' submenu='Firebird/InterBase-->>i - ibase_fetch_o' inserttext='ibase_blob_close(|)' hint='(PHP 4, PHP 5) mixed ibase_blob_close(resource $blob_handle) - Close blob.' flags='130'/>
<tag menu='F' submenu='Firebird/InterBase-->>i - ibase_fetch_o' inserttext='ibase_blob_create(|)' hint='(PHP 4, PHP 5) resource ibase_blob_create([resource $link_identifier=NULL]) - Create a new blob for adding data.' flags='130'/>
<tag menu='F' submenu='Firebird/InterBase-->>i - ibase_fetch_o' inserttext='ibase_blob_echo(|)' hint='(PHP 4, PHP 5) bool ibase_blob_echo(string $blob_id) - Output blob contents to browser.' flags='130'/>
<tag menu='F' submenu='Firebird/InterBase-->>i - ibase_fetch_o' inserttext='ibase_blob_get(|)' hint='(PHP 4, PHP 5) string ibase_blob_get(resource $blob_handle, int $len) - Get len bytes data from open blob.' flags='130'/>
<tag menu='F' submenu='Firebird/InterBase-->>i - ibase_fetch_o' inserttext='ibase_blob_import(|)' hint='(PHP 4, PHP 5) string ibase_blob_import(resource $link_identifier, resource $file_handle) - Create blob, copy file in it, and close it.' flags='130'/>
<tag menu='F' submenu='Firebird/InterBase-->>i - ibase_fetch_o' inserttext='ibase_blob_info(|)' hint='(PHP 4, PHP 5) array ibase_blob_info(resource $link_identifier, string $blob_id) - Return blob length and other useful info.' flags='130'/>
<tag menu='F' submenu='Firebird/InterBase-->>i - ibase_fetch_o' inserttext='ibase_blob_open(|)' hint='(PHP 4, PHP 5) resource ibase_blob_open(resource $link_identifier, string $blob_id) - Open blob for retrieving data parts.' flags='130'/>
<tag menu='F' submenu='Firebird/InterBase-->>i - ibase_fetch_o' inserttext='ibase_close(|)' hint='(PHP 4, PHP 5) bool ibase_close([resource $connection_id=NULL]) - Close a connection to an InterBase database.' flags='130'/>
<tag menu='F' submenu='Firebird/InterBase-->>i - ibase_fetch_o' inserttext='ibase_commit(|)' hint='(PHP 4, PHP 5) bool ibase_commit([resource $link_or_trans_identifier=NULL]) - Commit a transaction.' flags='130'/>
<tag menu='F' submenu='Firebird/InterBase-->>i - ibase_fetch_o' inserttext='ibase_commit_ret(|)' hint='(PHP 5) bool ibase_commit_ret([resource $link_or_trans_identifier=NULL]) - Commit a transaction without closing it.' flags='130'/>
<tag menu='F' submenu='Firebird/InterBase-->>i - ibase_fetch_o' inserttext='ibase_connect(|)' hint='(PHP 4, PHP 5) resource ibase_connect([string $database [, string $username [, string $password [, string $charset [, int $buffers [, int $dialect [, string $role [, int $sync ]]]]]]]]) - Open a connection to an InterBase database.' flags='130'/>
<tag menu='F' submenu='Firebird/InterBase-->>i - ibase_fetch_o' inserttext='ibase_db_info(|)' hint='(PHP 5) string ibase_db_info(resource $service_handle, string $db, int $action [, int $argument=0]) - Request statistics about a database.' flags='130'/>
<tag menu='F' submenu='Firebird/InterBase-->>i - ibase_fetch_o' inserttext='ibase_delete_user(|)' hint='(PHP 4>=4.2.0, PHP 5) bool ibase_delete_user(resource $service_handle, string $user_name) - Delete a user from a security database (only for IB6 or later).' flags='130'/>
<tag menu='F' submenu='Firebird/InterBase-->>i - ibase_fetch_o' inserttext='ibase_drop_db(|)' hint='(PHP 5) bool ibase_drop_db([resource $connection=NULL]) - Drops a database.' flags='130'/>
<tag menu='F' submenu='Firebird/InterBase-->>i - ibase_fetch_o' inserttext='ibase_errcode()' hint='(PHP 5) int ibase_errcode(void) - Return an error code.' flags='130'/>
<tag menu='F' submenu='Firebird/InterBase-->>i - ibase_fetch_o' inserttext='ibase_errmsg()' hint='(PHP 4, PHP 5) string ibase_errmsg(void) - Return error messages.' flags='130'/>
<tag menu='F' submenu='Firebird/InterBase-->>i - ibase_fetch_o' inserttext='ibase_execute(|)' hint='(PHP 4, PHP 5) resource ibase_execute(resource $query [, mixed $bind_arg [, mixed $... ]]) - Execute a previously prepared query.' flags='130'/>
<tag menu='F' submenu='Firebird/InterBase-->>i - ibase_fetch_o' inserttext='ibase_fetch_assoc(|)' hint='(PHP 4>=4.3.0, PHP 5) array ibase_fetch_assoc(resource $result [, int $fetch_flag=0]) - Fetch a result row from a query as an associative array.' flags='130'/>
<tag menu='F' submenu='Firebird/InterBase-->>i - ibase_fetch_o' inserttext='ibase_fetch_object(|)' hint='(PHP 4, PHP 5) object ibase_fetch_object(resource $result_id [, int $fetch_flag=0]) - Get an object from a InterBase database.' flags='130'/>
<tag menu='F' submenu='Firebird/InterBase-->>ibase_fetch_r - i' inserttext='ibase_fetch_row(|)' hint='(PHP 4, PHP 5) array ibase_fetch_row(resource $result_identifier [, int $fetch_flag=0]) - Fetch a row from an InterBase database.' flags='130'/>
<tag menu='F' submenu='Firebird/InterBase-->>ibase_fetch_r - i' inserttext='ibase_field_info(|)' hint='(PHP 4, PHP 5) array ibase_field_info(resource $result, int $field_number) - Get information about a field.' flags='130'/>
<tag menu='F' submenu='Firebird/InterBase-->>ibase_fetch_r - i' inserttext='ibase_free_event_handler(|)' hint='(PHP 5) bool ibase_free_event_handler(resource $event) - Cancels a registered event handler.' flags='130'/>
<tag menu='F' submenu='Firebird/InterBase-->>ibase_fetch_r - i' inserttext='ibase_free_query(|)' hint='(PHP 4, PHP 5) bool ibase_free_query(resource $query) - Free memory allocated by a prepared query.' flags='130'/>
<tag menu='F' submenu='Firebird/InterBase-->>ibase_fetch_r - i' inserttext='ibase_free_result(|)' hint='(PHP 4, PHP 5) bool ibase_free_result(resource $result_identifier) - Free a result set.' flags='130'/>
<tag menu='F' submenu='Firebird/InterBase-->>ibase_fetch_r - i' inserttext='ibase_gen_id(|)' hint='(PHP 5) mixed ibase_gen_id(string $generator [, int $increment=1 [, resource $link_identifier=NULL ]]) - Increments the named generator and returns its new value.' flags='130'/>
<tag menu='F' submenu='Firebird/InterBase-->>ibase_fetch_r - i' inserttext='ibase_maintain_db(|)' hint='(PHP 5) bool ibase_maintain_db(resource $service_handle, string $db, int $action [, int $argument=0]) - Execute a maintenance command on the database server.' flags='130'/>
<tag menu='F' submenu='Firebird/InterBase-->>ibase_fetch_r - i' inserttext='ibase_modify_user(|)' hint='(PHP 4>=4.2.0, PHP 5) bool ibase_modify_user(resource $service_handle, string $user_name, string $password [, string $first_name [, string $middle_name [, string $last_name ]]]) - Modify a user to a security database (only for IB6 or later).' flags='130'/>
<tag menu='F' submenu='Firebird/InterBase-->>ibase_fetch_r - i' inserttext='ibase_name_result(|)' hint='(PHP 5) bool ibase_name_result(resource $result, string $name) - Assigns a name to a result set.' flags='130'/>
<tag menu='F' submenu='Firebird/InterBase-->>ibase_fetch_r - i' inserttext='ibase_num_fields(|)' hint='(PHP 4, PHP 5) int ibase_num_fields(resource $result_id) - Get the number of fields in a result set.' flags='130'/>
<tag menu='F' submenu='Firebird/InterBase-->>ibase_fetch_r - i' inserttext='ibase_num_params(|)' hint='(PHP 5) int ibase_num_params(resource $query) - Return the number of parameters in a prepared query.' flags='130'/>
<tag menu='F' submenu='Firebird/InterBase-->>ibase_fetch_r - i' inserttext='ibase_param_info(|)' hint='(PHP 5) array ibase_param_info(resource $query, int $param_number) - Return information about a parameter in a prepared query.' flags='130'/>
<tag menu='F' submenu='Firebird/InterBase-->>ibase_fetch_r - i' inserttext='ibase_pconnect(|)' hint='(PHP 4, PHP 5) resource ibase_pconnect([string $database [, string $username [, string $password [, string $charset [, int $buffers [, int $dialect [, string $role [, int $sync ]]]]]]]]) - Open a persistent connection to an InterBase database.' flags='130'/>
<tag menu='F' submenu='Firebird/InterBase-->>ibase_fetch_r - i' inserttext='ibase_prepare(|)' hint='(PHP 4, PHP 5) resource ibase_prepare(string $query) - Prepare a query for later binding of parameter placeholders and execution.' flags='130'/>
<tag menu='F' submenu='Firebird/InterBase-->>ibase_fetch_r - i' inserttext='ibase_query(|)' hint='(PHP 4, PHP 5) resource ibase_query([resource $link_identifier ], string $query [, int $bind_args]) - Execute a query on an InterBase database.' flags='130'/>
<tag menu='F' submenu='Firebird/InterBase-->>ibase_fetch_r - i' inserttext='ibase_restore(|)' hint='(PHP 5) mixed ibase_restore(resource $service_handle, string $source_file, string $dest_db [, int $options=0 [, bool $verbose=false ]]) - Initiates a restore task in the service manager and returns immediately.' flags='130'/>
<tag menu='F' submenu='Firebird/InterBase-->>ibase_fetch_r - i' inserttext='ibase_rollback(|)' hint='(PHP 4, PHP 5) bool ibase_rollback([resource $link_or_trans_identifier=NULL]) - Roll back a transaction.' flags='130'/>
<tag menu='F' submenu='Firebird/InterBase-->>ibase_fetch_r - i' inserttext='ibase_rollback_ret(|)' hint='(PHP 5) bool ibase_rollback_ret([resource $link_or_trans_identifier=NULL]) - Roll back a transaction without closing it.' flags='130'/>
<tag menu='F' submenu='Firebird/InterBase-->>ibase_fetch_r - i' inserttext='ibase_server_info(|)' hint='(PHP 5) string ibase_server_info(resource $service_handle, int $action) - Request information about a database server.' flags='130'/>
<tag menu='F' submenu='Firebird/InterBase-->>ibase_fetch_r - i' inserttext='ibase_service_attach(|)' hint='(PHP 5) resource ibase_service_attach(string $host, string $dba_username, string $dba_password) - Connect to the service manager.' flags='130'/>
<tag menu='F' submenu='Firebird/InterBase-->>ibase_fetch_r - i' inserttext='ibase_service_detach(|)' hint='(PHP 5) bool ibase_service_detach(resource $service_handle) - Disconnect from the service manager.' flags='130'/>
<tag menu='F' submenu='Firebird/InterBase-->>ibase_fetch_r - i' inserttext='ibase_set_event_handler(|)' hint='(PHP 5) resource ibase_set_event_handler(callback $event_handler, string $event_name1 [, string $event_name2 [, string $... ]]) - Register a callback function to be called when events are posted.' flags='130'/>
<tag menu='F' submenu='Firebird/InterBase-->>ibase_fetch_r - i' inserttext='ibase_timefmt(|)' hint='(PHP 4) bool ibase_timefmt(string $format [, int $columntype]) - Sets the format of timestamp, date and time type columns returned from queries.' flags='130'/>
<tag menu='F' submenu='Firebird/InterBase-->>ibase_fetch_r - i' inserttext='ibase_trans(|)' hint='(PHP 4, PHP 5) resource ibase_trans([int $trans_args [, resource $link_identifier ]]) - Begin a transaction.' flags='130'/>
<tag menu='F' submenu='Firebird/InterBase-->>ibase_fetch_r - i' inserttext='ibase_wait_event(|)' hint='(PHP 5) string ibase_wait_event(string $event_name1 [, string $event_name2 [, string $... ]]) - Wait for an event to be posted by the database.' flags='130'/>
<tag menu='F' submenu='FriBiDi' inserttext='fribidi_log2vis(|)' hint='(PHP 4>=4.0.4 and PHP 4&lt;=4.1.0, PECL fribidi>=1.0) string fribidi_log2vis(string $str, string $direction, int $charset) - Convert a logical string to a visual one.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>f - fbsql_fetch_ar' inserttext='fbsql_affected_rows(|)' hint='(PHP 4>=4.0.6, PHP 5) int fbsql_affected_rows([resource $link_identifier]) - Get number of affected rows in previous FrontBase operation.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>f - fbsql_fetch_ar' inserttext='fbsql_autocommit(|)' hint='(PHP 4>=4.0.6, PHP 5) bool fbsql_autocommit(resource $link_identifier [, bool $OnOff]) - Enable or disable autocommit.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>f - fbsql_fetch_ar' inserttext='fbsql_blob_size(|)' hint='(PHP 4>=4.2.0, PHP 5) int fbsql_blob_size(string $blob_handle [, resource $link_identifier]) - Get the size of a BLOB.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>f - fbsql_fetch_ar' inserttext='fbsql_change_user(|)' hint='(PHP 4>=4.0.6, PHP 5) bool fbsql_change_user(string $user, string $password [, string $database [, resource $link_identifier ]]) - Change logged in user of the active connection.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>f - fbsql_fetch_ar' inserttext='fbsql_clob_size(|)' hint='(PHP 4>=4.2.0, PHP 5) int fbsql_clob_size(string $clob_handle [, resource $link_identifier]) - Get the size of a CLOB.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>f - fbsql_fetch_ar' inserttext='fbsql_close(|)' hint='(PHP 4>=4.0.6, PHP 5) bool fbsql_close([resource $link_identifier]) - Close FrontBase connection.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>f - fbsql_fetch_ar' inserttext='fbsql_commit(|)' hint='(PHP 4>=4.0.6, PHP 5) bool fbsql_commit([resource $link_identifier]) - Commits a transaction to the database.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>f - fbsql_fetch_ar' inserttext='fbsql_connect(|)' hint='(PHP 4>=4.0.6, PHP 5) resource fbsql_connect([string $hostname=ini_get("fbsql.default_host") [, string $username=ini_get("fbsql.default_user") [, string $password=ini_get("fbsql.default_password") ]]]) - Open a connection to a FrontBase Server.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>f - fbsql_fetch_ar' inserttext='fbsql_create_blob(|)' hint='(PHP 4>=4.2.0, PHP 5) string fbsql_create_blob(string $blob_data [, resource $link_identifier]) - Create a BLOB.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>f - fbsql_fetch_ar' inserttext='fbsql_create_clob(|)' hint='(PHP 4>=4.2.0, PHP 5) string fbsql_create_clob(string $clob_data [, resource $link_identifier]) - Create a CLOB.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>f - fbsql_fetch_ar' inserttext='fbsql_create_db(|)' hint='(PHP 4>=4.0.6, PHP 5) bool fbsql_create_db(string $database_name [, resource $link_identifier [, string $database_options ]]) - Create a FrontBase database.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>f - fbsql_fetch_ar' inserttext='fbsql_data_seek(|)' hint='(PHP 4>=4.0.6, PHP 5) bool fbsql_data_seek(resource $result, int $row_number) - Move internal result pointer.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>f - fbsql_fetch_ar' inserttext='fbsql_database(|)' hint='(PHP 4>=4.0.6, PHP 5) string fbsql_database(resource $link_identifier [, string $database]) - Get or set the database name used with a connection.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>f - fbsql_fetch_ar' inserttext='fbsql_database_password(|)' hint='(PHP 4>=4.0.6, PHP 5) string fbsql_database_password(resource $link_identifier [, string $database_password]) - Sets or retrieves the password for a FrontBase database.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>f - fbsql_fetch_ar' inserttext='fbsql_db_query(|)' hint='(PHP 4>=4.0.6, PHP 5) resource fbsql_db_query(string $database, string $query [, resource $link_identifier]) - Send a FrontBase query.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>f - fbsql_fetch_ar' inserttext='fbsql_db_status(|)' hint='(PHP 4>=4.0.7, PHP 5) int fbsql_db_status(string $database_name [, resource $link_identifier]) - Get the status for a given database.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>f - fbsql_fetch_ar' inserttext='fbsql_drop_db(|)' hint='(PHP 4>=4.0.6, PHP 5) bool fbsql_drop_db(string $database_name [, resource $link_identifier]) - Drop (delete) a FrontBase database.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>f - fbsql_fetch_ar' inserttext='fbsql_errno(|)' hint='(PHP 4>=4.0.6, PHP 5) int fbsql_errno([resource $link_identifier]) - Returns the error number from previous operation.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>f - fbsql_fetch_ar' inserttext='fbsql_error(|)' hint='(PHP 4>=4.0.6, PHP 5) string fbsql_error([resource $link_identifier]) - Returns the error message from previous operation.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>f - fbsql_fetch_ar' inserttext='fbsql_fetch_array(|)' hint='(PHP 4>=4.0.6, PHP 5) array fbsql_fetch_array(resource $result [, int $result_type]) - Fetch a result row as an associative array, a numeric array, or both.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>fbsql_fetch_as - fbsql_num_f' inserttext='fbsql_fetch_assoc(|)' hint='(PHP 4>=4.0.6, PHP 5) array fbsql_fetch_assoc(resource $result) - Fetch a result row as an associative array.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>fbsql_fetch_as - fbsql_num_f' inserttext='fbsql_fetch_field(|)' hint='(PHP 4>=4.0.6, PHP 5) object fbsql_fetch_field(resource $result [, int $field_offset]) - Get column information from a result and return as an object.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>fbsql_fetch_as - fbsql_num_f' inserttext='fbsql_fetch_lengths(|)' hint='(PHP 4>=4.0.6, PHP 5) array fbsql_fetch_lengths(resource $result) - Get the length of each output in a result.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>fbsql_fetch_as - fbsql_num_f' inserttext='fbsql_fetch_object(|)' hint='(PHP 4>=4.0.6, PHP 5) object fbsql_fetch_object(resource $result) - Fetch a result row as an object.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>fbsql_fetch_as - fbsql_num_f' inserttext='fbsql_fetch_row(|)' hint='(PHP 4>=4.0.6, PHP 5) array fbsql_fetch_row(resource $result) - Get a result row as an enumerated array.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>fbsql_fetch_as - fbsql_num_f' inserttext='fbsql_field_flags(|)' hint='(PHP 4>=4.0.6, PHP 5) string fbsql_field_flags(resource $result [, int $field_offset]) - Get the flags associated with the specified field in a result.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>fbsql_fetch_as - fbsql_num_f' inserttext='fbsql_field_len(|)' hint='(PHP 4>=4.0.6, PHP 5) int fbsql_field_len(resource $result [, int $field_offset]) - Returns the length of the specified field.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>fbsql_fetch_as - fbsql_num_f' inserttext='fbsql_field_name(|)' hint='(PHP 4>=4.0.6, PHP 5) string fbsql_field_name(resource $result [, int $field_index]) - Get the name of the specified field in a result.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>fbsql_fetch_as - fbsql_num_f' inserttext='fbsql_field_seek(|)' hint='(PHP 4>=4.0.6, PHP 5) bool fbsql_field_seek(resource $result [, int $field_offset]) - Set result pointer to a specified field offset.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>fbsql_fetch_as - fbsql_num_f' inserttext='fbsql_field_table(|)' hint='(PHP 4>=4.0.6, PHP 5) string fbsql_field_table(resource $result [, int $field_offset]) - Get name of the table the specified field is in.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>fbsql_fetch_as - fbsql_num_f' inserttext='fbsql_field_type(|)' hint='(PHP 4>=4.0.6, PHP 5) string fbsql_field_type(resource $result [, int $field_offset]) - Get the type of the specified field in a result.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>fbsql_fetch_as - fbsql_num_f' inserttext='fbsql_free_result(|)' hint='(PHP 4>=4.0.6, PHP 5) bool fbsql_free_result(resource $result) - Free result memory.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>fbsql_fetch_as - fbsql_num_f' inserttext='fbsql_get_autostart_info(|)' hint='(PHP 4>=4.0.7, PHP 5) .' flags='130'/>
<tag menu='F' submenu='FrontBase-->>fbsql_fetch_as - fbsql_num_f' inserttext='fbsql_hostname(|)' hint='(PHP 4>=4.0.6, PHP 5) string fbsql_hostname(resource $link_identifier [, string $host_name]) - Get or set the host name used with a connection.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>fbsql_fetch_as - fbsql_num_f' inserttext='fbsql_insert_id(|)' hint='(PHP 4>=4.0.6, PHP 5) int fbsql_insert_id([resource $link_identifier]) - Get the id generated from the previous INSERT operation.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>fbsql_fetch_as - fbsql_num_f' inserttext='fbsql_list_dbs(|)' hint='(PHP 4>=4.0.6, PHP 5) resource fbsql_list_dbs([resource $link_identifier]) - List databases available on a FrontBase server.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>fbsql_fetch_as - fbsql_num_f' inserttext='fbsql_list_fields(|)' hint='(PHP 4>=4.0.6, PHP 5) resource fbsql_list_fields(string $database_name, string $table_name [, resource $link_identifier]) - List FrontBase result fields.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>fbsql_fetch_as - fbsql_num_f' inserttext='fbsql_list_tables(|)' hint='(PHP 4>=4.0.6, PHP 5) resource fbsql_list_tables(string $database [, resource $link_identifier]) - List tables in a FrontBase database.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>fbsql_fetch_as - fbsql_num_f' inserttext='fbsql_next_result(|)' hint='(PHP 4>=4.0.6, PHP 5) bool fbsql_next_result(resource $result) - Move the internal result pointer to the next result.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>fbsql_fetch_as - fbsql_num_f' inserttext='fbsql_num_fields(|)' hint='(PHP 4>=4.0.6, PHP 5) int fbsql_num_fields(resource $result) - Get number of fields in result.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>fbsql_num_r - f' inserttext='fbsql_num_rows(|)' hint='(PHP 4>=4.0.6, PHP 5) int fbsql_num_rows(resource $result) - Get number of rows in result.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>fbsql_num_r - f' inserttext='fbsql_password(|)' hint='(PHP 4>=4.0.6, PHP 5) string fbsql_password(resource $link_identifier [, string $password]) - Get or set the user password used with a connection.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>fbsql_num_r - f' inserttext='fbsql_pconnect(|)' hint='(PHP 4>=4.0.6, PHP 5) resource fbsql_pconnect([string $hostname=ini_get("fbsql.default_host") [, string $username=ini_get("fbsql.default_user") [, string $password=ini_get("fbsql.default_password") ]]]) - Open a persistent connection to a FrontBase Server.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>fbsql_num_r - f' inserttext='fbsql_query(|)' hint='(PHP 4>=4.0.6, PHP 5) resource fbsql_query(string $query [, resource $link_identifier [, int $batch_size ]]) - Send a FrontBase query.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>fbsql_num_r - f' inserttext='fbsql_read_blob(|)' hint='(PHP 4>=4.2.0, PHP 5) string fbsql_read_blob(string $blob_handle [, resource $link_identifier]) - Read a BLOB from the database.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>fbsql_num_r - f' inserttext='fbsql_read_clob(|)' hint='(PHP 4>=4.2.0, PHP 5) string fbsql_read_clob(string $clob_handle [, resource $link_identifier]) - Read a CLOB from the database.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>fbsql_num_r - f' inserttext='fbsql_result(|)' hint='(PHP 4>=4.0.6, PHP 5) mixed fbsql_result(resource $result [, int $row [, mixed $field ]]) - Get result data.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>fbsql_num_r - f' inserttext='fbsql_rollback(|)' hint='(PHP 4>=4.0.6, PHP 5) bool fbsql_rollback([resource $link_identifier]) - Rollback a transaction to the database.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>fbsql_num_r - f' inserttext='fbsql_rows_fetched(|)' hint='(PHP 5>=5.1.0) int fbsql_rows_fetched(resource $result) - Get the number of rows affected by the last statement.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>fbsql_num_r - f' inserttext='fbsql_select_db(|)' hint='(PHP 4>=4.0.6, PHP 5) bool fbsql_select_db([string $database_name [, resource $link_identifier ]]) - Select a FrontBase database.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>fbsql_num_r - f' inserttext='fbsql_set_characterset(|)' hint='(PHP 5>=5.1.0) void fbsql_set_characterset(resource $link_identifier, int $characterset [, int $in_out_both]) - Change input/output character set.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>fbsql_num_r - f' inserttext='fbsql_set_lob_mode(|)' hint='(PHP 4>=4.2.0, PHP 5) bool fbsql_set_lob_mode(resource $result, int $lob_mode) - Set the LOB retrieve mode for a FrontBase result set.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>fbsql_num_r - f' inserttext='fbsql_set_password(|)' hint='(PHP 5) bool fbsql_set_password(resource $link_identifier, string $user, string $password, string $old_password) - Change the password for a given user.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>fbsql_num_r - f' inserttext='fbsql_set_transaction(|)' hint='(PHP 4>=4.2.0, PHP 5) void fbsql_set_transaction(resource $link_identifier, int $locking, int $isolation) - Set the transaction locking and isolation.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>fbsql_num_r - f' inserttext='fbsql_start_db(|)' hint='(PHP 4>=4.0.6, PHP 5) bool fbsql_start_db(string $database_name [, resource $link_identifier [, string $database_options ]]) - Start a database on local or remote server.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>fbsql_num_r - f' inserttext='fbsql_stop_db(|)' hint='(PHP 4>=4.0.6, PHP 5) bool fbsql_stop_db(string $database_name [, resource $link_identifier]) - Stop a database on local or remote server.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>fbsql_num_r - f' inserttext='fbsql_table_name(|)' hint='(PHP 4>=4.2.0, PHP 5) string fbsql_table_name(resource $result, int $index) - Get table name of field.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>fbsql_num_r - f' inserttext='fbsql_tablename(|)' hint='(PHP 4>=4.2.0, PHP 5) Alias of fbsql_table_name().' flags='130'/>
<tag menu='F' submenu='FrontBase-->>fbsql_num_r - f' inserttext='fbsql_username(|)' hint='(PHP 4>=4.0.6, PHP 5) string fbsql_username(resource $link_identifier [, string $username]) - Get or set the username for the connection.' flags='130'/>
<tag menu='F' submenu='FrontBase-->>fbsql_num_r - f' inserttext='fbsql_warnings(|)' hint='(PHP 4>=4.0.6, PHP 5) bool fbsql_warnings([bool $OnOff]) - Enable or disable FrontBase warnings.' flags='130'/>
<tag menu='F' submenu='Function handling' inserttext='call_user_func(|)' hint='(PHP 4, PHP 5) mixed call_user_func(callback $function [, mixed $parameter [, mixed $... ]]) - Call a user function given by the first parameter.' flags='130'/>
<tag menu='F' submenu='Function handling' inserttext='call_user_func_array(|)' hint='(PHP 4>=4.0.4, PHP 5) mixed call_user_func_array(callback $function, array $param_arr) - Call a user function given with an array of parameters.' flags='130'/>
<tag menu='F' submenu='Function handling' inserttext='create_function(|)' hint='(PHP 4>=4.0.1, PHP 5) string create_function(string $args, string $code) - Create an anonymous (lambda-style) function.' flags='130'/>
<tag menu='F' submenu='Function handling' inserttext='forward_static_call(|)' hint='(PHP 5>=5.3.0) mixed forward_static_call(callback $function [, mixed $parameter [, mixed $... ]]) - Call a static method.' flags='130'/>
<tag menu='F' submenu='Function handling' inserttext='forward_static_call_array(|)' hint='(PHP 5>=5.3.0) mixed forward_static_call_array(callback $function [, array $parameters]) - Call a static method and pass the arguments as array.' flags='130'/>
<tag menu='F' submenu='Function handling' inserttext='func_get_arg(|)' hint='(PHP 4, PHP 5) mixed func_get_arg(int $arg_num) - Return an item from the argument list.' flags='130'/>
<tag menu='F' submenu='Function handling' inserttext='func_get_args()' hint="(PHP 4, PHP 5) array func_get_args(void) - Returns an array comprising a function's argument list." flags='130'/>
<tag menu='F' submenu='Function handling' inserttext='func_num_args()' hint='(PHP 4, PHP 5) int func_num_args(void) - Returns the number of arguments passed to the function.' flags='130'/>
<tag menu='F' submenu='Function handling' inserttext='function_exists(|)' hint='(PHP 4, PHP 5) bool function_exists(string $function_name) - Return TRUE if the given function has been defined.' flags='130'/>
<tag menu='F' submenu='Function handling' inserttext='get_defined_functions()' hint='(PHP 4>=4.0.4, PHP 5) array get_defined_functions(void) - Returns an array of all defined functions.' flags='130'/>
<tag menu='F' submenu='Function handling' inserttext='register_shutdown_function(|)' hint='(PHP 4, PHP 5) void register_shutdown_function(callback $function [, mixed $parameter [, mixed $... ]]) - Register a function for execution on shutdown.' flags='130'/>
<tag menu='F' submenu='Function handling' inserttext='register_tick_function(|)' hint='(PHP 4>=4.0.3, PHP 5) bool register_tick_function(callback $function [, mixed $arg [, mixed $... ]]) - Register a function for execution on each tick.' flags='130'/>
<tag menu='F' submenu='Function handling' inserttext='unregister_tick_function(|)' hint='(PHP 4>=4.0.3, PHP 5) void unregister_tick_function(string $function_name) - De-register a function for execution on each tick.' flags='130'/>
<tag menu='F' submenu='filePro' inserttext='filepro(|)' hint='(PHP 4, PHP 5&lt;=5.1.6) bool filepro(string $directory) - Read and verify the map file.' flags='130'/>
<tag menu='F' submenu='filePro' inserttext='filepro_fieldcount()' hint='(PHP 4, PHP 5&lt;=5.1.6) int filepro_fieldcount(void) - Find out how many fields are in a filePro database.' flags='130'/>
<tag menu='F' submenu='filePro' inserttext='filepro_fieldname(|)' hint='(PHP 4, PHP 5&lt;=5.1.6) string filepro_fieldname(int $field_number) - Gets the name of a field.' flags='130'/>
<tag menu='F' submenu='filePro' inserttext='filepro_fieldtype(|)' hint='(PHP 4, PHP 5&lt;=5.1.6) string filepro_fieldtype(int $field_number) - Gets the type of a field.' flags='130'/>
<tag menu='F' submenu='filePro' inserttext='filepro_fieldwidth(|)' hint='(PHP 4, PHP 5&lt;=5.1.6) int filepro_fieldwidth(int $field_number) - Gets the width of a field.' flags='130'/>
<tag menu='F' submenu='filePro' inserttext='filepro_retrieve(|)' hint='(PHP 4, PHP 5&lt;=5.1.6) string filepro_retrieve(int $row_number, int $field_number) - Retrieves data from a filePro database.' flags='130'/>
<tag menu='F' submenu='filePro' inserttext='filepro_rowcount()' hint='(PHP 4, PHP 5&lt;=5.1.6) int filepro_rowcount(void) - Find out how many rows are in a filePro database.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>g - imagecolorm' inserttext='gd_info()' hint='(PHP 4>=4.3.0, PHP 5) array gd_info(void) - Retrieve information about the currently installed GD library.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>g - imagecolorm' inserttext='getimagesize(|)' hint='(PHP 4, PHP 5) array getimagesize(string $filename [, array &amp;$imageinfo]) - Get the size of an image.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>g - imagecolorm' inserttext='image2wbmp(|)' hint='(PHP 4>=4.0.5, PHP 5) bool image2wbmp(resource $image [, string $filename [, int $threshold ]]) - Output image to browser or file.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>g - imagecolorm' inserttext='image_type_to_extension(|)' hint='(PHP 5) string image_type_to_extension(int $imagetype [, bool $include_dot]) - Get file extension for image type.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>g - imagecolorm' inserttext='image_type_to_mime_type(|)' hint='(PHP 4>=4.3.0, PHP 5) string image_type_to_mime_type(int $imagetype) - Get Mime-Type for image-type returned by getimagesize, exif_read_data, exif_thumbnail, exif_imagetype.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>g - imagecolorm' inserttext='imagealphablending(|)' hint='(PHP 4>=4.0.6, PHP 5) bool imagealphablending(resource $image, bool $blendmode) - Set the blending mode for an image.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>g - imagecolorm' inserttext='imageantialias(|)' hint='(PHP 4>=4.3.2, PHP 5) bool imageantialias(resource $image, bool $enabled) - Should antialias functions be used or not.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>g - imagecolorm' inserttext='imagearc(|)' hint='(PHP 4, PHP 5) bool imagearc(resource $image, int $cx, int $cy, int $width, int $height, int $start, int $end, int $color) - Draws an arc.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>g - imagecolorm' inserttext='imagechar(|)' hint='(PHP 4, PHP 5) bool imagechar(resource $image, int $font, int $x, int $y, string $c, int $color) - Draw a character horizontally.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>g - imagecolorm' inserttext='imagecharup(|)' hint='(PHP 4, PHP 5) bool imagecharup(resource $image, int $font, int $x, int $y, string $c, int $color) - Draw a character vertically.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>g - imagecolorm' inserttext='imagecolorallocate(|)' hint='(PHP 4, PHP 5) int imagecolorallocate(resource $image, int $red, int $green, int $blue) - Allocate a color for an image.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>g - imagecolorm' inserttext='imagecolorallocatealpha(|)' hint='(PHP 4>=4.3.2, PHP 5) int imagecolorallocatealpha(resource $image, int $red, int $green, int $blue, int $alpha) - Allocate a color for an image.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>g - imagecolorm' inserttext='imagecolorat(|)' hint='(PHP 4, PHP 5) int imagecolorat(resource $image, int $x, int $y) - Get the index of the color of a pixel.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>g - imagecolorm' inserttext='imagecolorclosest(|)' hint='(PHP 4, PHP 5) int imagecolorclosest(resource $image, int $red, int $green, int $blue) - Get the index of the closest color to the specified color.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>g - imagecolorm' inserttext='imagecolorclosestalpha(|)' hint='(PHP 4>=4.0.6, PHP 5) int imagecolorclosestalpha(resource $image, int $red, int $green, int $blue, int $alpha) - Get the index of the closest color to the specified color + alpha.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>g - imagecolorm' inserttext='imagecolorclosesthwb(|)' hint='(PHP 4>=4.0.1, PHP 5) int imagecolorclosesthwb(resource $image, int $red, int $green, int $blue) - Get the index of the color which has the hue, white and blackness.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>g - imagecolorm' inserttext='imagecolordeallocate(|)' hint='(PHP 4, PHP 5) bool imagecolordeallocate(resource $image, int $color) - De-allocate a color for an image.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>g - imagecolorm' inserttext='imagecolorexact(|)' hint='(PHP 4, PHP 5) int imagecolorexact(resource $image, int $red, int $green, int $blue) - Get the index of the specified color.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>g - imagecolorm' inserttext='imagecolorexactalpha(|)' hint='(PHP 4>=4.0.6, PHP 5) int imagecolorexactalpha(resource $image, int $red, int $green, int $blue, int $alpha) - Get the index of the specified color + alpha.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>g - imagecolorm' inserttext='imagecolormatch(|)' hint='(PHP 4>=4.3.0, PHP 5) bool imagecolormatch(resource $image1, resource $image2) - Makes the colors of the palette version of an image more closely match the true color version.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagecolorr - imagecreatefroms' inserttext='imagecolorresolve(|)' hint='(PHP 4, PHP 5) int imagecolorresolve(resource $image, int $red, int $green, int $blue) - Get the index of the specified color or its closest possible alternative.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagecolorr - imagecreatefroms' inserttext='imagecolorresolvealpha(|)' hint='(PHP 4>=4.0.6, PHP 5) int imagecolorresolvealpha(resource $image, int $red, int $green, int $blue, int $alpha) - Get the index of the specified color + alpha or its closest possible alternative.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagecolorr - imagecreatefroms' inserttext='imagecolorset(|)' hint='(PHP 4, PHP 5) void imagecolorset(resource $image, int $index, int $red, int $green, int $blue [, int $alpha=0]) - Set the color for the specified palette index.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagecolorr - imagecreatefroms' inserttext='imagecolorsforindex(|)' hint='(PHP 4, PHP 5) array imagecolorsforindex(resource $image, int $index) - Get the colors for an index.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagecolorr - imagecreatefroms' inserttext='imagecolorstotal(|)' hint="(PHP 4, PHP 5) int imagecolorstotal(resource $image) - Find out the number of colors in an image's palette." flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagecolorr - imagecreatefroms' inserttext='imagecolortransparent(|)' hint='(PHP 4, PHP 5) int imagecolortransparent(resource $image [, int $color]) - Define a color as transparent.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagecolorr - imagecreatefroms' inserttext='imageconvolution(|)' hint='(PHP 5>=5.1.0) bool imageconvolution(resource $image, array $matrix, float $div, float $offset) - Apply a 3x3 convolution matrix, using coefficient and offset.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagecolorr - imagecreatefroms' inserttext='imagecopy(|)' hint='(PHP 4, PHP 5) bool imagecopy(resource $dst_im, resource $src_im, int $dst_x, int $dst_y, int $src_x, int $src_y, int $src_w, int $src_h) - Copy part of an image.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagecolorr - imagecreatefroms' inserttext='imagecopymerge(|)' hint='(PHP 4>=4.0.1, PHP 5) bool imagecopymerge(resource $dst_im, resource $src_im, int $dst_x, int $dst_y, int $src_x, int $src_y, int $src_w, int $src_h, int $pct) - Copy and merge part of an image.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagecolorr - imagecreatefroms' inserttext='imagecopymergegray(|)' hint='(PHP 4>=4.0.6, PHP 5) bool imagecopymergegray(resource $dst_im, resource $src_im, int $dst_x, int $dst_y, int $src_x, int $src_y, int $src_w, int $src_h, int $pct) - Copy and merge part of an image with gray scale.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagecolorr - imagecreatefroms' inserttext='imagecopyresampled(|)' hint='(PHP 4>=4.0.6, PHP 5) bool imagecopyresampled(resource $dst_image, resource $src_image, int $dst_x, int $dst_y, int $src_x, int $src_y, int $dst_w, int $dst_h, int $src_w, int $src_h) - Copy and resize part of an image with resampling.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagecolorr - imagecreatefroms' inserttext='imagecopyresized(|)' hint='(PHP 4, PHP 5) bool imagecopyresized(resource $dst_image, resource $src_image, int $dst_x, int $dst_y, int $src_x, int $src_y, int $dst_w, int $dst_h, int $src_w, int $src_h) - Copy and resize part of an image.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagecolorr - imagecreatefroms' inserttext='imagecreate(|)' hint='(PHP 4, PHP 5) resource imagecreate(int $width, int $height) - Create a new palette based image.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagecolorr - imagecreatefroms' inserttext='imagecreatefromgd(|)' hint='(PHP 4>=4.0.7, PHP 5) resource imagecreatefromgd(string $filename) - Create a new image from GD file or URL.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagecolorr - imagecreatefroms' inserttext='imagecreatefromgd2(|)' hint='(PHP 4>=4.0.7, PHP 5) resource imagecreatefromgd2(string $filename) - Create a new image from GD2 file or URL.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagecolorr - imagecreatefroms' inserttext='imagecreatefromgd2part(|)' hint='(PHP 4>=4.0.7, PHP 5) resource imagecreatefromgd2part(string $filename, int $srcX, int $srcY, int $width, int $height) - Create a new image from a given part of GD2 file or URL.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagecolorr - imagecreatefroms' inserttext='imagecreatefromgif(|)' hint='(PHP 4, PHP 5) resource imagecreatefromgif(string $filename) - Create a new image from file or URL.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagecolorr - imagecreatefroms' inserttext='imagecreatefromjpeg(|)' hint='(PHP 4, PHP 5) resource imagecreatefromjpeg(string $filename) - Create a new image from file or URL.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagecolorr - imagecreatefroms' inserttext='imagecreatefrompng(|)' hint='(PHP 4, PHP 5) resource imagecreatefrompng(string $filename) - Create a new image from file or URL.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagecolorr - imagecreatefroms' inserttext='imagecreatefromstring(|)' hint='(PHP 4>=4.0.4, PHP 5) resource imagecreatefromstring(string $data) - Create a new image from the image stream in the string.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagecreatefromw - imagegd' inserttext='imagecreatefromwbmp(|)' hint='(PHP 4>=4.0.1, PHP 5) resource imagecreatefromwbmp(string $filename) - Create a new image from file or URL.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagecreatefromw - imagegd' inserttext='imagecreatefromxbm(|)' hint='(PHP 4>=4.0.1, PHP 5) resource imagecreatefromxbm(string $filename) - Create a new image from file or URL.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagecreatefromw - imagegd' inserttext='imagecreatefromxpm(|)' hint='(PHP 4>=4.0.1, PHP 5) resource imagecreatefromxpm(string $filename) - Create a new image from file or URL.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagecreatefromw - imagegd' inserttext='imagecreatetruecolor(|)' hint='(PHP 4>=4.0.6, PHP 5) resource imagecreatetruecolor(int $width, int $height) - Create a new true color image.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagecreatefromw - imagegd' inserttext='imagedashedline(|)' hint='(PHP 4, PHP 5) bool imagedashedline(resource $image, int $x1, int $y1, int $x2, int $y2, int $color) - Draw a dashed line.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagecreatefromw - imagegd' inserttext='imagedestroy(|)' hint='(PHP 4, PHP 5) bool imagedestroy(resource $image) - Destroy an image.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagecreatefromw - imagegd' inserttext='imageellipse(|)' hint='(PHP 4>=4.0.6, PHP 5) bool imageellipse(resource $image, int $cx, int $cy, int $width, int $height, int $color) - Draw an ellipse.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagecreatefromw - imagegd' inserttext='imagefill(|)' hint='(PHP 4, PHP 5) bool imagefill(resource $image, int $x, int $y, int $color) - Flood fill.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagecreatefromw - imagegd' inserttext='imagefilledarc(|)' hint='(PHP 4>=4.0.6, PHP 5) bool imagefilledarc(resource $image, int $cx, int $cy, int $width, int $height, int $start, int $end, int $color, int $style) - Draw a partial arc and fill it.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagecreatefromw - imagegd' inserttext='imagefilledellipse(|)' hint='(PHP 4>=4.0.6, PHP 5) bool imagefilledellipse(resource $image, int $cx, int $cy, int $width, int $height, int $color) - Draw a filled ellipse.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagecreatefromw - imagegd' inserttext='imagefilledpolygon(|)' hint='(PHP 4, PHP 5) bool imagefilledpolygon(resource $image, array $points, int $num_points, int $color) - Draw a filled polygon.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagecreatefromw - imagegd' inserttext='imagefilledrectangle(|)' hint='(PHP 4, PHP 5) bool imagefilledrectangle(resource $image, int $x1, int $y1, int $x2, int $y2, int $color) - Draw a filled rectangle.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagecreatefromw - imagegd' inserttext='imagefilltoborder(|)' hint='(PHP 4, PHP 5) bool imagefilltoborder(resource $image, int $x, int $y, int $border, int $color) - Flood fill to specific color.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagecreatefromw - imagegd' inserttext='imagefilter(|)' hint='(PHP 5) bool imagefilter(resource $image, int $filtertype [, int $arg1 [, int $arg2 [, int $arg3 [, int $arg4 ]]]]) - Applies a filter to an image.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagecreatefromw - imagegd' inserttext='imagefontheight(|)' hint='(PHP 4, PHP 5) int imagefontheight(int $font) - Get font height.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagecreatefromw - imagegd' inserttext='imagefontwidth(|)' hint='(PHP 4, PHP 5) int imagefontwidth(int $font) - Get font width.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagecreatefromw - imagegd' inserttext='imageftbbox(|)' hint='(PHP 4>=4.0.7, PHP 5) array imageftbbox(float $size, float $angle, string $fontfile, string $text [, array $extrainfo]) - Give the bounding box of a text using fonts via freetype2.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagecreatefromw - imagegd' inserttext='imagefttext(|)' hint='(PHP 4>=4.0.7, PHP 5) array imagefttext(resource $image, float $size, float $angle, int $x, int $y, int $color, string $fontfile, string $text [, array $extrainfo]) - Write text to the image using fonts using FreeType 2.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagecreatefromw - imagegd' inserttext='imagegammacorrect(|)' hint='(PHP 4, PHP 5) bool imagegammacorrect(resource $image, float $inputgamma, float $outputgamma) - Apply a gamma correction to a GD image.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagecreatefromw - imagegd' inserttext='imagegd(|)' hint='(PHP 4>=4.0.7, PHP 5) bool imagegd(resource $image [, string $filename]) - Output GD image to browser or file.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagegd2 - imagep' inserttext='imagegd2(|)' hint='(PHP 4>=4.0.7, PHP 5) bool imagegd2(resource $image [, string $filename [, int $chunk_size [, int $type ]]]) - Output GD2 image to browser or file.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagegd2 - imagep' inserttext='imagegif(|)' hint='(PHP 4, PHP 5) bool imagegif(resource $image [, string $filename]) - Output image to browser or file.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagegd2 - imagep' inserttext='imagegrabscreen()' hint='(PHP 5>=5.2.2) resource imagegrabscreen(void) - Captures the whole screen.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagegd2 - imagep' inserttext='imagegrabwindow(|)' hint='(PHP 5>=5.2.2) resource imagegrabwindow(int $window_handle [, int $client_area=0]) - Captures a window.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagegd2 - imagep' inserttext='imageinterlace(|)' hint='(PHP 4, PHP 5) int imageinterlace(resource $image [, int $interlace=0]) - Enable or disable interlace.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagegd2 - imagep' inserttext='imageistruecolor(|)' hint='(PHP 4>=4.3.2, PHP 5) bool imageistruecolor(resource $image) - Finds whether an image is a truecolor image.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagegd2 - imagep' inserttext='imagejpeg(|)' hint='(PHP 4, PHP 5) bool imagejpeg(resource $image [, string $filename [, int $quality ]]) - Output image to browser or file.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagegd2 - imagep' inserttext='imagelayereffect(|)' hint='(PHP 4>=4.3.0, PHP 5) bool imagelayereffect(resource $image, int $effect) - Set the alpha blending flag to use the bundled libgd layering effects.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagegd2 - imagep' inserttext='imageline(|)' hint='(PHP 4, PHP 5) bool imageline(resource $image, int $x1, int $y1, int $x2, int $y2, int $color) - Draw a line.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagegd2 - imagep' inserttext='imageloadfont(|)' hint='(PHP 4, PHP 5) int imageloadfont(string $file) - Load a new font.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagegd2 - imagep' inserttext='imagepalettecopy(|)' hint='(PHP 4>=4.0.1, PHP 5) void imagepalettecopy(resource $destination, resource $source) - Copy the palette from one image to another.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagegd2 - imagep' inserttext='imagepng(|)' hint='(PHP 4, PHP 5) bool imagepng(resource $image [, string $filename [, int $quality [, int $filters ]]]) - Output a PNG image to either the browser or a file.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagegd2 - imagep' inserttext='imagepolygon(|)' hint='(PHP 4, PHP 5) bool imagepolygon(resource $image, array $points, int $num_points, int $color) - Draws a polygon.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagegd2 - imagep' inserttext='imagepsbbox(|)' hint='(PHP 4, PHP 5) array imagepsbbox(string $text, resource $font, int $size) - Give the bounding box of a text rectangle using PostScript Type1 fonts.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagegd2 - imagep' inserttext='imagepsencodefont(|)' hint='(PHP 4, PHP 5) bool imagepsencodefont(resource $font_index, string $encodingfile) - Change the character encoding vector of a font.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagegd2 - imagep' inserttext='imagepsextendfont(|)' hint='(PHP 4, PHP 5) bool imagepsextendfont(resource $font_index, float $extend) - Extend or condense a font.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagegd2 - imagep' inserttext='imagepsfreefont(|)' hint='(PHP 4, PHP 5) bool imagepsfreefont(resource $font_index) - Free memory used by a PostScript Type 1 font.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagegd2 - imagep' inserttext='imagepsloadfont(|)' hint='(PHP 4, PHP 5) resource imagepsloadfont(string $filename) - Load a PostScript Type 1 font from file.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagegd2 - imagep' inserttext='imagepsslantfont(|)' hint='(PHP 4, PHP 5) bool imagepsslantfont(resource $font_index, float $slant) - Slant a font.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imagegd2 - imagep' inserttext='imagepstext(|)' hint='(PHP 4, PHP 5) array imagepstext(resource $image, string $text, resource $font_index, int $size, int $foreground, int $background, int $x, int $y [, int $space=0 [, int $tightness=0 [, float $angle=0.0 [, int $antialias_steps=4 ]]]]) - Draws a text over an image using PostScript Type1 fonts.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imager - p' inserttext='imagerectangle(|)' hint='(PHP 4, PHP 5) bool imagerectangle(resource $image, int $x1, int $y1, int $x2, int $y2, int $color) - Draw a rectangle.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imager - p' inserttext='imagerotate(|)' hint='(PHP 4>=4.3.0, PHP 5) resource imagerotate(resource $image, float $angle, int $bgd_color [, int $ignore_transparent=0]) - Rotate an image with a given angle.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imager - p' inserttext='imagesavealpha(|)' hint='(PHP 4>=4.3.2, PHP 5) bool imagesavealpha(resource $image, bool $saveflag) - Set the flag to save full alpha channel information (as opposed to single-color transparency) when saving PNG images.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imager - p' inserttext='imagesetbrush(|)' hint='(PHP 4>=4.0.6, PHP 5) bool imagesetbrush(resource $image, resource $brush) - Set the brush image for line drawing.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imager - p' inserttext='imagesetpixel(|)' hint='(PHP 4, PHP 5) bool imagesetpixel(resource $image, int $x, int $y, int $color) - Set a single pixel.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imager - p' inserttext='imagesetstyle(|)' hint='(PHP 4>=4.0.6, PHP 5) bool imagesetstyle(resource $image, array $style) - Set the style for line drawing.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imager - p' inserttext='imagesetthickness(|)' hint='(PHP 4>=4.0.6, PHP 5) bool imagesetthickness(resource $image, int $thickness) - Set the thickness for line drawing.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imager - p' inserttext='imagesettile(|)' hint='(PHP 4>=4.0.6, PHP 5) bool imagesettile(resource $image, resource $tile) - Set the tile image for filling.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imager - p' inserttext='imagestring(|)' hint='(PHP 4, PHP 5) bool imagestring(resource $image, int $font, int $x, int $y, string $string, int $color) - Draw a string horizontally.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imager - p' inserttext='imagestringup(|)' hint='(PHP 4, PHP 5) bool imagestringup(resource $image, int $font, int $x, int $y, string $string, int $color) - Draw a string vertically.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imager - p' inserttext='imagesx(|)' hint='(PHP 4, PHP 5) int imagesx(resource $image) - Get image width.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imager - p' inserttext='imagesy(|)' hint='(PHP 4, PHP 5) int imagesy(resource $image) - Get image height.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imager - p' inserttext='imagetruecolortopalette(|)' hint='(PHP 4>=4.0.6, PHP 5) bool imagetruecolortopalette(resource $image, bool $dither, int $ncolors) - Convert a true color image to a palette image.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imager - p' inserttext='imagettfbbox(|)' hint='(PHP 4, PHP 5) array imagettfbbox(float $size, float $angle, string $fontfile, string $text) - Give the bounding box of a text using TrueType fonts.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imager - p' inserttext='imagettftext(|)' hint='(PHP 4, PHP 5) array imagettftext(resource $image, float $size, float $angle, int $x, int $y, int $color, string $fontfile, string $text) - Write text to the image using TrueType fonts.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imager - p' inserttext='imagetypes()' hint='(PHP 4>=4.0.2, PHP 5) int imagetypes(void) - Return the image types supported by this PHP build.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imager - p' inserttext='imagewbmp(|)' hint='(PHP 4>=4.0.1, PHP 5) bool imagewbmp(resource $image [, string $filename [, int $foreground ]]) - Output image to browser or file.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imager - p' inserttext='imagexbm(|)' hint='(PHP 5) bool imagexbm(resource $image, string $filename [, int $foreground]) - Output XBM image to browser or file.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imager - p' inserttext='iptcembed(|)' hint='(PHP 4, PHP 5) mixed iptcembed(string $iptcdata, string $jpeg_file_name [, int $spool]) - Embeds binary IPTC data into a JPEG image.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imager - p' inserttext='iptcparse(|)' hint='(PHP 4, PHP 5) array iptcparse(string $iptcblock) - Parse a binary IPTC block into single tags.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imager - p' inserttext='jpeg2wbmp(|)' hint='(PHP 4>=4.0.5, PHP 5) bool jpeg2wbmp(string $jpegname, string $wbmpname, int $dest_height, int $dest_width, int $threshold) - Convert JPEG image file to WBMP image file.' flags='130'/>
<tag menu='G' submenu='GD and Image-->>imager - p' inserttext='png2wbmp(|)' hint='(PHP 4>=4.0.5, PHP 5) bool png2wbmp(string $pngname, string $wbmpname, int $dest_height, int $dest_width, int $threshold) - Convert PNG image file to WBMP image file.' flags='130'/>
<tag menu='G' submenu='GMP-->>g - gmp_l' inserttext='gmp_abs(|)' hint='(PHP 4>=4.0.4, PHP 5) resource gmp_abs(resource $a) - Absolute value.' flags='130'/>
<tag menu='G' submenu='GMP-->>g - gmp_l' inserttext='gmp_add(|)' hint='(PHP 4>=4.0.4, PHP 5) resource gmp_add(resource $a, resource $b) - Add numbers.' flags='130'/>
<tag menu='G' submenu='GMP-->>g - gmp_l' inserttext='gmp_and(|)' hint='(PHP 4>=4.0.4, PHP 5) resource gmp_and(resource $a, resource $b) - Bitwise AND.' flags='130'/>
<tag menu='G' submenu='GMP-->>g - gmp_l' inserttext='gmp_clrbit(|)' hint='(PHP 4>=4.0.4, PHP 5) void gmp_clrbit(resource $a, int $index) - Clear bit.' flags='130'/>
<tag menu='G' submenu='GMP-->>g - gmp_l' inserttext='gmp_cmp(|)' hint='(PHP 4>=4.0.4, PHP 5) int gmp_cmp(resource $a, resource $b) - Compare numbers.' flags='130'/>
<tag menu='G' submenu='GMP-->>g - gmp_l' inserttext='gmp_com(|)' hint="(PHP 4>=4.0.4, PHP 5) resource gmp_com(resource $a) - Calculates one's complement." flags='130'/>
<tag menu='G' submenu='GMP-->>g - gmp_l' inserttext='gmp_div(|)' hint='(PHP 4>=4.0.4, PHP 5) Alias of gmp_div_q().' flags='130'/>
<tag menu='G' submenu='GMP-->>g - gmp_l' inserttext='gmp_div_q(|)' hint='(PHP 4>=4.0.4, PHP 5) resource gmp_div_q(resource $a, resource $b [, int $round=GMP_ROUND_ZERO]) - Divide numbers.' flags='130'/>
<tag menu='G' submenu='GMP-->>g - gmp_l' inserttext='gmp_div_qr(|)' hint='(PHP 4>=4.0.4, PHP 5) array gmp_div_qr(resource $n, resource $d [, int $round=GMP_ROUND_ZERO]) - Divide numbers and get quotient and remainder.' flags='130'/>
<tag menu='G' submenu='GMP-->>g - gmp_l' inserttext='gmp_div_r(|)' hint='(PHP 4>=4.0.4, PHP 5) resource gmp_div_r(resource $n, resource $d [, int $round=GMP_ROUND_ZERO]) - Remainder of the division of numbers.' flags='130'/>
<tag menu='G' submenu='GMP-->>g - gmp_l' inserttext='gmp_divexact(|)' hint='(PHP 4>=4.0.4, PHP 5) resource gmp_divexact(resource $n, resource $d) - Exact division of numbers.' flags='130'/>
<tag menu='G' submenu='GMP-->>g - gmp_l' inserttext='gmp_fact(|)' hint='(PHP 4>=4.0.4, PHP 5) resource gmp_fact(mixed $a) - Factorial.' flags='130'/>
<tag menu='G' submenu='GMP-->>g - gmp_l' inserttext='gmp_gcd(|)' hint='(PHP 4>=4.0.4, PHP 5) resource gmp_gcd(resource $a, resource $b) - Calculate GCD.' flags='130'/>
<tag menu='G' submenu='GMP-->>g - gmp_l' inserttext='gmp_gcdext(|)' hint='(PHP 4>=4.0.4, PHP 5) array gmp_gcdext(resource $a, resource $b) - Calculate GCD and multipliers.' flags='130'/>
<tag menu='G' submenu='GMP-->>g - gmp_l' inserttext='gmp_hamdist(|)' hint='(PHP 4>=4.0.4, PHP 5) int gmp_hamdist(resource $a, resource $b) - Hamming distance.' flags='130'/>
<tag menu='G' submenu='GMP-->>g - gmp_l' inserttext='gmp_init(|)' hint='(PHP 4>=4.0.4, PHP 5) resource gmp_init(mixed $number [, int $base=0]) - Create GMP number.' flags='130'/>
<tag menu='G' submenu='GMP-->>g - gmp_l' inserttext='gmp_intval(|)' hint='(PHP 4>=4.0.4, PHP 5) int gmp_intval(resource $gmpnumber) - Convert GMP number to integer.' flags='130'/>
<tag menu='G' submenu='GMP-->>g - gmp_l' inserttext='gmp_invert(|)' hint='(PHP 4>=4.0.4, PHP 5) resource gmp_invert(resource $a, resource $b) - Inverse by modulo.' flags='130'/>
<tag menu='G' submenu='GMP-->>g - gmp_l' inserttext='gmp_jacobi(|)' hint='(PHP 4>=4.0.4, PHP 5) int gmp_jacobi(resource $a, resource $p) - Jacobi symbol.' flags='130'/>
<tag menu='G' submenu='GMP-->>g - gmp_l' inserttext='gmp_legendre(|)' hint='(PHP 4>=4.0.4, PHP 5) int gmp_legendre(resource $a, resource $p) - Legendre symbol.' flags='130'/>
<tag menu='G' submenu='GMP-->>gmp_m - g' inserttext='gmp_mod(|)' hint='(PHP 4>=4.0.4, PHP 5) resource gmp_mod(resource $n, resource $d) - Modulo operation.' flags='130'/>
<tag menu='G' submenu='GMP-->>gmp_m - g' inserttext='gmp_mul(|)' hint='(PHP 4>=4.0.4, PHP 5) resource gmp_mul(resource $a, resource $b) - Multiply numbers.' flags='130'/>
<tag menu='G' submenu='GMP-->>gmp_m - g' inserttext='gmp_neg(|)' hint='(PHP 4>=4.0.4, PHP 5) resource gmp_neg(resource $a) - Negate number.' flags='130'/>
<tag menu='G' submenu='GMP-->>gmp_m - g' inserttext='gmp_nextprime(|)' hint='(PHP 5>=5.2.0) resource gmp_nextprime(int $a) - Find next prime number.' flags='130'/>
<tag menu='G' submenu='GMP-->>gmp_m - g' inserttext='gmp_or(|)' hint='(PHP 4>=4.0.4, PHP 5) resource gmp_or(resource $a, resource $b) - Bitwise OR.' flags='130'/>
<tag menu='G' submenu='GMP-->>gmp_m - g' inserttext='gmp_perfect_square(|)' hint='(PHP 4>=4.0.4, PHP 5) bool gmp_perfect_square(resource $a) - Perfect square check.' flags='130'/>
<tag menu='G' submenu='GMP-->>gmp_m - g' inserttext='gmp_popcount(|)' hint='(PHP 4>=4.0.4, PHP 5) int gmp_popcount(resource $a) - Population count.' flags='130'/>
<tag menu='G' submenu='GMP-->>gmp_m - g' inserttext='gmp_pow(|)' hint='(PHP 4>=4.0.4, PHP 5) resource gmp_pow(resource $base, int $exp) - Raise number into power.' flags='130'/>
<tag menu='G' submenu='GMP-->>gmp_m - g' inserttext='gmp_powm(|)' hint='(PHP 4>=4.0.4, PHP 5) resource gmp_powm(resource $base, resource $exp, resource $mod) - Raise number into power with modulo.' flags='130'/>
<tag menu='G' submenu='GMP-->>gmp_m - g' inserttext='gmp_prob_prime(|)' hint='(PHP 4>=4.0.4, PHP 5) int gmp_prob_prime(resource $a [, int $reps=10]) - Check if number is "probably prime".' flags='130'/>
<tag menu='G' submenu='GMP-->>gmp_m - g' inserttext='gmp_random(|)' hint='(PHP 4>=4.0.4, PHP 5) resource gmp_random([int $limiter=20]) - Random number.' flags='130'/>
<tag menu='G' submenu='GMP-->>gmp_m - g' inserttext='gmp_scan0(|)' hint='(PHP 4>=4.0.4, PHP 5) int gmp_scan0(resource $a, int $start) - Scan for 0.' flags='130'/>
<tag menu='G' submenu='GMP-->>gmp_m - g' inserttext='gmp_scan1(|)' hint='(PHP 4>=4.0.4, PHP 5) int gmp_scan1(resource $a, int $start) - Scan for 1.' flags='130'/>
<tag menu='G' submenu='GMP-->>gmp_m - g' inserttext='gmp_setbit(|)' hint='(PHP 4>=4.0.4, PHP 5) void gmp_setbit(resource $a, int $index [, bool $set_clear=true]) - Set bit.' flags='130'/>
<tag menu='G' submenu='GMP-->>gmp_m - g' inserttext='gmp_sign(|)' hint='(PHP 4>=4.0.4, PHP 5) int gmp_sign(resource $a) - Sign of number.' flags='130'/>
<tag menu='G' submenu='GMP-->>gmp_m - g' inserttext='gmp_sqrt(|)' hint='(PHP 4>=4.0.4, PHP 5) resource gmp_sqrt(resource $a) - Calculate square root.' flags='130'/>
<tag menu='G' submenu='GMP-->>gmp_m - g' inserttext='gmp_sqrtrem(|)' hint='(PHP 4>=4.0.4, PHP 5) array gmp_sqrtrem(resource $a) - Square root with remainder.' flags='130'/>
<tag menu='G' submenu='GMP-->>gmp_m - g' inserttext='gmp_strval(|)' hint='(PHP 4>=4.0.4, PHP 5) string gmp_strval(resource $gmpnumber [, int $base]) - Convert GMP number to string.' flags='130'/>
<tag menu='G' submenu='GMP-->>gmp_m - g' inserttext='gmp_sub(|)' hint='(PHP 4>=4.0.4, PHP 5) resource gmp_sub(resource $a, resource $b) - Subtract numbers.' flags='130'/>
<tag menu='G' submenu='GMP-->>gmp_m - g' inserttext='gmp_testbit(|)' hint='(PHP 5>=5.3.0) bool gmp_testbit(resource $a, int $index) - Tests if a bit is set.' flags='130'/>
<tag menu='G' submenu='GMP-->>gmp_m - g' inserttext='gmp_xor(|)' hint='(PHP 4>=4.0.4, PHP 5) resource gmp_xor(resource $a, resource $b) - Bitwise XOR.' flags='130'/>
<tag menu='G' submenu='Gettext' inserttext='bind_textdomain_codeset(|)' hint='(PHP 4>=4.2.0, PHP 5) string bind_textdomain_codeset(string $domain, string $codeset) - Specify the character encoding in which the messages from the DOMAIN message catalog will be returned.' flags='130'/>
<tag menu='G' submenu='Gettext' inserttext='bindtextdomain(|)' hint='(PHP 4, PHP 5) string bindtextdomain(string $domain, string $directory) - Sets the path for a domain.' flags='130'/>
<tag menu='G' submenu='Gettext' inserttext='dcgettext(|)' hint='(PHP 4, PHP 5) string dcgettext(string $domain, string $message, int $category) - Overrides the domain for a single lookup.' flags='130'/>
<tag menu='G' submenu='Gettext' inserttext='dcngettext(|)' hint='(PHP 4>=4.2.0, PHP 5) string dcngettext(string $domain, string $msgid1, string $msgid2, int $n, int $category) - Plural version of dcgettext.' flags='130'/>
<tag menu='G' submenu='Gettext' inserttext='dgettext(|)' hint='(PHP 4, PHP 5) string dgettext(string $domain, string $message) - Override the current domain.' flags='130'/>
<tag menu='G' submenu='Gettext' inserttext='dngettext(|)' hint='(PHP 4>=4.2.0, PHP 5) string dngettext(string $domain, string $msgid1, string $msgid2, int $n) - Plural version of dgettext.' flags='130'/>
<tag menu='G' submenu='Gettext' inserttext='gettext(|)' hint='(PHP 4, PHP 5) string gettext(string $message) - Lookup a message in the current domain.' flags='130'/>
<tag menu='G' submenu='Gettext' inserttext='ngettext(|)' hint='(PHP 4>=4.2.0, PHP 5) string ngettext(string $msgid1, string $msgid2, int $n) - Plural version of gettext.' flags='130'/>
<tag menu='G' submenu='GlobIterator class' inserttext='GlobIterator::__construct(|)' hint='(PHP 5>=5.3.0) GlobIterator::__construct(string $path [, integer $flags=FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO]) - Construct a directory using glob.' flags='130'/>
<tag menu='G' submenu='GlobIterator class' inserttext='GlobIterator::count()' hint='(PHP 5>=5.3.0) public integer GlobIterator::count(void) - Get the number of directories and files.' flags='130'/>
<tag menu='G' submenu='Grapheme' inserttext='grapheme_extract(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) string grapheme_extract(string $haystack, int $size [, int $extract_type [, int $start=0 [, int &amp;$next ]]]) - Function to extract a sequence of default grapheme clusters from a text buffer, which must be encoded in UTF-8.' flags='130'/>
<tag menu='G' submenu='Grapheme' inserttext='grapheme_stripos(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) int grapheme_stripos(string $haystack, string $needle [, int $offset=0]) - Find position (in grapheme units) of first occurrence of a case-insensitive string.' flags='130'/>
<tag menu='G' submenu='Grapheme' inserttext='grapheme_stristr(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) string grapheme_stristr(string $haystack, string $needle [, bool $before_needle=false]) - Returns part of haystack string from the first occurrence of case-insensitive needle to the end of haystack.' flags='130'/>
<tag menu='G' submenu='Grapheme' inserttext='grapheme_strlen(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) int grapheme_strlen(string $input) - Get string length in grapheme units.' flags='130'/>
<tag menu='G' submenu='Grapheme' inserttext='grapheme_strpos(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) int grapheme_strpos(string $haystack, string $needle [, int $offset=0]) - Find position (in grapheme units) of first occurrence of a string.' flags='130'/>
<tag menu='G' submenu='Grapheme' inserttext='grapheme_strripos(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) int grapheme_strripos(string $haystack, string $needle [, int $offset=0]) - Find position (in grapheme units) of last occurrence of a case-insensitive string.' flags='130'/>
<tag menu='G' submenu='Grapheme' inserttext='grapheme_strrpos(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) int grapheme_strrpos(string $haystack, string $needle [, int $offset=0]) - Find position (in grapheme units) of last occurrence of a string.' flags='130'/>
<tag menu='G' submenu='Grapheme' inserttext='grapheme_strstr(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) string grapheme_strstr(string $haystack, string $needle [, bool $before_needle=false]) - Returns part of haystack string from the first occurrence of needle to the end of haystack.' flags='130'/>
<tag menu='G' submenu='Grapheme' inserttext='grapheme_substr(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) int grapheme_substr(string $string, int $start [, int $length]) - Return part of a string.' flags='130'/>
<tag menu='H' submenu='Hash' inserttext='hash(|)' hint='(PHP 5>=5.1.2, PECL hash>=1.1) string hash(string $algo, string $data [, bool $raw_output=false]) - Generate a hash value (message digest).' flags='130'/>
<tag menu='H' submenu='Hash' inserttext='hash_algos()' hint='(PHP 5>=5.1.2, PECL hash>=1.1) array hash_algos(void) - Return a list of registered hashing algorithms.' flags='130'/>
<tag menu='H' submenu='Hash' inserttext='hash_copy(|)' hint='(PHP 5>=5.3.0) resource hash_copy(resource $context) - Copy hashing context.' flags='130'/>
<tag menu='H' submenu='Hash' inserttext='hash_file(|)' hint='(PHP 5>=5.1.2, PECL hash>=1.1) string hash_file(string $algo, string $filename [, bool $raw_output=false]) - Generate a hash value using the contents of a given file.' flags='130'/>
<tag menu='H' submenu='Hash' inserttext='hash_final(|)' hint='(PHP 5>=5.1.2, PECL hash>=1.1) string hash_final(resource $context [, bool $raw_output=false]) - Finalize an incremental hash and return resulting digest.' flags='130'/>
<tag menu='H' submenu='Hash' inserttext='hash_hmac(|)' hint='(PHP 5>=5.1.2, PECL hash>=1.1) string hash_hmac(string $algo, string $data, string $key [, bool $raw_output=false]) - Generate a keyed hash value using the HMAC method.' flags='130'/>
<tag menu='H' submenu='Hash' inserttext='hash_hmac_file(|)' hint='(PHP 5>=5.1.2, PECL hash>=1.1) string hash_hmac_file(string $algo, string $filename, string $key [, bool $raw_output=false]) - Generate a keyed hash value using the HMAC method and the contents of a given file.' flags='130'/>
<tag menu='H' submenu='Hash' inserttext='hash_init(|)' hint='(PHP 5>=5.1.2, PECL hash>=1.1) resource hash_init(string $algo [, int $options=0 [, string $key=NULL ]]) - Initialize an incremental hashing context.' flags='130'/>
<tag menu='H' submenu='Hash' inserttext='hash_update(|)' hint='(PHP 5>=5.1.2, PECL hash>=1.1) bool hash_update(resource $context, string $data) - Pump data into an active hashing context.' flags='130'/>
<tag menu='H' submenu='Hash' inserttext='hash_update_file(|)' hint='(PHP 5>=5.1.2, PECL hash>=1.1) bool hash_update_file(resource $context, string $filename [, resource $context=NULL]) - Pump data into an active hashing context from a file.' flags='130'/>
<tag menu='H' submenu='Hash' inserttext='hash_update_stream(|)' hint='(PHP 5>=5.1.2, PECL hash>=1.1) int hash_update_stream(resource $context, resource $handle [, int $length=-1]) - Pump data into an active hashing context from an open stream.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>h - hw_GetA' inserttext='hw_Array2Objrec(|)' hint='(PHP 4) string hw_array2objrec(array $object_array) - Convert attributes from object array to object record.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>h - hw_GetA' inserttext='hw_Children(|)' hint='(PHP 4) array hw_children(int $connection, int $objectID) - Object ids of children.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>h - hw_GetA' inserttext='hw_ChildrenObj(|)' hint='(PHP 4) array hw_childrenobj(int $connection, int $objectID) - Object records of children.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>h - hw_GetA' inserttext='hw_Close(|)' hint='(PHP 4) bool hw_close(int $connection) - Closes the Hyperwave connection.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>h - hw_GetA' inserttext='hw_Connect(|)' hint='(PHP 4) int hw_connect(string $host, int $port [, string $username ], string $password) - Opens a connection.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>h - hw_GetA' inserttext='hw_Deleteobject(|)' hint='(PHP 4) bool hw_deleteobject(int $connection, int $object_to_delete) - Deletes object.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>h - hw_GetA' inserttext='hw_DocByAnchor(|)' hint='(PHP 4) int hw_docbyanchor(int $connection, int $anchorID) - Object id object belonging to anchor.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>h - hw_GetA' inserttext='hw_DocByAnchorObj(|)' hint='(PHP 4) string hw_docbyanchorobj(int $connection, int $anchorID) - Object record object belonging to anchor.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>h - hw_GetA' inserttext='hw_Document_Attributes(|)' hint='(PHP 4) string hw_document_attributes(int $hw_document) - Object record of hw_document.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>h - hw_GetA' inserttext='hw_Document_BodyTag(|)' hint='(PHP 4) string hw_document_bodytag(int $hw_document [, string $prefix]) - Body tag of hw_document.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>h - hw_GetA' inserttext='hw_Document_Content(|)' hint='(PHP 4) string hw_document_content(int $hw_document) - Returns content of hw_document.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>h - hw_GetA' inserttext='hw_Document_SetContent(|)' hint='(PHP 4) bool hw_document_setcontent(int $hw_document, string $content) - Sets/replaces content of hw_document.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>h - hw_GetA' inserttext='hw_Document_Size(|)' hint='(PHP 4) int hw_document_size(int $hw_document) - Size of hw_document.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>h - hw_GetA' inserttext='hw_EditText(|)' hint='(PHP 4) bool hw_edittext(int $connection, int $hw_document) - Retrieve text document.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>h - hw_GetA' inserttext='hw_Error(|)' hint='(PHP 4) int hw_error(int $connection) - Error number.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>h - hw_GetA' inserttext='hw_ErrorMsg(|)' hint='(PHP 4) string hw_errormsg(int $connection) - Returns error message.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>h - hw_GetA' inserttext='hw_Free_Document(|)' hint='(PHP 4) bool hw_free_document(int $hw_document) - Frees hw_document.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>h - hw_GetA' inserttext='hw_GetAnchors(|)' hint='(PHP 4) array hw_getanchors(int $connection, int $objectID) - Object ids of anchors of document.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>h - hw_GetA' inserttext='hw_GetAnchorsObj(|)' hint='(PHP 4) array hw_getanchorsobj(int $connection, int $objectID) - Object records of anchors of document.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>h - hw_GetA' inserttext='hw_GetAndLock(|)' hint='(PHP 4) string hw_getandlock(int $connection, int $objectID) - Return object record and lock object.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>hw_GetC - hw_InsertD' inserttext='hw_GetChildColl(|)' hint='(PHP 4) array hw_getchildcoll(int $connection, int $objectID) - Object ids of child collections.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>hw_GetC - hw_InsertD' inserttext='hw_GetChildCollObj(|)' hint='(PHP 4) array hw_getchildcollobj(int $connection, int $objectID) - Object records of child collections.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>hw_GetC - hw_InsertD' inserttext='hw_GetChildDocColl(|)' hint='(PHP 4) array hw_getchilddoccoll(int $connection, int $objectID) - Object ids of child documents of collection.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>hw_GetC - hw_InsertD' inserttext='hw_GetChildDocCollObj(|)' hint='(PHP 4) array hw_getchilddoccollobj(int $connection, int $objectID) - Object records of child documents of collection.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>hw_GetC - hw_InsertD' inserttext='hw_GetObject(|)' hint='(PHP 4) mixed hw_getobject(int $connection, mixed $objectID [, string $query]) - Object record.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>hw_GetC - hw_InsertD' inserttext='hw_GetObjectByQuery(|)' hint='(PHP 4) array hw_getobjectbyquery(int $connection, string $query, int $max_hits) - Search object.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>hw_GetC - hw_InsertD' inserttext='hw_GetObjectByQueryColl(|)' hint='(PHP 4) array hw_getobjectbyquerycoll(int $connection, int $objectID, string $query, int $max_hits) - Search object in collection.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>hw_GetC - hw_InsertD' inserttext='hw_GetObjectByQueryCollObj(|)' hint='(PHP 4) array hw_getobjectbyquerycollobj(int $connection, int $objectID, string $query, int $max_hits) - Search object in collection.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>hw_GetC - hw_InsertD' inserttext='hw_GetObjectByQueryObj(|)' hint='(PHP 4) array hw_getobjectbyqueryobj(int $connection, string $query, int $max_hits) - Search object.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>hw_GetC - hw_InsertD' inserttext='hw_GetParents(|)' hint='(PHP 4) array hw_getparents(int $connection, int $objectID) - Object ids of parents.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>hw_GetC - hw_InsertD' inserttext='hw_GetParentsObj(|)' hint='(PHP 4) array hw_getparentsobj(int $connection, int $objectID) - Object records of parents.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>hw_GetC - hw_InsertD' inserttext='hw_GetRemote(|)' hint='(PHP 4) int hw_getremote(int $connection, int $objectID) - Gets a remote document.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>hw_GetC - hw_InsertD' inserttext='hw_GetSrcByDestObj(|)' hint='(PHP 4) array hw_getsrcbydestobj(int $connection, int $objectID) - Returns anchors pointing at object.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>hw_GetC - hw_InsertD' inserttext='hw_GetText(|)' hint='(PHP 4) int hw_gettext(int $connection, int $objectID [, mixed $rootID/prefix]) - Retrieve text document.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>hw_GetC - hw_InsertD' inserttext='hw_Identify(|)' hint='(PHP 4) string hw_identify(int $link, string $username, string $password) - Identifies as user.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>hw_GetC - hw_InsertD' inserttext='hw_InCollections(|)' hint='(PHP 4) array hw_incollections(int $connection, array $object_id_array, array $collection_id_array, int $return_collections) - Check if object ids in collections.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>hw_GetC - hw_InsertD' inserttext='hw_Info(|)' hint='(PHP 4) string hw_info(int $connection) - Info about connection.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>hw_GetC - hw_InsertD' inserttext='hw_InsColl(|)' hint='(PHP 4) int hw_inscoll(int $connection, int $objectID, array $object_array) - Insert collection.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>hw_GetC - hw_InsertD' inserttext='hw_InsDoc(|)' hint='(PHP 4) int hw_insdoc(resource $connection, int $parentID, string $object_record [, string $text]) - Insert document.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>hw_GetC - hw_InsertD' inserttext='hw_InsertDocument(|)' hint='(PHP 4) int hw_insertdocument(int $connection, int $parent_id, int $hw_document) - Upload any document.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>hw_InsertO - h' inserttext='hw_InsertObject(|)' hint='(PHP 4) int hw_insertobject(int $connection, string $object_rec, string $parameter) - Inserts an object record.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>hw_InsertO - h' inserttext='hw_Modifyobject(|)' hint='(PHP 4) bool hw_modifyobject(int $connection, int $object_to_change, array $remove, array $add [, int $mode]) - Modifies object record.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>hw_InsertO - h' inserttext='hw_New_Document(|)' hint='(PHP 4) int hw_new_document(string $object_record, string $document_data, int $document_size) - Create new document.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>hw_InsertO - h' inserttext='hw_Output_Document(|)' hint='(PHP 4) bool hw_output_document(int $hw_document) - Prints hw_document.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>hw_InsertO - h' inserttext='hw_PipeDocument(|)' hint='(PHP 4) int hw_pipedocument(int $connection, int $objectID [, array $url_prefixes]) - Retrieve any document.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>hw_InsertO - h' inserttext='hw_Root()' hint='(PHP 4) int hw_root(void) - Root object id.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>hw_InsertO - h' inserttext='hw_Unlock(|)' hint='(PHP 4) bool hw_unlock(int $connection, int $objectID) - Unlock object.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>hw_InsertO - h' inserttext='hw_Who(|)' hint='(PHP 4) array hw_who(int $connection) - List of currently logged in users.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>hw_InsertO - h' inserttext='hw_changeobject(|)' hint='(PHP 4) bool hw_changeobject(int $link, int $objid, array $attributes) - Changes attributes of an object (obsolete).' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>hw_InsertO - h' inserttext='hw_connection_info(|)' hint='(PHP 4) void hw_connection_info(int $link) - Prints information about the connection to Hyperwave server.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>hw_InsertO - h' inserttext='hw_cp(|)' hint='(PHP 4) int hw_cp(int $connection, array $object_id_array, int $destination_id) - Copies objects.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>hw_InsertO - h' inserttext='hw_dummy(|)' hint='(PHP 4) string hw_dummy(int $link, int $id, int $msgid) - Hyperwave dummy function.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>hw_InsertO - h' inserttext='hw_getrellink(|)' hint='(PHP 4) string hw_getrellink(int $link, int $rootid, int $sourceid, int $destid) - Get link from source to dest relative to rootid.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>hw_InsertO - h' inserttext='hw_getremotechildren(|)' hint='(PHP 4) mixed hw_getremotechildren(int $connection, string $object_record) - Gets children of remote document.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>hw_InsertO - h' inserttext='hw_getusername(|)' hint='(PHP 4) string hw_getusername(int $connection) - Name of currently logged in user.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>hw_InsertO - h' inserttext='hw_insertanchors(|)' hint='(PHP 4>=4.0.4) bool hw_insertanchors(int $hwdoc, array $anchorecs, array $dest [, array $urlprefixes]) - Inserts only anchors into text.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>hw_InsertO - h' inserttext='hw_mapid(|)' hint='(PHP 4) int hw_mapid(int $connection, int $server_id, int $object_id) - Maps global id on virtual local id.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>hw_InsertO - h' inserttext='hw_mv(|)' hint='(PHP 4) int hw_mv(int $connection, array $object_id_array, int $source_id, int $destination_id) - Moves objects.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>hw_InsertO - h' inserttext='hw_objrec2array(|)' hint='(PHP 4) array hw_objrec2array(string $object_record [, array $format]) - Convert attributes from object record to object array.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>hw_InsertO - h' inserttext='hw_pConnect(|)' hint='(PHP 4) int hw_pconnect(string $host, int $port [, string $username ], string $password) - Make a persistent database connection.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>hw_InsertO - h' inserttext='hw_setlinkroot(|)' hint='(PHP 4) int hw_setlinkroot(int $link, int $rootid) - Set the id to which links are calculated.' flags='130'/>
<tag menu='H' submenu='Hyperwave-->>hw_InsertO - h' inserttext='hw_stat(|)' hint='(PHP 4) string hw_stat(int $link) - Returns status string.' flags='130'/>
<tag menu='H' submenu='Hyperwave API-->>h - hw_api->insertc' inserttext='hw_api->checkin(|)' hint='(PHP 4, PHP 5&lt;5.2.0, PECL hwapi SVN) bool hw_api::checkin(array $parameter) - Checks in an object.' flags='130'/>
<tag menu='H' submenu='Hyperwave API-->>h - hw_api->insertc' inserttext='hw_api->checkout(|)' hint='(PHP 4, PHP 5&lt;5.2.0, PECL hwapi SVN) bool hw_api::checkout(array $parameter) - Checks out an object.' flags='130'/>
<tag menu='H' submenu='Hyperwave API-->>h - hw_api->insertc' inserttext='hw_api->children(|)' hint='(PHP 4, PHP 5&lt;5.2.0, PECL hwapi SVN) array hw_api::children(array $parameter) - Returns children of an object.' flags='130'/>
<tag menu='H' submenu='Hyperwave API-->>h - hw_api->insertc' inserttext='hw_api->content(|)' hint='(PHP 4, PHP 5&lt;5.2.0, PECL hwapi SVN) HW_API_Content hw_api::content(array $parameter) - Returns content of an object.' flags='130'/>
<tag menu='H' submenu='Hyperwave API-->>h - hw_api->insertc' inserttext='hw_api->copy(|)' hint='(PHP 4, PHP 5&lt;5.2.0, PECL hwapi SVN) hw_api_content hw_api::copy(array $parameter) - Copies physically.' flags='130'/>
<tag menu='H' submenu='Hyperwave API-->>h - hw_api->insertc' inserttext='hw_api->dbstat(|)' hint='(PHP 4, PHP 5&lt;5.2.0, PECL hwapi SVN) hw_api_object hw_api::dbstat(array $parameter) - Returns statistics about database server.' flags='130'/>
<tag menu='H' submenu='Hyperwave API-->>h - hw_api->insertc' inserttext='hw_api->dcstat(|)' hint='(PHP 4, PHP 5&lt;5.2.0, PECL hwapi SVN) hw_api_object hw_api::dcstat(array $parameter) - Returns statistics about document cache server.' flags='130'/>
<tag menu='H' submenu='Hyperwave API-->>h - hw_api->insertc' inserttext='hw_api->dstanchors(|)' hint='(PHP 4, PHP 5&lt;5.2.0, PECL hwapi SVN) array hw_api::dstanchors(array $parameter) - Returns a list of all destination anchors.' flags='130'/>
<tag menu='H' submenu='Hyperwave API-->>h - hw_api->insertc' inserttext='hw_api->dstofsrcanchor(|)' hint='(PHP 4, PHP 5&lt;5.2.0, PECL hwapi SVN) hw_api_object hw_api::dstofsrcanchor(array $parameter) - Returns destination of a source anchor.' flags='130'/>
<tag menu='H' submenu='Hyperwave API-->>h - hw_api->insertc' inserttext='hw_api->find(|)' hint='(PHP 4, PHP 5&lt;5.2.0, PECL hwapi SVN) array hw_api::find(array $parameter) - Search for objects.' flags='130'/>
<tag menu='H' submenu='Hyperwave API-->>h - hw_api->insertc' inserttext='hw_api->ftstat(|)' hint='(PHP 4, PHP 5&lt;5.2.0, PECL hwapi SVN) hw_api_object hw_api::ftstat(array $parameter) - Returns statistics about fulltext server.' flags='130'/>
<tag menu='H' submenu='Hyperwave API-->>h - hw_api->insertc' inserttext='hw_api->hwstat(|)' hint='(PHP 4, PHP 5&lt;5.2.0, PECL hwapi SVN) hw_api_object hw_api::hwstat(array $parameter) - Returns statistics about Hyperwave server.' flags='130'/>
<tag menu='H' submenu='Hyperwave API-->>h - hw_api->insertc' inserttext='hw_api->identify(|)' hint='(PHP 4, PHP 5&lt;5.2.0, PECL hwapi SVN) bool hw_api::identify(array $parameter) - Log into Hyperwave Server.' flags='130'/>
<tag menu='H' submenu='Hyperwave API-->>h - hw_api->insertc' inserttext='hw_api->info(|)' hint='(PHP 4, PHP 5&lt;5.2.0, PECL hwapi SVN) array hw_api::info(array $parameter) - Returns information about server configuration.' flags='130'/>
<tag menu='H' submenu='Hyperwave API-->>h - hw_api->insertc' inserttext='hw_api->insert(|)' hint='(PHP 4, PHP 5&lt;5.2.0, PECL hwapi SVN) hw_api_object hw_api::insert(array $parameter) - Inserts a new object.' flags='130'/>
<tag menu='H' submenu='Hyperwave API-->>h - hw_api->insertc' inserttext='hw_api->insertanchor(|)' hint='(PHP 4, PHP 5&lt;5.2.0, PECL hwapi SVN) hw_api_object hw_api::insertanchor(array $parameter) - Inserts a new object of type anchor.' flags='130'/>
<tag menu='H' submenu='Hyperwave API-->>h - hw_api->insertc' inserttext='hw_api->insertcollection(|)' hint='(PHP 4, PHP 5&lt;5.2.0, PECL hwapi SVN) hw_api_object hw_api::insertcollection(array $parameter) - Inserts a new object of type collection.' flags='130'/>
<tag menu='H' submenu='Hyperwave API-->>hw_api->insertd - hw_api_attribute->k' inserttext='hw_api->insertdocument(|)' hint='(PHP 4, PHP 5&lt;5.2.0, PECL hwapi SVN) hw_api_object hw_api::insertdocument(array $parameter) - Inserts a new object of type document.' flags='130'/>
<tag menu='H' submenu='Hyperwave API-->>hw_api->insertd - hw_api_attribute->k' inserttext='hw_api->link(|)' hint='(PHP 4, PHP 5&lt;5.2.0, PECL hwapi SVN) bool hw_api::link(array $parameter) - Creates a link to an object.' flags='130'/>
<tag menu='H' submenu='Hyperwave API-->>hw_api->insertd - hw_api_attribute->k' inserttext='hw_api->lock(|)' hint='(PHP 4, PHP 5&lt;5.2.0, PECL hwapi SVN) bool hw_api::lock(array $parameter) - Locks an object.' flags='130'/>
<tag menu='H' submenu='Hyperwave API-->>hw_api->insertd - hw_api_attribute->k' inserttext='hw_api->move(|)' hint='(PHP 4, PHP 5&lt;5.2.0, PECL hwapi SVN) bool hw_api::move(array $parameter) - Moves object between collections.' flags='130'/>
<tag menu='H' submenu='Hyperwave API-->>hw_api->insertd - hw_api_attribute->k' inserttext='hw_api->object(|)' hint='(PHP 4, PHP 5&lt;5.2.0, PECL hwapi SVN) hw_api_object hw_api::object(array $parameter) - Retrieve attribute information.' flags='130'/>
<tag menu='H' submenu='Hyperwave API-->>hw_api->insertd - hw_api_attribute->k' inserttext='hw_api->objectbyanchor(|)' hint='(PHP 4, PHP 5&lt;5.2.0, PECL hwapi SVN) hw_api_object hw_api::objectbyanchor(array $parameter) - Returns the object an anchor belongs to.' flags='130'/>
<tag menu='H' submenu='Hyperwave API-->>hw_api->insertd - hw_api_attribute->k' inserttext='hw_api->parents(|)' hint='(PHP 4, PHP 5&lt;5.2.0, PECL hwapi SVN) array hw_api::parents(array $parameter) - Returns parents of an object.' flags='130'/>
<tag menu='H' submenu='Hyperwave API-->>hw_api->insertd - hw_api_attribute->k' inserttext='hw_api->remove(|)' hint='(PHP 4, PHP 5&lt;5.2.0, PECL hwapi SVN) bool hw_api::remove(array $parameter) - Delete an object.' flags='130'/>
<tag menu='H' submenu='Hyperwave API-->>hw_api->insertd - hw_api_attribute->k' inserttext='hw_api->replace(|)' hint='(PHP 4, PHP 5&lt;5.2.0, PECL hwapi SVN) hw_api_object hw_api::replace(array $parameter) - Replaces an object.' flags='130'/>
<tag menu='H' submenu='Hyperwave API-->>hw_api->insertd - hw_api_attribute->k' inserttext='hw_api->setcommittedversion(|)' hint='(PHP 4, PHP 5&lt;5.2.0, PECL hwapi SVN) hw_api_object hw_api::setcommittedversion(array $parameter) - Commits version other than last version.' flags='130'/>
<tag menu='H' submenu='Hyperwave API-->>hw_api->insertd - hw_api_attribute->k' inserttext='hw_api->srcanchors(|)' hint='(PHP 4, PHP 5&lt;5.2.0, PECL hwapi SVN) array hw_api::srcanchors(array $parameter) - Returns a list of all source anchors.' flags='130'/>
<tag menu='H' submenu='Hyperwave API-->>hw_api->insertd - hw_api_attribute->k' inserttext='hw_api->srcsofdst(|)' hint='(PHP 4, PHP 5&lt;5.2.0, PECL hwapi SVN) array hw_api::srcsofdst(array $parameter) - Returns source of a destination object.' flags='130'/>
<tag menu='H' submenu='Hyperwave API-->>hw_api->insertd - hw_api_attribute->k' inserttext='hw_api->unlock(|)' hint='(PHP 4, PHP 5&lt;5.2.0, PECL hwapi SVN) bool hw_api::unlock(array $parameter) - Unlocks a locked object.' flags='130'/>
<tag menu='H' submenu='Hyperwave API-->>hw_api->insertd - hw_api_attribute->k' inserttext='hw_api->user(|)' hint='(PHP 4, PHP 5&lt;5.2.0, PECL hwapi SVN) hw_api_object hw_api::user(array $parameter) - Returns the own user object.' flags='130'/>
<tag menu='H' submenu='Hyperwave API-->>hw_api->insertd - hw_api_attribute->k' inserttext='hw_api->userlist(|)' hint='(PHP 4, PHP 5&lt;5.2.0, PECL hwapi SVN) array hw_api::userlist(array $parameter) - Returns a list of all logged in users.' flags='130'/>
<tag menu='H' submenu='Hyperwave API-->>hw_api->insertd - hw_api_attribute->k' inserttext='hw_api_attribute(|)' hint='(PHP 4, PHP 5&lt;5.2.0, PECL hwapi SVN) HW_API_Attribute hw_api_attribute([string $name [, string $value ]]) - Creates instance of class hw_api_attribute.' flags='130'/>
<tag menu='H' submenu='Hyperwave API-->>hw_api->insertd - hw_api_attribute->k' inserttext='hw_api_attribute->key(|)' hint='(PHP 4, PHP 5&lt;5.2.0, PECL hwapi SVN) string hw_api_attribute::key(void) - Returns key of the attribute.' flags='130'/>
<tag menu='H' submenu='Hyperwave API-->>hw_api_attribute->l - h' inserttext='hw_api_attribute->langdepvalue(|)' hint='(PHP 4, PHP 5&lt;5.2.0, PECL hwapi SVN) string hw_api_attribute::langdepvalue(string $language) - Returns value for a given language.' flags='130'/>
<tag menu='H' submenu='Hyperwave API-->>hw_api_attribute->l - h' inserttext='hw_api_attribute->value(|)' hint='(PHP 4, PHP 5&lt;5.2.0, PECL hwapi SVN) string hw_api_attribute::value(void) - Returns value of the attribute.' flags='130'/>
<tag menu='H' submenu='Hyperwave API-->>hw_api_attribute->l - h' inserttext='hw_api_attribute->values(|)' hint='(PHP 4, PHP 5&lt;5.2.0, PECL hwapi SVN) array hw_api_attribute::values(void) - Returns all values of the attribute.' flags='130'/>
<tag menu='H' submenu='Hyperwave API-->>hw_api_attribute->l - h' inserttext='hw_api_content(|)' hint='(PHP 4, PHP 5&lt;5.2.0, PECL hwapi SVN) HW_API_Content hw_api_content(string $content, string $mimetype) - Create new instance of class hw_api_content.' flags='130'/>
<tag menu='H' submenu='Hyperwave API-->>hw_api_attribute->l - h' inserttext='hw_api_content->mimetype(|)' hint='(PHP 4, PHP 5&lt;5.2.0, PECL hwapi SVN) string hw_api_content::mimetype(void) - Returns mimetype.' flags='130'/>
<tag menu='H' submenu='Hyperwave API-->>hw_api_attribute->l - h' inserttext='hw_api_content->read(|)' hint='(PHP 4, PHP 5&lt;5.2.0, PECL hwapi SVN) string hw_api_content::read(string $buffer, int $len) - Read content.' flags='130'/>
<tag menu='H' submenu='Hyperwave API-->>hw_api_attribute->l - h' inserttext='hw_api_error->count(|)' hint='(PHP 4, PHP 5&lt;5.2.0, PECL hwapi SVN) int hw_api_error::count(void) - Returns number of reasons.' flags='130'/>
<tag menu='H' submenu='Hyperwave API-->>hw_api_attribute->l - h' inserttext='hw_api_error->reason(|)' hint='(PHP 4, PHP 5&lt;5.2.0, PECL hwapi SVN) HW_API_Reason hw_api_error::reason(void) - Returns reason of error.' flags='130'/>
<tag menu='H' submenu='Hyperwave API-->>hw_api_attribute->l - h' inserttext='hw_api_object(|)' hint='(PHP 4, PHP 5&lt;5.2.0, PECL hwapi SVN) hw_api_object hw_api_object(array $parameter) - Creates a new instance of class hw_api_object.' flags='130'/>
<tag menu='H' submenu='Hyperwave API-->>hw_api_attribute->l - h' inserttext='hw_api_object->assign(|)' hint='(PHP 4, PHP 5&lt;5.2.0, PECL hwapi SVN) bool hw_api_object::assign(array $parameter) - Clones object.' flags='130'/>
<tag menu='H' submenu='Hyperwave API-->>hw_api_attribute->l - h' inserttext='hw_api_object->attreditable(|)' hint='(PHP 4, PHP 5&lt;5.2.0, PECL hwapi SVN) bool hw_api_object::attreditable(array $parameter) - Checks whether an attribute is editable.' flags='130'/>
<tag menu='H' submenu='Hyperwave API-->>hw_api_attribute->l - h' inserttext='hw_api_object->count(|)' hint='(PHP 4, PHP 5&lt;5.2.0, PECL hwapi SVN) int hw_api_object::count(array $parameter) - Returns number of attributes.' flags='130'/>
<tag menu='H' submenu='Hyperwave API-->>hw_api_attribute->l - h' inserttext='hw_api_object->insert(|)' hint='(PHP 4, PHP 5&lt;5.2.0, PECL hwapi SVN) bool hw_api_object::insert(HW_API_Attribute $attribute) - Inserts new attribute.' flags='130'/>
<tag menu='H' submenu='Hyperwave API-->>hw_api_attribute->l - h' inserttext='hw_api_object->remove(|)' hint='(PHP 4, PHP 5&lt;5.2.0, PECL hwapi SVN) bool hw_api_object::remove(string $name) - Removes attribute.' flags='130'/>
<tag menu='H' submenu='Hyperwave API-->>hw_api_attribute->l - h' inserttext='hw_api_object->title(|)' hint='(PHP 4, PHP 5&lt;5.2.0, PECL hwapi SVN) string hw_api_object::title(array $parameter) - Returns the title attribute.' flags='130'/>
<tag menu='H' submenu='Hyperwave API-->>hw_api_attribute->l - h' inserttext='hw_api_object->value(|)' hint='(PHP 4, PHP 5&lt;5.2.0, PECL hwapi SVN) string hw_api_object::value(string $name) - Returns value of attribute.' flags='130'/>
<tag menu='H' submenu='Hyperwave API-->>hw_api_attribute->l - h' inserttext='hw_api_reason->description(|)' hint='(PHP 4, PHP 5&lt;5.2.0, PECL hwapi SVN) string hw_api_reason::description(void) - Returns description of reason.' flags='130'/>
<tag menu='H' submenu='Hyperwave API-->>hw_api_attribute->l - h' inserttext='hw_api_reason->type(|)' hint='(PHP 4, PHP 5&lt;5.2.0, PECL hwapi SVN) HW_API_Reason hw_api_reason::type(void) - Returns type of reason.' flags='130'/>
<tag menu='H' submenu='Hyperwave API-->>hw_api_attribute->l - h' inserttext='hwapi_hgcsp(|)' hint='(PHP 4, PHP 5&lt;5.2.0, PECL hwapi SVN) HW_API hwapi_hgcsp(string $hostname [, int $port]) - Returns object of class hw_api.' flags='130'/>
<tag menu='I' submenu='IBM (PDO_IBM)' inserttext='PDO::pgsqlLOBCreate()' hint='(PHP 5>=5.1.2, PECL pdo_pgsql>=1.0.2) string PDO::pgsqlLOBCreate(void) - Creates a new large object.' flags='130'/>
<tag menu='I' submenu='IBM (PDO_IBM)' inserttext='PDO::pgsqlLOBOpen(|)' hint='(PHP 5>=5.1.2, PECL pdo_pgsql>=1.0.2) resource PDO::pgsqlLOBOpen(string $oid [, string $mode="rb"]) - Opens an existing large object stream.' flags='130'/>
<tag menu='I' submenu='IBM (PDO_IBM)' inserttext='PDO::pgsqlLOBUnlink(|)' hint='(PHP 5>=5.1.2, PECL pdo_pgsql>=1.0.2) bool PDO::pgsqlLOBUnlink(string $oid) - Deletes the large object.' flags='130'/>
<tag menu='I' submenu='IBM (PDO_IBM)' inserttext='PDO::sqliteCreateAggregate(|)' hint='(PHP 5>=5.1.0, PECL pdo_sqlite>=1.0.0) bool PDO::sqliteCreateAggregate(string $function_name, callback $step_func, callback $finalize_func [, int $num_args]) - Registers an aggregating User Defined Function for use in SQL statements.' flags='130'/>
<tag menu='I' submenu='IBM (PDO_IBM)' inserttext='PDO::sqliteCreateFunction(|)' hint='(PHP 5>=5.1.0, PECL pdo_sqlite>=1.0.0) bool PDO::sqliteCreateFunction(string $function_name, callback $callback [, int $num_args]) - Registers a User Defined Function for use in SQL statements.' flags='130'/>
<tag menu='I' submenu='IDN' inserttext='idn_to_ascii(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.2, PECL idn>=0.1) string idn_to_ascii(string $domain [, int $options]) - Convert domain name to IDNA ASCII form.' flags='130'/>
<tag menu='I' submenu='IDN' inserttext='idn_to_utf8(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.2, PECL idn>=0.1) string idn_to_utf8(string $domain [, int $options]) - Convert domain name from IDNA ASCII to Unicode.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>i - imap_get_' inserttext='imap_8bit(|)' hint='(PHP 4, PHP 5) string imap_8bit(string $string) - Convert an 8bit string to a quoted-printable string.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>i - imap_get_' inserttext='imap_alerts()' hint='(PHP 4, PHP 5) array imap_alerts(void) - Returns all IMAP alert messages that have occurred.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>i - imap_get_' inserttext='imap_append(|)' hint='(PHP 4, PHP 5) bool imap_append(resource $imap_stream, string $mailbox, string $message [, string $options=NULL [, string $internal_date=NULL ]]) - Append a string message to a specified mailbox.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>i - imap_get_' inserttext='imap_base64(|)' hint='(PHP 4, PHP 5) string imap_base64(string $text) - Decode BASE64 encoded text.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>i - imap_get_' inserttext='imap_binary(|)' hint='(PHP 4, PHP 5) string imap_binary(string $string) - Convert an 8bit string to a base64 string.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>i - imap_get_' inserttext='imap_body(|)' hint='(PHP 4, PHP 5) string imap_body(resource $imap_stream, int $msg_number [, int $options=0]) - Read the message body.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>i - imap_get_' inserttext='imap_bodystruct(|)' hint='(PHP 4, PHP 5) object imap_bodystruct(resource $imap_stream, int $msg_number, string $section) - Read the structure of a specified body section of a specific message.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>i - imap_get_' inserttext='imap_check(|)' hint='(PHP 4, PHP 5) object imap_check(resource $imap_stream) - Check current mailbox.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>i - imap_get_' inserttext='imap_clearflag_full(|)' hint='(PHP 4, PHP 5) bool imap_clearflag_full(resource $imap_stream, string $sequence, string $flag [, int $options=0]) - Clears flags on messages.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>i - imap_get_' inserttext='imap_close(|)' hint='(PHP 4, PHP 5) bool imap_close(resource $imap_stream [, int $flag=0]) - Close an IMAP stream.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>i - imap_get_' inserttext='imap_createmailbox(|)' hint='(PHP 4, PHP 5) bool imap_createmailbox(resource $imap_stream, string $mailbox) - Create a new mailbox.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>i - imap_get_' inserttext='imap_delete(|)' hint='(PHP 4, PHP 5) bool imap_delete(resource $imap_stream, int $msg_number [, int $options=0]) - Mark a message for deletion from current mailbox.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>i - imap_get_' inserttext='imap_deletemailbox(|)' hint='(PHP 4, PHP 5) bool imap_deletemailbox(resource $imap_stream, string $mailbox) - Delete a mailbox.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>i - imap_get_' inserttext='imap_errors()' hint='(PHP 4, PHP 5) array imap_errors(void) - Returns all of the IMAP errors that have occured.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>i - imap_get_' inserttext='imap_expunge(|)' hint='(PHP 4, PHP 5) bool imap_expunge(resource $imap_stream) - Delete all messages marked for deletion.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>i - imap_get_' inserttext='imap_fetch_overview(|)' hint='(PHP 4, PHP 5) array imap_fetch_overview(resource $imap_stream, string $sequence [, int $options=0]) - Read an overview of the information in the headers of the given message.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>i - imap_get_' inserttext='imap_fetchbody(|)' hint='(PHP 4, PHP 5) string imap_fetchbody(resource $imap_stream, int $msg_number, string $section [, int $options=0]) - Fetch a particular section of the body of the message.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>i - imap_get_' inserttext='imap_fetchheader(|)' hint='(PHP 4, PHP 5) string imap_fetchheader(resource $imap_stream, int $msg_number [, int $options=0]) - Returns header for a message.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>i - imap_get_' inserttext='imap_fetchstructure(|)' hint='(PHP 4, PHP 5) object imap_fetchstructure(resource $imap_stream, int $msg_number [, int $options=0]) - Read the structure of a particular message.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>i - imap_get_' inserttext='imap_gc(|)' hint='(PHP 5>=5.3.0) string imap_gc(resource $imap_stream, int $caches) - Clears IMAP cache.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>i - imap_get_' inserttext='imap_get_quota(|)' hint='(PHP 4>=4.0.5, PHP 5) array imap_get_quota(resource $imap_stream, string $quota_root) - Retrieve the quota level settings, and usage statics per mailbox.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>i - imap_get_' inserttext='imap_get_quotaroot(|)' hint='(PHP 4>=4.3.0, PHP 5) array imap_get_quotaroot(resource $imap_stream, string $quota_root) - Retrieve the quota settings per user.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>imap_geta - imap_o' inserttext='imap_getacl(|)' hint='(PHP 5) array imap_getacl(resource $imap_stream, string $mailbox) - Gets the ACL for a given mailbox.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>imap_geta - imap_o' inserttext='imap_getmailboxes(|)' hint='(PHP 4, PHP 5) array imap_getmailboxes(resource $imap_stream, string $ref, string $pattern) - Read the list of mailboxes, returning detailed information on each one.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>imap_geta - imap_o' inserttext='imap_getsubscribed(|)' hint='(PHP 4, PHP 5) array imap_getsubscribed(resource $imap_stream, string $ref, string $pattern) - List all the subscribed mailboxes.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>imap_geta - imap_o' inserttext='imap_header(|)' hint='(PHP 4, PHP 5) Alias of imap_headerinfo().' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>imap_geta - imap_o' inserttext='imap_headerinfo(|)' hint='(PHP 4, PHP 5) object imap_headerinfo(resource $imap_stream, int $msg_number [, int $fromlength=0 [, int $subjectlength=0 [, string $defaulthost=NULL ]]]) - Read the header of the message.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>imap_geta - imap_o' inserttext='imap_headers(|)' hint='(PHP 4, PHP 5) array imap_headers(resource $imap_stream) - Returns headers for all messages in a mailbox.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>imap_geta - imap_o' inserttext='imap_last_error()' hint='(PHP 4, PHP 5) string imap_last_error(void) - Gets the last IMAP error that occurred during this page request.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>imap_geta - imap_o' inserttext='imap_list(|)' hint='(PHP 4, PHP 5) array imap_list(resource $imap_stream, string $ref, string $pattern) - Read the list of mailboxes.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>imap_geta - imap_o' inserttext='imap_listmailbox(|)' hint='(PHP 4, PHP 5) Alias of imap_list().' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>imap_geta - imap_o' inserttext='imap_listscan(|)' hint='(PHP 4, PHP 5) array imap_listscan(resource $imap_stream, string $ref, string $pattern, string $content) - Returns the list of mailboxes that matches the given text.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>imap_geta - imap_o' inserttext='imap_listsubscribed(|)' hint='(PHP 4, PHP 5) Alias of imap_lsub().' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>imap_geta - imap_o' inserttext='imap_lsub(|)' hint='(PHP 4, PHP 5) array imap_lsub(resource $imap_stream, string $ref, string $pattern) - List all the subscribed mailboxes.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>imap_geta - imap_o' inserttext='imap_mail(|)' hint='(PHP 4, PHP 5) bool imap_mail(string $to, string $subject, string $message [, string $additional_headers=NULL [, string $cc=NULL [, string $bcc=NULL [, string $rpath=NULL ]]]]) - Send an email message.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>imap_geta - imap_o' inserttext='imap_mail_compose(|)' hint='(PHP 4, PHP 5) string imap_mail_compose(array $envelope, array $body) - Create a MIME message based on given envelope and body sections.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>imap_geta - imap_o' inserttext='imap_mail_copy(|)' hint='(PHP 4, PHP 5) bool imap_mail_copy(resource $imap_stream, string $msglist, string $mailbox [, int $options=0]) - Copy specified messages to a mailbox.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>imap_geta - imap_o' inserttext='imap_mail_move(|)' hint='(PHP 4, PHP 5) bool imap_mail_move(resource $imap_stream, string $msglist, string $mailbox [, int $options=0]) - Move specified messages to a mailbox.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>imap_geta - imap_o' inserttext='imap_mailboxmsginfo(|)' hint='(PHP 4, PHP 5) object imap_mailboxmsginfo(resource $imap_stream) - Get information about the current mailbox.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>imap_geta - imap_o' inserttext='imap_mime_header_decode(|)' hint='(PHP 4, PHP 5) array imap_mime_header_decode(string $text) - Decode MIME header elements.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>imap_geta - imap_o' inserttext='imap_msgno(|)' hint='(PHP 4, PHP 5) int imap_msgno(resource $imap_stream, int $uid) - Gets the message sequence number for the given UID.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>imap_geta - imap_o' inserttext='imap_num_msg(|)' hint='(PHP 4, PHP 5) int imap_num_msg(resource $imap_stream) - Gets the number of messages in the current mailbox.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>imap_geta - imap_o' inserttext='imap_num_recent(|)' hint='(PHP 4, PHP 5) int imap_num_recent(resource $imap_stream) - Gets the number of recent messages in current mailbox.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>imap_geta - imap_o' inserttext='imap_open(|)' hint='(PHP 4, PHP 5) resource imap_open(string $mailbox, string $username, string $password [, int $options=NIL [, int $n_retries=0 [, array $params=NULL ]]]) - Open an IMAP stream to a mailbox.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>imap_p - i' inserttext='imap_ping(|)' hint='(PHP 4, PHP 5) bool imap_ping(resource $imap_stream) - Check if the IMAP stream is still active.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>imap_p - i' inserttext='imap_qprint(|)' hint='(PHP 4, PHP 5) string imap_qprint(string $string) - Convert a quoted-printable string to an 8 bit string.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>imap_p - i' inserttext='imap_renamemailbox(|)' hint='(PHP 4, PHP 5) bool imap_renamemailbox(resource $imap_stream, string $old_mbox, string $new_mbox) - Rename an old mailbox to new mailbox.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>imap_p - i' inserttext='imap_reopen(|)' hint='(PHP 4, PHP 5) bool imap_reopen(resource $imap_stream, string $mailbox [, int $options=0 [, int $n_retries=0 ]]) - Reopen IMAP stream to new mailbox.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>imap_p - i' inserttext='imap_rfc822_parse_adrlist(|)' hint='(PHP 4, PHP 5) array imap_rfc822_parse_adrlist(string $address, string $default_host) - Parses an address string.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>imap_p - i' inserttext='imap_rfc822_parse_headers(|)' hint='(PHP 4, PHP 5) object imap_rfc822_parse_headers(string $headers [, string $defaulthost="UNKNOWN"]) - Parse mail headers from a string.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>imap_p - i' inserttext='imap_rfc822_write_address(|)' hint='(PHP 4, PHP 5) string imap_rfc822_write_address(string $mailbox, string $host, string $personal) - Returns a properly formatted email address given the mailbox, host, and personal info.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>imap_p - i' inserttext='imap_savebody(|)' hint='(PHP 5>=5.1.3) bool imap_savebody(resource $imap_stream, mixed $file, int $msg_number [, string $part_number="" [, int $options=0 ]]) - Save a specific body section to a file.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>imap_p - i' inserttext='imap_scanmailbox(|)' hint='(PHP 4, PHP 5) Alias of imap_listscan().' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>imap_p - i' inserttext='imap_search(|)' hint='(PHP 4, PHP 5) array imap_search(resource $imap_stream, string $criteria [, int $options=SE_FREE [, string $charset=NIL ]]) - This function returns an array of messages matching the given search criteria.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>imap_p - i' inserttext='imap_set_quota(|)' hint='(PHP 4>=4.0.5, PHP 5) bool imap_set_quota(resource $imap_stream, string $quota_root, int $quota_limit) - Sets a quota for a given mailbox.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>imap_p - i' inserttext='imap_setacl(|)' hint='(PHP 4>=4.0.7, PHP 5) bool imap_setacl(resource $imap_stream, string $mailbox, string $id, string $rights) - Sets the ACL for a giving mailbox.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>imap_p - i' inserttext='imap_setflag_full(|)' hint='(PHP 4, PHP 5) bool imap_setflag_full(resource $imap_stream, string $sequence, string $flag [, int $options=NIL]) - Sets flags on messages.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>imap_p - i' inserttext='imap_sort(|)' hint='(PHP 4, PHP 5) array imap_sort(resource $imap_stream, int $criteria, int $reverse [, int $options=0 [, string $search_criteria=NULL [, string $charset=NIL ]]]) - Gets and sort messages.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>imap_p - i' inserttext='imap_status(|)' hint='(PHP 4, PHP 5) object imap_status(resource $imap_stream, string $mailbox, int $options) - Returns status information on a mailbox.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>imap_p - i' inserttext='imap_subscribe(|)' hint='(PHP 4, PHP 5) bool imap_subscribe(resource $imap_stream, string $mailbox) - Subscribe to a mailbox.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>imap_p - i' inserttext='imap_thread(|)' hint='(PHP 4>=4.0.7, PHP 5) array imap_thread(resource $imap_stream [, int $options=SE_FREE]) - Returns a tree of threaded message.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>imap_p - i' inserttext='imap_timeout(|)' hint='(PHP 4>=4.3.3, PHP 5) mixed imap_timeout(int $timeout_type [, int $timeout=-1]) - Set or fetch imap timeout.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>imap_p - i' inserttext='imap_uid(|)' hint='(PHP 4, PHP 5) int imap_uid(resource $imap_stream, int $msg_number) - This function returns the UID for the given message sequence number.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>imap_p - i' inserttext='imap_undelete(|)' hint='(PHP 4, PHP 5) bool imap_undelete(resource $imap_stream, int $msg_number [, int $flags=0]) - Unmark the message which is marked deleted.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>imap_p - i' inserttext='imap_unsubscribe(|)' hint='(PHP 4, PHP 5) bool imap_unsubscribe(resource $imap_stream, string $mailbox) - Unsubscribe from a mailbox.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>imap_p - i' inserttext='imap_utf7_decode(|)' hint='(PHP 4, PHP 5) string imap_utf7_decode(string $text) - Decodes a modified UTF-7 encoded string.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>imap_p - i' inserttext='imap_utf7_encode(|)' hint='(PHP 4, PHP 5) string imap_utf7_encode(string $data) - Converts ISO-8859-1 string to modified UTF-7 text.' flags='130'/>
<tag menu='I' submenu='IMAP, POP3 and NNTP-->>imap_p - i' inserttext='imap_utf8(|)' hint='(PHP 4, PHP 5) string imap_utf8(string $mime_encoded_text) - Converts MIME-encoded text to UTF-8.' flags='130'/>
<tag menu='I' submenu='InfiniteIterator class' inserttext='InfiniteIterator::__construct(|)' hint='(PHP 5>=5.1.0) InfiniteIterator::__construct(Iterator $iterator) - Constructs an InfiniteIterator.' flags='130'/>
<tag menu='I' submenu='InfiniteIterator class' inserttext='InfiniteIterator::next()' hint='(PHP 5>=5.1.0) public void InfiniteIterator::next(void) - Moves the inner Iterator forward or rewinds it.' flags='130'/>
<tag menu='I' submenu='Informix-->>i - ifx_get_' inserttext='ifx_affected_rows(|)' hint='(PHP 4, PHP &lt;=5.2.0) int ifx_affected_rows(resource $result_id) - Get number of rows affected by a query.' flags='130'/>
<tag menu='I' submenu='Informix-->>i - ifx_get_' inserttext='ifx_blobinfile_mode(|)' hint='(PHP 4, PHP &lt;=5.2.0) bool ifx_blobinfile_mode(int $mode) - Set the default blob mode for all select queries.' flags='130'/>
<tag menu='I' submenu='Informix-->>i - ifx_get_' inserttext='ifx_byteasvarchar(|)' hint='(PHP 4, PHP &lt;=5.2.0) bool ifx_byteasvarchar(int $mode) - Set the default byte mode.' flags='130'/>
<tag menu='I' submenu='Informix-->>i - ifx_get_' inserttext='ifx_close(|)' hint='(PHP 4, PHP &lt;=5.2.0) bool ifx_close([resource $link_identifier]) - Close Informix connection.' flags='130'/>
<tag menu='I' submenu='Informix-->>i - ifx_get_' inserttext='ifx_connect(|)' hint='(PHP 4, PHP &lt;=5.2.0) resource ifx_connect([string $database [, string $userid [, string $password ]]]) - Open Informix server connection.' flags='130'/>
<tag menu='I' submenu='Informix-->>i - ifx_get_' inserttext='ifx_copy_blob(|)' hint='(PHP 4, PHP &lt;=5.2.0) int ifx_copy_blob(int $bid) - Duplicates the given blob object.' flags='130'/>
<tag menu='I' submenu='Informix-->>i - ifx_get_' inserttext='ifx_create_blob(|)' hint='(PHP 4, PHP &lt;=5.2.0) int ifx_create_blob(int $type, int $mode, string $param) - Creates an blob object.' flags='130'/>
<tag menu='I' submenu='Informix-->>i - ifx_get_' inserttext='ifx_create_char(|)' hint='(PHP 4, PHP &lt;=5.2.0) int ifx_create_char(string $param) - Creates an char object.' flags='130'/>
<tag menu='I' submenu='Informix-->>i - ifx_get_' inserttext='ifx_do(|)' hint='(PHP 4, PHP &lt;=5.2.0) bool ifx_do(resource $result_id) - Execute a previously prepared SQL-statement.' flags='130'/>
<tag menu='I' submenu='Informix-->>i - ifx_get_' inserttext='ifx_error(|)' hint='(PHP 4, PHP &lt;=5.2.0) string ifx_error([resource $link_identifier]) - Returns error code of last Informix call.' flags='130'/>
<tag menu='I' submenu='Informix-->>i - ifx_get_' inserttext='ifx_errormsg(|)' hint='(PHP 4, PHP &lt;=5.2.0) string ifx_errormsg([int $errorcode]) - Returns error message of last Informix call.' flags='130'/>
<tag menu='I' submenu='Informix-->>i - ifx_get_' inserttext='ifx_fetch_row(|)' hint='(PHP 4, PHP &lt;=5.2.0) array ifx_fetch_row(resource $result_id [, mixed $position]) - Get row as an associative array.' flags='130'/>
<tag menu='I' submenu='Informix-->>i - ifx_get_' inserttext='ifx_fieldproperties(|)' hint='(PHP 4, PHP &lt;=5.2.0) array ifx_fieldproperties(resource $result_id) - List of SQL fieldproperties.' flags='130'/>
<tag menu='I' submenu='Informix-->>i - ifx_get_' inserttext='ifx_fieldtypes(|)' hint='(PHP 4, PHP &lt;=5.2.0) array ifx_fieldtypes(resource $result_id) - List of Informix SQL fields.' flags='130'/>
<tag menu='I' submenu='Informix-->>i - ifx_get_' inserttext='ifx_free_blob(|)' hint='(PHP 4, PHP &lt;=5.2.0) bool ifx_free_blob(int $bid) - Deletes the blob object.' flags='130'/>
<tag menu='I' submenu='Informix-->>i - ifx_get_' inserttext='ifx_free_char(|)' hint='(PHP 4, PHP &lt;=5.2.0) bool ifx_free_char(int $bid) - Deletes the char object.' flags='130'/>
<tag menu='I' submenu='Informix-->>i - ifx_get_' inserttext='ifx_free_result(|)' hint='(PHP 4, PHP &lt;=5.2.0) bool ifx_free_result(resource $result_id) - Releases resources for the query.' flags='130'/>
<tag menu='I' submenu='Informix-->>i - ifx_get_' inserttext='ifx_get_blob(|)' hint='(PHP 4, PHP &lt;=5.2.0) string ifx_get_blob(int $bid) - Return the content of a blob object.' flags='130'/>
<tag menu='I' submenu='Informix-->>i - ifx_get_' inserttext='ifx_get_char(|)' hint='(PHP 4, PHP &lt;=5.2.0) string ifx_get_char(int $bid) - Return the content of the char object.' flags='130'/>
<tag menu='I' submenu='Informix-->>ifx_gets - i' inserttext='ifx_getsqlca(|)' hint='(PHP 4, PHP &lt;=5.2.0) array ifx_getsqlca(resource $result_id) - Get the contents of sqlca.sqlerrd[0..5] after a query.' flags='130'/>
<tag menu='I' submenu='Informix-->>ifx_gets - i' inserttext='ifx_htmltbl_result(|)' hint='(PHP 4, PHP &lt;=5.2.0) int ifx_htmltbl_result(resource $result_id [, string $html_table_options]) - Formats all rows of a query into a HTML table.' flags='130'/>
<tag menu='I' submenu='Informix-->>ifx_gets - i' inserttext='ifx_nullformat(|)' hint='(PHP 4, PHP &lt;=5.2.0) bool ifx_nullformat(int $mode) - Sets the default return value on a fetch row.' flags='130'/>
<tag menu='I' submenu='Informix-->>ifx_gets - i' inserttext='ifx_num_fields(|)' hint='(PHP 4, PHP &lt;=5.2.0) int ifx_num_fields(resource $result_id) - Returns the number of columns in the query.' flags='130'/>
<tag menu='I' submenu='Informix-->>ifx_gets - i' inserttext='ifx_num_rows(|)' hint='(PHP 4, PHP &lt;=5.2.0) int ifx_num_rows(resource $result_id) - Count the rows already fetched from a query.' flags='130'/>
<tag menu='I' submenu='Informix-->>ifx_gets - i' inserttext='ifx_pconnect(|)' hint='(PHP 4, PHP &lt;=5.2.0) resource ifx_pconnect([string $database [, string $userid [, string $password ]]]) - Open persistent Informix connection.' flags='130'/>
<tag menu='I' submenu='Informix-->>ifx_gets - i' inserttext='ifx_prepare(|)' hint='(PHP 4, PHP &lt;=5.2.0) resource ifx_prepare(string $query, resource $link_identifier [, int $cursor_def ], mixed $blobidarray) - Prepare an SQL-statement for execution.' flags='130'/>
<tag menu='I' submenu='Informix-->>ifx_gets - i' inserttext='ifx_query(|)' hint='(PHP 4, PHP &lt;=5.2.0) resource ifx_query(string $query, resource $link_identifier [, int $cursor_type [, mixed $blobidarray ]]) - Send Informix query.' flags='130'/>
<tag menu='I' submenu='Informix-->>ifx_gets - i' inserttext='ifx_textasvarchar(|)' hint='(PHP 4, PHP &lt;=5.2.0) bool ifx_textasvarchar(int $mode) - Set the default text mode.' flags='130'/>
<tag menu='I' submenu='Informix-->>ifx_gets - i' inserttext='ifx_update_blob(|)' hint='(PHP 4, PHP &lt;=5.2.0) bool ifx_update_blob(int $bid, string $content) - Updates the content of the blob object.' flags='130'/>
<tag menu='I' submenu='Informix-->>ifx_gets - i' inserttext='ifx_update_char(|)' hint='(PHP 4, PHP &lt;=5.2.0) bool ifx_update_char(int $bid, string $content) - Updates the content of the char object.' flags='130'/>
<tag menu='I' submenu='Informix-->>ifx_gets - i' inserttext='ifxus_close_slob(|)' hint='(PHP 4, PHP &lt;=5.2.0) bool ifxus_close_slob(int $bid) - Deletes the slob object.' flags='130'/>
<tag menu='I' submenu='Informix-->>ifx_gets - i' inserttext='ifxus_create_slob(|)' hint='(PHP 4, PHP &lt;=5.2.0) int ifxus_create_slob(int $mode) - Creates an slob object and opens it.' flags='130'/>
<tag menu='I' submenu='Informix-->>ifx_gets - i' inserttext='ifxus_free_slob(|)' hint='(PHP 4, PHP &lt;=5.2.0) bool ifxus_free_slob(int $bid) - Deletes the slob object.' flags='130'/>
<tag menu='I' submenu='Informix-->>ifx_gets - i' inserttext='ifxus_open_slob(|)' hint='(PHP 4, PHP &lt;=5.2.0) int ifxus_open_slob(int $bid, int $mode) - Opens an slob object.' flags='130'/>
<tag menu='I' submenu='Informix-->>ifx_gets - i' inserttext='ifxus_read_slob(|)' hint='(PHP 4, PHP &lt;=5.2.0) string ifxus_read_slob(int $bid, int $nbytes) - Reads nbytes of the slob object.' flags='130'/>
<tag menu='I' submenu='Informix-->>ifx_gets - i' inserttext='ifxus_seek_slob(|)' hint='(PHP 4, PHP &lt;=5.2.0) int ifxus_seek_slob(int $bid, int $mode, int $offset) - Sets the current file or seek position.' flags='130'/>
<tag menu='I' submenu='Informix-->>ifx_gets - i' inserttext='ifxus_tell_slob(|)' hint='(PHP 4, PHP &lt;=5.2.0) int ifxus_tell_slob(int $bid) - Returns the current file or seek position.' flags='130'/>
<tag menu='I' submenu='Informix-->>ifx_gets - i' inserttext='ifxus_write_slob(|)' hint='(PHP 4, PHP &lt;=5.2.0) int ifxus_write_slob(int $bid, string $content) - Writes a string into the slob object.' flags='130'/>
<tag menu='I' submenu='Ingres DBMS, EDBC, and Enterprise Access Gateways' inserttext='ingres_autocommit(|)' hint='(PHP 4>=4.0.2, PHP 5&lt;=5.0.5, PECL ingres>=1.0.0) bool ingres_autocommit(resource $link) - Switch autocommit on or off.' flags='130'/>
<tag menu='I' submenu='Ingres DBMS, EDBC, and Enterprise Access Gateways' inserttext='ingres_close(|)' hint='(PHP 4>=4.0.2, PHP 5&lt;=5.0.5, PECL ingres>=1.0.0) bool ingres_close(resource $link) - Close an Ingres database connection.' flags='130'/>
<tag menu='I' submenu='Ingres DBMS, EDBC, and Enterprise Access Gateways' inserttext='ingres_commit(|)' hint='(PHP 4>=4.0.2, PHP 5&lt;=5.0.5, PECL ingres>=1.0.0) bool ingres_commit(resource $link) - Commit a transaction.' flags='130'/>
<tag menu='I' submenu='Ingres DBMS, EDBC, and Enterprise Access Gateways' inserttext='ingres_connect(|)' hint='(PHP 4>=4.0.2, PHP 5&lt;=5.0.5, PECL ingres>=1.0.0) resource ingres_connect([string $database [, string $username [, string $password [, array $options ]]]]) - Open a connection to an Ingres database.' flags='130'/>
<tag menu='I' submenu='Ingres DBMS, EDBC, and Enterprise Access Gateways' inserttext='ingres_fetch_array(|)' hint='( PHP 5&lt;=5.0.5, PECL ingres>=1.0.0) array ingres_fetch_array(resource $result [, int $result_type]) - Fetch a row of result into an array.' flags='130'/>
<tag menu='I' submenu='Ingres DBMS, EDBC, and Enterprise Access Gateways' inserttext='ingres_fetch_object(|)' hint='(PHP 4>=4.0.2, PHP 5&lt;=5.0.5, PECL ingres>=1.0.0) object ingres_fetch_object(resource $result [, int $result_type]) - Fetch a row of result into an object.' flags='130'/>
<tag menu='I' submenu='Ingres DBMS, EDBC, and Enterprise Access Gateways' inserttext='ingres_fetch_row(|)' hint='(PHP 4>=4.0.2, PHP 5&lt;=5.0.5, PECL ingres>=1.0.0) array ingres_fetch_row(resource $result) - Fetch a row of result into an enumerated array.' flags='130'/>
<tag menu='I' submenu='Ingres DBMS, EDBC, and Enterprise Access Gateways' inserttext='ingres_field_length(|)' hint='(PHP 4>=4.0.2, PHP 5&lt;=5.0.5, PECL ingres>=1.0.0) int ingres_field_length(resource $result, int $index) - Get the length of a field.' flags='130'/>
<tag menu='I' submenu='Ingres DBMS, EDBC, and Enterprise Access Gateways' inserttext='ingres_field_name(|)' hint='(PHP 4>=4.0.2, PHP 5&lt;=5.0.5, PECL ingres>=1.0.0) string ingres_field_name(resource $result, int $index) - Get the name of a field in a query result.' flags='130'/>
<tag menu='I' submenu='Ingres DBMS, EDBC, and Enterprise Access Gateways' inserttext='ingres_field_nullable(|)' hint='(PHP 4>=4.0.2, PHP 5&lt;=5.0.5, PECL ingres>=1.0.0) bool ingres_field_nullable(resource $result, int $index) - Test if a field is nullable.' flags='130'/>
<tag menu='I' submenu='Ingres DBMS, EDBC, and Enterprise Access Gateways' inserttext='ingres_field_precision(|)' hint='(PHP 4>=4.0.2, PHP 5&lt;=5.0.5, PECL ingres>=1.0.0) int ingres_field_precision(resource $result, int $index) - Get the precision of a field.' flags='130'/>
<tag menu='I' submenu='Ingres DBMS, EDBC, and Enterprise Access Gateways' inserttext='ingres_field_scale(|)' hint='(PHP 4>=4.0.2, PHP 5&lt;=5.0.5, PECL ingres>=1.0.0) int ingres_field_scale(resource $result, int $index) - Get the scale of a field.' flags='130'/>
<tag menu='I' submenu='Ingres DBMS, EDBC, and Enterprise Access Gateways' inserttext='ingres_field_type(|)' hint='(PHP 4>=4.0.2, PHP 5&lt;=5.0.5, PECL ingres>=1.0.0) string ingres_field_type(resource $result, int $index) - Get the type of a field in a query result.' flags='130'/>
<tag menu='I' submenu='Ingres DBMS, EDBC, and Enterprise Access Gateways' inserttext='ingres_num_fields(|)' hint='(PHP 4>=4.0.2, PHP 5&lt;=5.0.5, PECL ingres>=1.0.0) int ingres_num_fields(resource $result) - Get the number of fields returned by the last query.' flags='130'/>
<tag menu='I' submenu='Ingres DBMS, EDBC, and Enterprise Access Gateways' inserttext='ingres_num_rows(|)' hint='(PHP 4>=4.0.2, PHP 5&lt;=5.0.5, PECL ingres>=1.0.0) int ingres_num_rows(resource $result) - Get the number of rows affected or returned by a query.' flags='130'/>
<tag menu='I' submenu='Ingres DBMS, EDBC, and Enterprise Access Gateways' inserttext='ingres_pconnect(|)' hint='(PHP 4>=4.0.2, PHP 5&lt;=5.0.5, PECL ingres>=1.0.0) resource ingres_pconnect([string $database [, string $username [, string $password [, array $options ]]]]) - Open a persistent connection to an Ingres database.' flags='130'/>
<tag menu='I' submenu='Ingres DBMS, EDBC, and Enterprise Access Gateways' inserttext='ingres_query(|)' hint='(PHP 4>=4.0.2, PHP 5&lt;=5.0.5, PECL ingres>=1.0.0) mixed ingres_query(resource $link, string $query [, array $params [, string $types ]]) - Send an SQL query to Ingres.' flags='130'/>
<tag menu='I' submenu='Ingres DBMS, EDBC, and Enterprise Access Gateways' inserttext='ingres_rollback(|)' hint='(PHP 4>=4.0.2, PHP 5&lt;=5.0.5, PECL ingres>=1.0.0) bool ingres_rollback(resource $link) - Roll back a transaction.' flags='130'/>
<tag menu='I' submenu='IntlDateFormatter class' inserttext='IntlDateFormatter::create(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) static IntlDateFormatter IntlDateFormatter::create(string $locale, int $datetype, int $timetype [, string $timezone [, int $calendar [, string $pattern ]]]) - Create a date formatter.' flags='130'/>
<tag menu='I' submenu='IntlDateFormatter class' inserttext='IntlDateFormatter::format(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) string IntlDateFormatter::format(mixed $value) - Format the date/time value as a string.' flags='130'/>
<tag menu='I' submenu='IntlDateFormatter class' inserttext='IntlDateFormatter::getCalendar()' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) int IntlDateFormatter::getCalendar(void) - Get the calendar used for the IntlDateFormatter.' flags='130'/>
<tag menu='I' submenu='IntlDateFormatter class' inserttext='IntlDateFormatter::getDateType()' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) int IntlDateFormatter::getDateType(void) - Get the datetype used for the IntlDateFormatter.' flags='130'/>
<tag menu='I' submenu='IntlDateFormatter class' inserttext='IntlDateFormatter::getErrorCode()' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) int IntlDateFormatter::getErrorCode(void) - Get the error code from last operation.' flags='130'/>
<tag menu='I' submenu='IntlDateFormatter class' inserttext='IntlDateFormatter::getErrorMessage()' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) string IntlDateFormatter::getErrorMessage(void) - Get the error text from the last operation.' flags='130'/>
<tag menu='I' submenu='IntlDateFormatter class' inserttext='IntlDateFormatter::getLocale(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) string IntlDateFormatter::getLocale([int $which]) - Get the locale used by formatter.' flags='130'/>
<tag menu='I' submenu='IntlDateFormatter class' inserttext='IntlDateFormatter::getPattern()' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) string IntlDateFormatter::getPattern(void) - Get the pattern used for the IntlDateFormatter.' flags='130'/>
<tag menu='I' submenu='IntlDateFormatter class' inserttext='IntlDateFormatter::getTimeType()' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) int IntlDateFormatter::getTimeType(void) - Get the timetype used for the IntlDateFormatter.' flags='130'/>
<tag menu='I' submenu='IntlDateFormatter class' inserttext='IntlDateFormatter::getTimeZoneId()' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) string IntlDateFormatter::getTimeZoneId(void) - Get the timezone-id used for the IntlDateFormatter.' flags='130'/>
<tag menu='I' submenu='IntlDateFormatter class' inserttext='IntlDateFormatter::isLenient()' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) bool IntlDateFormatter::isLenient(void) - Get the lenient used for the IntlDateFormatter.' flags='130'/>
<tag menu='I' submenu='IntlDateFormatter class' inserttext='IntlDateFormatter::localtime(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) array IntlDateFormatter::localtime(string $value [, int &amp;$position]) - Parse string to a field-based time value.' flags='130'/>
<tag menu='I' submenu='IntlDateFormatter class' inserttext='IntlDateFormatter::parse(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) int IntlDateFormatter::parse(string $value [, int &amp;$position]) - Parse string to a timestamp value.' flags='130'/>
<tag menu='I' submenu='IntlDateFormatter class' inserttext='IntlDateFormatter::setCalendar(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) bool IntlDateFormatter::setCalendar(int $which) - sets the calendar used to the appropriate calendar, which must be.' flags='130'/>
<tag menu='I' submenu='IntlDateFormatter class' inserttext='IntlDateFormatter::setLenient(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) bool IntlDateFormatter::setLenient(bool $lenient) - Set the leniency of the parser.' flags='130'/>
<tag menu='I' submenu='IntlDateFormatter class' inserttext='IntlDateFormatter::setPattern(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) bool IntlDateFormatter::setPattern(string $pattern) - Set the pattern used for the IntlDateFormatter.' flags='130'/>
<tag menu='I' submenu='IntlDateFormatter class' inserttext='IntlDateFormatter::setTimeZoneId(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) bool IntlDateFormatter::setTimeZoneId(string $zone) - Sets the time zone to use.' flags='130'/>
<tag menu='I' submenu='Iterator interface' inserttext='Iterator::current()' hint='(PHP 5>=5.1.0) abstract public mixed Iterator::current(void) - Return the current element.' flags='130'/>
<tag menu='I' submenu='Iterator interface' inserttext='Iterator::key()' hint='(PHP 5>=5.1.0) abstract public scalar Iterator::key(void) - Return the key of the current element.' flags='130'/>
<tag menu='I' submenu='Iterator interface' inserttext='Iterator::next()' hint='(PHP 5>=5.1.0) abstract public void Iterator::next(void) - Move forward to next element.' flags='130'/>
<tag menu='I' submenu='Iterator interface' inserttext='Iterator::rewind()' hint='(PHP 5>=5.1.0) abstract public void Iterator::rewind(void) - Rewind the Iterator to the first element.' flags='130'/>
<tag menu='I' submenu='Iterator interface' inserttext='Iterator::valid()' hint='(PHP 5>=5.1.0) abstract public boolean Iterator::valid(void) - Checks if current position is valid.' flags='130'/>
<tag menu='I' submenu='IteratorAggregate interface' inserttext='IteratorAggregate::getIterator()' hint='(PHP 5>=5.1.0) abstract public Traversable IteratorAggregate::getIterator(void) - Retrieve an external iterator.' flags='130'/>
<tag menu='I' submenu='IteratorIterator class' inserttext='IteratorIterator::__construct(|)' hint='(PHP 5>=5.1.0) IteratorIterator::__construct(Traversable $iterator) - Create an iterator from anything that is traversable.' flags='130'/>
<tag menu='I' submenu='IteratorIterator class' inserttext='IteratorIterator::current()' hint='(PHP 5>=5.1.0) public void IteratorIterator::current(void) - Get the current value.' flags='130'/>
<tag menu='I' submenu='IteratorIterator class' inserttext='IteratorIterator::getInnerIterator()' hint='(PHP 5>=5.1.0) public void IteratorIterator::getInnerIterator(void) - Get the inner iterator.' flags='130'/>
<tag menu='I' submenu='IteratorIterator class' inserttext='IteratorIterator::key()' hint='(PHP 5>=5.1.0) public void IteratorIterator::key(void) - Get the key of the current element.' flags='130'/>
<tag menu='I' submenu='IteratorIterator class' inserttext='IteratorIterator::next()' hint='(PHP 5>=5.1.0) public void IteratorIterator::next(void) - Forward to the next element.' flags='130'/>
<tag menu='I' submenu='IteratorIterator class' inserttext='IteratorIterator::rewind()' hint='(PHP 5>=5.1.0) public void IteratorIterator::rewind(void) - Rewind to the first element.' flags='130'/>
<tag menu='I' submenu='IteratorIterator class' inserttext='IteratorIterator::valid()' hint='(PHP 5>=5.1.0) public bool IteratorIterator::valid(void) - Checks if the iterator is valid.' flags='130'/>
<tag menu='I' submenu='iconv' inserttext='iconv(|)' hint='(PHP 4>=4.0.5, PHP 5) string iconv(string $in_charset, string $out_charset, string $str) - Convert string to requested character encoding.' flags='130'/>
<tag menu='I' submenu='iconv' inserttext='iconv_get_encoding(|)' hint='(PHP 4>=4.0.5, PHP 5) mixed iconv_get_encoding([string $type="all"]) - Retrieve internal configuration variables of iconv extension.' flags='130'/>
<tag menu='I' submenu='iconv' inserttext='iconv_mime_decode(|)' hint='(PHP 5) string iconv_mime_decode(string $encoded_header [, int $mode=0 [, string $charset=ini_get("iconv.internal_encoding") ]]) - Decodes a MIME header field.' flags='130'/>
<tag menu='I' submenu='iconv' inserttext='iconv_mime_decode_headers(|)' hint='(PHP 5) array iconv_mime_decode_headers(string $encoded_headers [, int $mode=0 [, string $charset=ini_get("iconv.internal_encoding") ]]) - Decodes multiple MIME header fields at once.' flags='130'/>
<tag menu='I' submenu='iconv' inserttext='iconv_mime_encode(|)' hint='(PHP 5) string iconv_mime_encode(string $field_name, string $field_value [, array $preferences=NULL]) - Composes a MIME header field.' flags='130'/>
<tag menu='I' submenu='iconv' inserttext='iconv_set_encoding(|)' hint='(PHP 4>=4.0.5, PHP 5) bool iconv_set_encoding(string $type, string $charset) - Set current setting for character encoding conversion.' flags='130'/>
<tag menu='I' submenu='iconv' inserttext='iconv_strlen(|)' hint='(PHP 5) int iconv_strlen(string $str [, string $charset=ini_get("iconv.internal_encoding")]) - Returns the character count of string.' flags='130'/>
<tag menu='I' submenu='iconv' inserttext='iconv_strpos(|)' hint='(PHP 5) int iconv_strpos(string $haystack, string $needle [, int $offset=0 [, string $charset=ini_get("iconv.internal_encoding") ]]) - Finds position of first occurrence of a needle within a haystack.' flags='130'/>
<tag menu='I' submenu='iconv' inserttext='iconv_strrpos(|)' hint='(PHP 5) int iconv_strrpos(string $haystack, string $needle [, string $charset=ini_get("iconv.internal_encoding")]) - Finds the last occurrence of a needle within a haystack.' flags='130'/>
<tag menu='I' submenu='iconv' inserttext='iconv_substr(|)' hint='(PHP 5) string iconv_substr(string $str, int $offset [, int $length=strlen($str) [, string $charset=ini_get("iconv.internal_encoding") ]]) - Cut out part of a string.' flags='130'/>
<tag menu='I' submenu='iconv' inserttext='ob_iconv_handler(|)' hint='(PHP 4>=4.0.5, PHP 5) string ob_iconv_handler(string $contents, int $status) - Convert character encoding as output buffer handler.' flags='130'/>
<tag menu='I' submenu='intl' inserttext='intl_error_name(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) string intl_error_name(int $error_code) - Get symbolic name for a given error code.' flags='130'/>
<tag menu='I' submenu='intl' inserttext='intl_get_error_code()' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) int intl_get_error_code(void) - Get the last error code.' flags='130'/>
<tag menu='I' submenu='intl' inserttext='intl_get_error_message()' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) string intl_get_error_message(void) - Get description of the last error.' flags='130'/>
<tag menu='I' submenu='intl' inserttext='intl_is_failure(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) bool intl_is_failure(int $error_code) - Check whether the given error code indicates failure.' flags='130'/>
<tag menu='J' submenu='JSON' inserttext='json_decode(|)' hint='(PHP 5>=5.2.0, PECL json>=1.2.0) mixed json_decode(string $json [, bool $assoc=false [, int $depth=512 [, int $options=0 ]]]) - Decodes a JSON string.' flags='130'/>
<tag menu='J' submenu='JSON' inserttext='json_encode(|)' hint='(PHP 5>=5.2.0, PECL json>=1.2.0) string json_encode(mixed $value [, int $options=0]) - Returns the JSON representation of a value.' flags='130'/>
<tag menu='J' submenu='JSON' inserttext='json_last_error()' hint='(PHP 5>=5.3.0) int json_last_error(void) - Returns the last error occurred.' flags='130'/>
<tag menu='J' submenu='Java' inserttext='java_last_exception_clear()' hint='(PHP 4>=4.0.2) void java_last_exception_clear(void) - Clear last Java exception.' flags='130'/>
<tag menu='J' submenu='Java' inserttext='java_last_exception_get()' hint='(PHP 4>=4.0.2) object java_last_exception_get(void) - Get last Java exception.' flags='130'/>
<tag menu='L' submenu='LDAP-->>l - ldap_get_o' inserttext='ldap_8859_to_t61(|)' hint='(PHP 4>=4.0.2, PHP 5) string ldap_8859_to_t61(string $value) - Translate 8859 characters to t61 characters.' flags='130'/>
<tag menu='L' submenu='LDAP-->>l - ldap_get_o' inserttext='ldap_add(|)' hint='(PHP 4, PHP 5) bool ldap_add(resource $link_identifier, string $dn, array $entry) - Add entries to LDAP directory.' flags='130'/>
<tag menu='L' submenu='LDAP-->>l - ldap_get_o' inserttext='ldap_bind(|)' hint='(PHP 4, PHP 5) bool ldap_bind(resource $link_identifier [, string $bind_rdn=NULL [, string $bind_password=NULL ]]) - Bind to LDAP directory.' flags='130'/>
<tag menu='L' submenu='LDAP-->>l - ldap_get_o' inserttext='ldap_close(|)' hint='(PHP 4, PHP 5) Alias of ldap_unbind().' flags='130'/>
<tag menu='L' submenu='LDAP-->>l - ldap_get_o' inserttext='ldap_compare(|)' hint='(PHP 4>=4.0.2, PHP 5) mixed ldap_compare(resource $link_identifier, string $dn, string $attribute, string $value) - Compare value of attribute found in entry specified with DN.' flags='130'/>
<tag menu='L' submenu='LDAP-->>l - ldap_get_o' inserttext='ldap_connect(|)' hint='(PHP 4, PHP 5) resource ldap_connect([string $hostname=NULL [, int $port=389 ]]) - Connect to an LDAP server.' flags='130'/>
<tag menu='L' submenu='LDAP-->>l - ldap_get_o' inserttext='ldap_count_entries(|)' hint='(PHP 4, PHP 5) int ldap_count_entries(resource $link_identifier, resource $result_identifier) - Count the number of entries in a search.' flags='130'/>
<tag menu='L' submenu='LDAP-->>l - ldap_get_o' inserttext='ldap_delete(|)' hint='(PHP 4, PHP 5) bool ldap_delete(resource $link_identifier, string $dn) - Delete an entry from a directory.' flags='130'/>
<tag menu='L' submenu='LDAP-->>l - ldap_get_o' inserttext='ldap_dn2ufn(|)' hint='(PHP 4, PHP 5) string ldap_dn2ufn(string $dn) - Convert DN to User Friendly Naming format.' flags='130'/>
<tag menu='L' submenu='LDAP-->>l - ldap_get_o' inserttext='ldap_err2str(|)' hint='(PHP 4, PHP 5) string ldap_err2str(int $errno) - Convert LDAP error number into string error message.' flags='130'/>
<tag menu='L' submenu='LDAP-->>l - ldap_get_o' inserttext='ldap_errno(|)' hint='(PHP 4, PHP 5) int ldap_errno(resource $link_identifier) - Return the LDAP error number of the last LDAP command.' flags='130'/>
<tag menu='L' submenu='LDAP-->>l - ldap_get_o' inserttext='ldap_error(|)' hint='(PHP 4, PHP 5) string ldap_error(resource $link_identifier) - Return the LDAP error message of the last LDAP command.' flags='130'/>
<tag menu='L' submenu='LDAP-->>l - ldap_get_o' inserttext='ldap_explode_dn(|)' hint='(PHP 4, PHP 5) array ldap_explode_dn(string $dn, int $with_attrib) - Splits DN into its component parts.' flags='130'/>
<tag menu='L' submenu='LDAP-->>l - ldap_get_o' inserttext='ldap_first_attribute(|)' hint='(PHP 4, PHP 5) string ldap_first_attribute(resource $link_identifier, resource $result_entry_identifier) - Return first attribute.' flags='130'/>
<tag menu='L' submenu='LDAP-->>l - ldap_get_o' inserttext='ldap_first_entry(|)' hint='(PHP 4, PHP 5) resource ldap_first_entry(resource $link_identifier, resource $result_identifier) - Return first result id.' flags='130'/>
<tag menu='L' submenu='LDAP-->>l - ldap_get_o' inserttext='ldap_first_reference(|)' hint='(PHP 4>=4.0.5, PHP 5) resource ldap_first_reference(resource $link, resource $result) - Return first reference.' flags='130'/>
<tag menu='L' submenu='LDAP-->>l - ldap_get_o' inserttext='ldap_free_result(|)' hint='(PHP 4, PHP 5) bool ldap_free_result(resource $result_identifier) - Free result memory.' flags='130'/>
<tag menu='L' submenu='LDAP-->>l - ldap_get_o' inserttext='ldap_get_attributes(|)' hint='(PHP 4, PHP 5) array ldap_get_attributes(resource $link_identifier, resource $result_entry_identifier) - Get attributes from a search result entry.' flags='130'/>
<tag menu='L' submenu='LDAP-->>l - ldap_get_o' inserttext='ldap_get_dn(|)' hint='(PHP 4, PHP 5) string ldap_get_dn(resource $link_identifier, resource $result_entry_identifier) - Get the DN of a result entry.' flags='130'/>
<tag menu='L' submenu='LDAP-->>l - ldap_get_o' inserttext='ldap_get_entries(|)' hint='(PHP 4, PHP 5) array ldap_get_entries(resource $link_identifier, resource $result_identifier) - Get all result entries.' flags='130'/>
<tag menu='L' submenu='LDAP-->>l - ldap_get_o' inserttext='ldap_get_option(|)' hint='(PHP 4>=4.0.4, PHP 5) bool ldap_get_option(resource $link_identifier, int $option, mixed &amp;$retval) - Get the current value for given option.' flags='130'/>
<tag menu='L' submenu='LDAP-->>ldap_get_v - l' inserttext='ldap_get_values(|)' hint='(PHP 4, PHP 5) array ldap_get_values(resource $link_identifier, resource $result_entry_identifier, string $attribute) - Get all values from a result entry.' flags='130'/>
<tag menu='L' submenu='LDAP-->>ldap_get_v - l' inserttext='ldap_get_values_len(|)' hint='(PHP 4, PHP 5) array ldap_get_values_len(resource $link_identifier, resource $result_entry_identifier, string $attribute) - Get all binary values from a result entry.' flags='130'/>
<tag menu='L' submenu='LDAP-->>ldap_get_v - l' inserttext='ldap_list(|)' hint='(PHP 4, PHP 5) resource ldap_list(resource $link_identifier, string $base_dn, string $filter [, array $attributes [, int $attrsonly [, int $sizelimit [, int $timelimit [, int $deref ]]]]]) - Single-level search.' flags='130'/>
<tag menu='L' submenu='LDAP-->>ldap_get_v - l' inserttext='ldap_mod_add(|)' hint='(PHP 4, PHP 5) bool ldap_mod_add(resource $link_identifier, string $dn, array $entry) - Add attribute values to current attributes.' flags='130'/>
<tag menu='L' submenu='LDAP-->>ldap_get_v - l' inserttext='ldap_mod_del(|)' hint='(PHP 4, PHP 5) bool ldap_mod_del(resource $link_identifier, string $dn, array $entry) - Delete attribute values from current attributes.' flags='130'/>
<tag menu='L' submenu='LDAP-->>ldap_get_v - l' inserttext='ldap_mod_replace(|)' hint='(PHP 4, PHP 5) bool ldap_mod_replace(resource $link_identifier, string $dn, array $entry) - Replace attribute values with new ones.' flags='130'/>
<tag menu='L' submenu='LDAP-->>ldap_get_v - l' inserttext='ldap_modify(|)' hint='(PHP 4, PHP 5) bool ldap_modify(resource $link_identifier, string $dn, array $entry) - Modify an LDAP entry.' flags='130'/>
<tag menu='L' submenu='LDAP-->>ldap_get_v - l' inserttext='ldap_next_attribute(|)' hint='(PHP 4, PHP 5) string ldap_next_attribute(resource $link_identifier, resource $result_entry_identifier) - Get the next attribute in result.' flags='130'/>
<tag menu='L' submenu='LDAP-->>ldap_get_v - l' inserttext='ldap_next_entry(|)' hint='(PHP 4, PHP 5) resource ldap_next_entry(resource $link_identifier, resource $result_entry_identifier) - Get next result entry.' flags='130'/>
<tag menu='L' submenu='LDAP-->>ldap_get_v - l' inserttext='ldap_next_reference(|)' hint='(PHP 4>=4.0.5, PHP 5) resource ldap_next_reference(resource $link, resource $entry) - Get next reference.' flags='130'/>
<tag menu='L' submenu='LDAP-->>ldap_get_v - l' inserttext='ldap_parse_reference(|)' hint='(PHP 4>=4.0.5, PHP 5) bool ldap_parse_reference(resource $link, resource $entry, array &amp;$referrals) - Extract information from reference entry.' flags='130'/>
<tag menu='L' submenu='LDAP-->>ldap_get_v - l' inserttext='ldap_parse_result(|)' hint='(PHP 4>=4.0.5, PHP 5) bool ldap_parse_result(resource $link, resource $result, int &amp;$errcode [, string &amp;$matcheddn [, string &amp;$errmsg [, array &amp;$referrals ]]]) - Extract information from result.' flags='130'/>
<tag menu='L' submenu='LDAP-->>ldap_get_v - l' inserttext='ldap_read(|)' hint='(PHP 4, PHP 5) resource ldap_read(resource $link_identifier, string $base_dn, string $filter [, array $attributes [, int $attrsonly [, int $sizelimit [, int $timelimit [, int $deref ]]]]]) - Read an entry.' flags='130'/>
<tag menu='L' submenu='LDAP-->>ldap_get_v - l' inserttext='ldap_rename(|)' hint='(PHP 4>=4.0.5, PHP 5) bool ldap_rename(resource $link_identifier, string $dn, string $newrdn, string $newparent, bool $deleteoldrdn) - Modify the name of an entry.' flags='130'/>
<tag menu='L' submenu='LDAP-->>ldap_get_v - l' inserttext='ldap_sasl_bind(|)' hint='(PHP 5) bool ldap_sasl_bind(resource $link [, string $binddn=NULL [, string $password=NULL [, string $sasl_mech=NULL [, string $sasl_realm=NULL [, string $sasl_authc_id=NULL [, string $sasl_authz_id=NULL [, string $props=NULL ]]]]]]]) - Bind to LDAP directory using SASL.' flags='130'/>
<tag menu='L' submenu='LDAP-->>ldap_get_v - l' inserttext='ldap_search(|)' hint='(PHP 4, PHP 5) resource ldap_search(resource $link_identifier, string $base_dn, string $filter [, array $attributes [, int $attrsonly [, int $sizelimit [, int $timelimit [, int $deref ]]]]]) - Search LDAP tree.' flags='130'/>
<tag menu='L' submenu='LDAP-->>ldap_get_v - l' inserttext='ldap_set_option(|)' hint='(PHP 4>=4.0.4, PHP 5) bool ldap_set_option(resource $link_identifier, int $option, mixed $newval) - Set the value of the given option.' flags='130'/>
<tag menu='L' submenu='LDAP-->>ldap_get_v - l' inserttext='ldap_set_rebind_proc(|)' hint='(PHP 4>=4.2.0, PHP 5) bool ldap_set_rebind_proc(resource $link, callback $callback) - Set a callback function to do re-binds on referral chasing.' flags='130'/>
<tag menu='L' submenu='LDAP-->>ldap_get_v - l' inserttext='ldap_sort(|)' hint='(PHP 4>=4.2.0, PHP 5) bool ldap_sort(resource $link, resource $result, string $sortfilter) - Sort LDAP result entries.' flags='130'/>
<tag menu='L' submenu='LDAP-->>ldap_get_v - l' inserttext='ldap_start_tls(|)' hint='(PHP 4>=4.2.0, PHP 5) bool ldap_start_tls(resource $link) - Start TLS.' flags='130'/>
<tag menu='L' submenu='LDAP-->>ldap_get_v - l' inserttext='ldap_t61_to_8859(|)' hint='(PHP 4>=4.0.2, PHP 5) string ldap_t61_to_8859(string $value) - Translate t61 characters to 8859 characters.' flags='130'/>
<tag menu='L' submenu='LDAP-->>ldap_get_v - l' inserttext='ldap_unbind(|)' hint='(PHP 4, PHP 5) bool ldap_unbind(resource $link_identifier) - Unbind from LDAP directory.' flags='130'/>
<tag menu='L' submenu='LimitIterator class' inserttext='LimitIterator::__construct(|)' hint='(PHP 5>=5.1.0) LimitIterator::__construct(Iterator $iterator [, int $offset=0 [, int $count=-1 ]]) - Construct a LimitIterator.' flags='130'/>
<tag menu='L' submenu='LimitIterator class' inserttext='LimitIterator::current()' hint='(PHP 5>=5.1.0) public mixed LimitIterator::current(void) - Get current element.' flags='130'/>
<tag menu='L' submenu='LimitIterator class' inserttext='LimitIterator::getInnerIterator()' hint='(PHP 5>=5.1.0) public Iterator LimitIterator::getInnerIterator(void) - Get inner iterator.' flags='130'/>
<tag menu='L' submenu='LimitIterator class' inserttext='LimitIterator::getPosition()' hint='(PHP 5>=5.1.0) public int LimitIterator::getPosition(void) - Return the current position.' flags='130'/>
<tag menu='L' submenu='LimitIterator class' inserttext='LimitIterator::key()' hint='(PHP 5>=5.1.0) public mixed LimitIterator::key(void) - Get current key.' flags='130'/>
<tag menu='L' submenu='LimitIterator class' inserttext='LimitIterator::next()' hint='(PHP 5>=5.1.0) public void LimitIterator::next(void) - Move the iterator forward.' flags='130'/>
<tag menu='L' submenu='LimitIterator class' inserttext='LimitIterator::rewind()' hint='(PHP 5>=5.1.0) public void LimitIterator::rewind(void) - Rewind the iterator to the specified starting offset.' flags='130'/>
<tag menu='L' submenu='LimitIterator class' inserttext='LimitIterator::seek(|)' hint='(PHP 5>=5.1.0) public int LimitIterator::seek(int $position) - Seek to the given position.' flags='130'/>
<tag menu='L' submenu='LimitIterator class' inserttext='LimitIterator::valid()' hint='(PHP 5>=5.1.0) public bool LimitIterator::valid(void) - Check whether the current element is valid.' flags='130'/>
<tag menu='L' submenu='Locale class' inserttext='Locale::acceptFromHttp(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) static string Locale::acceptFromHttp(string $header) - Tries to find out best available locale based on HTTP "Accept-Language" header.' flags='130'/>
<tag menu='L' submenu='Locale class' inserttext='Locale::composeLocale(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) static string Locale::composeLocale(array $subtags) - Returns a correctly ordered and delimited locale ID.' flags='130'/>
<tag menu='L' submenu='Locale class' inserttext='Locale::filterMatches(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) static bool Locale::filterMatches(string $langtag, string $locale [, bool $canonicalize=false]) - Checks if a language tag filter matches with locale.' flags='130'/>
<tag menu='L' submenu='Locale class' inserttext='Locale::getAllVariants(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) static array Locale::getAllVariants(string $locale) - Gets the variants for the input locale.' flags='130'/>
<tag menu='L' submenu='Locale class' inserttext='Locale::getDefault()' hint="(PHP 5>=5.3.0, PECL intl>=1.0.0) static string Locale::getDefault(void) - Gets the default locale value from the INTL global 'default_locale'." flags='130'/>
<tag menu='L' submenu='Locale class' inserttext='Locale::getDisplayLanguage(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) static string Locale::getDisplayLanguage(string $locale [, string $in_locale]) - Returns an appropriately localized display name for language of the inputlocale.' flags='130'/>
<tag menu='L' submenu='Locale class' inserttext='Locale::getDisplayName(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) static string Locale::getDisplayName(string $locale [, string $in_locale]) - Returns an appropriately localized display name for the input locale.' flags='130'/>
<tag menu='L' submenu='Locale class' inserttext='Locale::getDisplayRegion(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) static string Locale::getDisplayRegion(string $locale [, string $in_locale]) - Returns an appropriately localized display name for region of the input locale.' flags='130'/>
<tag menu='L' submenu='Locale class' inserttext='Locale::getDisplayScript(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) static string Locale::getDisplayScript(string $locale [, string $in_locale]) - Returns an appropriately localized display name for script of the input locale.' flags='130'/>
<tag menu='L' submenu='Locale class' inserttext='Locale::getDisplayVariant(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) static string Locale::getDisplayVariant(string $locale [, string $in_locale]) - Returns an appropriately localized display name for variants of the input locale.' flags='130'/>
<tag menu='L' submenu='Locale class' inserttext='Locale::getKeywords(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) static array Locale::getKeywords(string $locale) - Gets the keywords for the input locale.' flags='130'/>
<tag menu='L' submenu='Locale class' inserttext='Locale::getPrimaryLanguage(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) static string Locale::getPrimaryLanguage(string $locale) - Gets the primary language for the input locale.' flags='130'/>
<tag menu='L' submenu='Locale class' inserttext='Locale::getRegion(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) static string Locale::getRegion(string $locale) - Gets the region for the input locale.' flags='130'/>
<tag menu='L' submenu='Locale class' inserttext='Locale::getScript(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) static string Locale::getScript(string $locale) - Gets the script for the input locale.' flags='130'/>
<tag menu='L' submenu='Locale class' inserttext='Locale::lookup(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) static string Locale::lookup(array $langtag, string $locale [, bool $canonicalize=false [, string $default ]]) - Searches the language tag list for the best match to the language.' flags='130'/>
<tag menu='L' submenu='Locale class' inserttext='Locale::parseLocale(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) static array Locale::parseLocale(string $locale) - Returns a key-value array of locale ID subtag elements.' flags='130'/>
<tag menu='L' submenu='Locale class' inserttext='Locale::setDefault(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) static bool Locale::setDefault(string $locale) - sets the default runtime locale.' flags='130'/>
<tag menu='L' submenu='Lotus Notes' inserttext='notes_body(|)' hint='(PHP 4>=4.0.5) array notes_body(string $server, string $mailbox, int $msg_number) - Open the message msg_number in the specified mailbox on the specified server (leave serv.' flags='130'/>
<tag menu='L' submenu='Lotus Notes' inserttext='notes_copy_db(|)' hint='(PHP 4>=4.0.5) bool notes_copy_db(string $from_database_name, string $to_database_name) - Copy a Lotus Notes database.' flags='130'/>
<tag menu='L' submenu='Lotus Notes' inserttext='notes_create_db(|)' hint='(PHP 4>=4.0.5) bool notes_create_db(string $database_name) - Create a Lotus Notes database.' flags='130'/>
<tag menu='L' submenu='Lotus Notes' inserttext='notes_create_note(|)' hint='(PHP 4>=4.0.5) bool notes_create_note(string $database_name, string $form_name) - Create a note using form form_name.' flags='130'/>
<tag menu='L' submenu='Lotus Notes' inserttext='notes_drop_db(|)' hint='(PHP 4>=4.0.5) bool notes_drop_db(string $database_name) - Drop a Lotus Notes database.' flags='130'/>
<tag menu='L' submenu='Lotus Notes' inserttext='notes_find_note(|)' hint='(PHP 4>=4.0.5) int notes_find_note(string $database_name, string $name [, string $type]) - Returns a note id found in database_name.' flags='130'/>
<tag menu='L' submenu='Lotus Notes' inserttext='notes_header_info(|)' hint='(PHP 4>=4.0.5) object notes_header_info(string $server, string $mailbox, int $msg_number) - Open the message msg_number in the specified mailbox on the specified server (leave serv.' flags='130'/>
<tag menu='L' submenu='Lotus Notes' inserttext='notes_list_msgs(|)' hint='(PHP 4>=4.0.5) bool notes_list_msgs(string $db) - Returns the notes from a selected database_name.' flags='130'/>
<tag menu='L' submenu='Lotus Notes' inserttext='notes_mark_read(|)' hint='(PHP 4>=4.0.5) bool notes_mark_read(string $database_name, string $user_name, string $note_id) - Mark a note_id as read for the User user_name.' flags='130'/>
<tag menu='L' submenu='Lotus Notes' inserttext='notes_mark_unread(|)' hint='(PHP 4>=4.0.5) bool notes_mark_unread(string $database_name, string $user_name, string $note_id) - Mark a note_id as unread for the User user_name.' flags='130'/>
<tag menu='L' submenu='Lotus Notes' inserttext='notes_nav_create(|)' hint='(PHP 4>=4.0.5) bool notes_nav_create(string $database_name, string $name) - Create a navigator name, in database_name.' flags='130'/>
<tag menu='L' submenu='Lotus Notes' inserttext='notes_search(|)' hint='(PHP 4>=4.0.5) array notes_search(string $database_name, string $keywords) - Find notes that match keywords in database_name.' flags='130'/>
<tag menu='L' submenu='Lotus Notes' inserttext='notes_unread(|)' hint="(PHP 4>=4.0.5) array notes_unread(string $database_name, string $user_name) - Returns the unread note id's for the current User user_name." flags='130'/>
<tag menu='L' submenu='Lotus Notes' inserttext='notes_version(|)' hint='(PHP 4>=4.0.5) float notes_version(string $database_name) - Get the version Lotus Notes.' flags='130'/>
<tag menu='L' submenu='libxml' inserttext='libxml_clear_errors()' hint='(PHP 5>=5.1.0) void libxml_clear_errors(void) - Clear libxml error buffer.' flags='130'/>
<tag menu='L' submenu='libxml' inserttext='libxml_disable_entity_loader(|)' hint='(PHP 5>=5.2.11) ReturnType libxml_disable_entity_loader([bool $disable=TRUE]) - Disable the ability to load external entities.' flags='130'/>
<tag menu='L' submenu='libxml' inserttext='libxml_get_errors()' hint='(PHP 5>=5.1.0) array libxml_get_errors(void) - Retrieve array of errors.' flags='130'/>
<tag menu='L' submenu='libxml' inserttext='libxml_get_last_error()' hint='(PHP 5>=5.1.0) LibXMLError libxml_get_last_error(void) - Retrieve last error from libxml.' flags='130'/>
<tag menu='L' submenu='libxml' inserttext='libxml_set_streams_context(|)' hint='(PHP 5) void libxml_set_streams_context(resource $streams_context) - Set the streams context for the next libxml document load or write.' flags='130'/>
<tag menu='L' submenu='libxml' inserttext='libxml_use_internal_errors(|)' hint='(PHP 5>=5.1.0) bool libxml_use_internal_errors([bool $use_errors=false]) - Disable libxml errors and allow user to fetch error information as needed.' flags='130'/>
<tag menu='M' submenu='MCVE (Monetra) Payment-->>m - m_p' inserttext='m_checkstatus(|)' hint='(PHP 4>=4.3.9, PHP 5&lt;=5.0.5, PECL mcve>=1.0.0) int m_checkstatus(resource $conn, int $identifier) - Check to see if a transaction has completed.' flags='130'/>
<tag menu='M' submenu='MCVE (Monetra) Payment-->>m - m_p' inserttext='m_completeauthorizations(|)' hint='(PHP 4>=4.3.9, PHP 5&lt;=5.0.5, PECL mcve>=1.0.0) int m_completeauthorizations(resource $conn, int &amp;$array) - Number of complete authorizations in queue, returning an array of their identifiers.' flags='130'/>
<tag menu='M' submenu='MCVE (Monetra) Payment-->>m - m_p' inserttext='m_connect(|)' hint='(PHP 4>=4.3.9, PHP 5&lt;=5.0.5, PECL mcve>=1.0.0) int m_connect(resource $conn) - Establish the connection to MCVE.' flags='130'/>
<tag menu='M' submenu='MCVE (Monetra) Payment-->>m - m_p' inserttext='m_connectionerror(|)' hint='(PHP 4>=4.3.9, PHP 5&lt;=5.0.5, PECL mcve>=1.0.0) string m_connectionerror(resource $conn) - Get a textual representation of why a connection failed.' flags='130'/>
<tag menu='M' submenu='MCVE (Monetra) Payment-->>m - m_p' inserttext='m_deletetrans(|)' hint='(PHP 4>=4.3.9, PHP 5&lt;=5.0.5, PECL mcve>=1.0.0) bool m_deletetrans(resource $conn, int $identifier) - Delete specified transaction from MCVE_CONN structure.' flags='130'/>
<tag menu='M' submenu='MCVE (Monetra) Payment-->>m - m_p' inserttext='m_destroyconn(|)' hint='(PHP 4>=4.3.9, PHP 5&lt;=5.0.5, PECL mcve>=1.0.0) bool m_destroyconn(resource $conn) - Destroy the connection and MCVE_CONN structure.' flags='130'/>
<tag menu='M' submenu='MCVE (Monetra) Payment-->>m - m_p' inserttext='m_destroyengine()' hint='(PHP 4>=4.3.9, PHP 5&lt;=5.0.5, PECL mcve>=1.0.0) void m_destroyengine(void) - Free memory associated with IP/SSL connectivity.' flags='130'/>
<tag menu='M' submenu='MCVE (Monetra) Payment-->>m - m_p' inserttext='m_getcell(|)' hint='(PHP 4>=4.3.9, PHP 5&lt;=5.0.5, PECL mcve>=1.0.0) string m_getcell(resource $conn, int $identifier, string $column, int $row) - Get a specific cell from a comma delimited response by column name.' flags='130'/>
<tag menu='M' submenu='MCVE (Monetra) Payment-->>m - m_p' inserttext='m_getcellbynum(|)' hint='(PHP 4>=4.3.9, PHP 5&lt;=5.0.5, PECL mcve>=1.0.0) string m_getcellbynum(resource $conn, int $identifier, int $column, int $row) - Get a specific cell from a comma delimited response by column number.' flags='130'/>
<tag menu='M' submenu='MCVE (Monetra) Payment-->>m - m_p' inserttext='m_getcommadelimited(|)' hint='(PHP 4>=4.3.9, PHP 5&lt;=5.0.5, PECL mcve>=1.0.0) string m_getcommadelimited(resource $conn, int $identifier) - Get the RAW comma delimited data returned from MCVE.' flags='130'/>
<tag menu='M' submenu='MCVE (Monetra) Payment-->>m - m_p' inserttext='m_getheader(|)' hint='(PHP 4>=4.3.9, PHP 5&lt;=5.0.5, PECL mcve>=1.0.0) string m_getheader(resource $conn, int $identifier, int $column_num) - Get the name of the column in a comma-delimited response.' flags='130'/>
<tag menu='M' submenu='MCVE (Monetra) Payment-->>m - m_p' inserttext='m_initconn()' hint='(PHP 4>=4.3.9, PHP 5&lt;=5.0.5, PECL mcve>=1.0.0) resource m_initconn(void) - Create and initialize an MCVE_CONN structure.' flags='130'/>
<tag menu='M' submenu='MCVE (Monetra) Payment-->>m - m_p' inserttext='m_initengine(|)' hint='(PHP 4>=4.3.9, PHP 5&lt;=5.0.5, PECL mcve>=1.0.0) int m_initengine(string $location) - Ready the client for IP/SSL Communication.' flags='130'/>
<tag menu='M' submenu='MCVE (Monetra) Payment-->>m - m_p' inserttext='m_iscommadelimited(|)' hint='(PHP 4>=4.3.9, PHP 5&lt;=5.0.5, PECL mcve>=1.0.0) int m_iscommadelimited(resource $conn, int $identifier) - Checks to see if response is comma delimited.' flags='130'/>
<tag menu='M' submenu='MCVE (Monetra) Payment-->>m - m_p' inserttext='m_maxconntimeout(|)' hint='(PHP 4>=4.3.9, PHP 5&lt;=5.0.5, PECL mcve>=1.0.0) bool m_maxconntimeout(resource $conn, int $secs) - The maximum amount of time the API will attempt a connection to MCVE.' flags='130'/>
<tag menu='M' submenu='MCVE (Monetra) Payment-->>m - m_p' inserttext='m_monitor(|)' hint='(PHP 4>=4.3.9, PHP 5&lt;=5.0.5, PECL mcve>=1.0.0) int m_monitor(resource $conn) - Perform communication with MCVE (send/receive data) Non-blocking.' flags='130'/>
<tag menu='M' submenu='MCVE (Monetra) Payment-->>m - m_p' inserttext='m_numcolumns(|)' hint='(PHP 4>=4.3.9, PHP 5&lt;=5.0.5, PECL mcve>=1.0.0) int m_numcolumns(resource $conn, int $identifier) - Number of columns returned in a comma delimited response.' flags='130'/>
<tag menu='M' submenu='MCVE (Monetra) Payment-->>m - m_p' inserttext='m_numrows(|)' hint='(PHP 4>=4.3.9, PHP 5&lt;=5.0.5, PECL mcve>=1.0.0) int m_numrows(resource $conn, int $identifier) - Number of rows returned in a comma delimited response.' flags='130'/>
<tag menu='M' submenu='MCVE (Monetra) Payment-->>m - m_p' inserttext='m_parsecommadelimited(|)' hint='(PHP 4>=4.3.9, PHP 5&lt;=5.0.5, PECL mcve>=1.0.0) int m_parsecommadelimited(resource $conn, int $identifier) - Parse the comma delimited response so m_getcell, etc will work.' flags='130'/>
<tag menu='M' submenu='MCVE (Monetra) Payment-->>m_r - m' inserttext='m_responsekeys(|)' hint='(PHP 5>=5.0.5, PECL mcve>=1.0.0) array m_responsekeys(resource $conn, int $identifier) - Returns array of strings which represents the keys that can be used for response parameters on this transaction.' flags='130'/>
<tag menu='M' submenu='MCVE (Monetra) Payment-->>m_r - m' inserttext='m_responseparam(|)' hint='(PHP 4>=4.3.9, PHP 5&lt;=5.0.5, PECL mcve>=1.0.0) string m_responseparam(resource $conn, int $identifier, string $key) - Get a custom response parameter.' flags='130'/>
<tag menu='M' submenu='MCVE (Monetra) Payment-->>m_r - m' inserttext='m_returnstatus(|)' hint='(PHP 4>=4.3.9, PHP 5&lt;=5.0.5, PECL mcve>=1.0.0) int m_returnstatus(resource $conn, int $identifier) - Check to see if the transaction was successful.' flags='130'/>
<tag menu='M' submenu='MCVE (Monetra) Payment-->>m_r - m' inserttext='m_setblocking(|)' hint='(PHP 4>=4.3.9, PHP 5&lt;=5.0.5, PECL mcve>=1.0.0) int m_setblocking(resource $conn, int $tf) - Set blocking/non-blocking mode for connection.' flags='130'/>
<tag menu='M' submenu='MCVE (Monetra) Payment-->>m_r - m' inserttext='m_setdropfile(|)' hint='(PHP 4>=4.3.9, PHP 5&lt;=5.0.5, PECL mcve>=1.0.0) int m_setdropfile(resource $conn, string $directory) - Set the connection method to Drop-File.' flags='130'/>
<tag menu='M' submenu='MCVE (Monetra) Payment-->>m_r - m' inserttext='m_setip(|)' hint='(PHP 4>=4.3.9, PHP 5&lt;=5.0.5, PECL mcve>=1.0.0) int m_setip(resource $conn, string $host, int $port) - Set the connection method to IP.' flags='130'/>
<tag menu='M' submenu='MCVE (Monetra) Payment-->>m_r - m' inserttext='m_setssl(|)' hint='(PHP 4>=4.3.9, PHP 5&lt;=5.0.5, PECL mcve>=1.0.0) int m_setssl(resource $conn, string $host, int $port) - Set the connection method to SSL.' flags='130'/>
<tag menu='M' submenu='MCVE (Monetra) Payment-->>m_r - m' inserttext='m_setssl_cafile(|)' hint='(PHP 5>=5.0.5, PECL mcve>=1.0.0) int m_setssl_cafile(resource $conn, string $cafile) - Set SSL CA (Certificate Authority) file for verification of server certificate.' flags='130'/>
<tag menu='M' submenu='MCVE (Monetra) Payment-->>m_r - m' inserttext='m_setssl_files(|)' hint='(PHP 4>=4.3.9, PHP 5&lt;=5.0.5, PECL mcve>=1.0.0) int m_setssl_files(resource $conn, string $sslkeyfile, string $sslcertfile) - Set certificate key files and certificates if server requires client certificate verification.' flags='130'/>
<tag menu='M' submenu='MCVE (Monetra) Payment-->>m_r - m' inserttext='m_settimeout(|)' hint='(PHP 4>=4.3.9, PHP 5&lt;=5.0.5, PECL mcve>=1.0.0) int m_settimeout(resource $conn, int $seconds) - Set maximum transaction time (per trans).' flags='130'/>
<tag menu='M' submenu='MCVE (Monetra) Payment-->>m_r - m' inserttext='m_transactionssent(|)' hint='(PHP 4>=4.3.9, PHP 5&lt;=5.0.5, PECL mcve>=1.0.0) int m_transactionssent(resource $conn) - Check to see if outgoing buffer is clear.' flags='130'/>
<tag menu='M' submenu='MCVE (Monetra) Payment-->>m_r - m' inserttext='m_transinqueue(|)' hint='(PHP 4>=4.3.9, PHP 5&lt;=5.0.5, PECL mcve>=1.0.0) int m_transinqueue(resource $conn) - Number of transactions in client-queue.' flags='130'/>
<tag menu='M' submenu='MCVE (Monetra) Payment-->>m_r - m' inserttext='m_transkeyval(|)' hint='(PHP 5>=5.0.5, PECL mcve>=1.0.0) int m_transkeyval(resource $conn, int $identifier, string $key, string $value) - Add key/value pair to a transaction. Replaces deprecated transparam().' flags='130'/>
<tag menu='M' submenu='MCVE (Monetra) Payment-->>m_r - m' inserttext='m_transnew(|)' hint='(PHP 4>=4.3.9, PHP 5&lt;=5.0.5, PECL mcve>=1.0.0) int m_transnew(resource $conn) - Start a new transaction.' flags='130'/>
<tag menu='M' submenu='MCVE (Monetra) Payment-->>m_r - m' inserttext='m_transsend(|)' hint='(PHP 4>=4.3.9, PHP 5&lt;=5.0.5, PECL mcve>=1.0.0) int m_transsend(resource $conn, int $identifier) - Finalize and send the transaction.' flags='130'/>
<tag menu='M' submenu='MCVE (Monetra) Payment-->>m_r - m' inserttext='m_uwait(|)' hint='(PHP 4>=4.3.9, PHP 5&lt;=5.0.5, PECL mcve>=1.0.0) int m_uwait(int $microsecs) - Wait x microsecs.' flags='130'/>
<tag menu='M' submenu='MCVE (Monetra) Payment-->>m_r - m' inserttext='m_validateidentifier(|)' hint='(PHP 5>=5.0.5, PECL mcve>=1.0.0) int m_validateidentifier(resource $conn, int $tf) - Whether or not to validate the passed identifier on any transaction it is passed to.' flags='130'/>
<tag menu='M' submenu='MCVE (Monetra) Payment-->>m_r - m' inserttext='m_verifyconnection(|)' hint='(PHP 4>=4.3.9, PHP 5&lt;=5.0.5, PECL mcve>=1.0.0) bool m_verifyconnection(resource $conn, int $tf) - Set whether or not to PING upon connect to verify connection.' flags='130'/>
<tag menu='M' submenu='MCVE (Monetra) Payment-->>m_r - m' inserttext='m_verifysslcert(|)' hint='(PHP 4>=4.3.9, PHP 5&lt;=5.0.5, PECL mcve>=1.0.0) bool m_verifysslcert(resource $conn, int $tf) - Set whether or not to verify the server ssl certificate.' flags='130'/>
<tag menu='M' submenu='Mail' inserttext='ezmlm_hash(|)' hint='(PHP 4>=4.0.2, PHP 5) int ezmlm_hash(string $addr) - Calculate the hash value needed by EZMLM.' flags='130'/>
<tag menu='M' submenu='Mail' inserttext='mail(|)' hint='(PHP 4, PHP 5) bool mail(string $to, string $subject, string $message [, string $additional_headers [, string $additional_parameters ]]) - Send mail.' flags='130'/>
<tag menu='M' submenu='Math-->>a - h' inserttext='abs(|)' hint='(PHP 4, PHP 5) number abs(mixed $number) - Absolute value.' flags='130'/>
<tag menu='M' submenu='Math-->>a - h' inserttext='acos(|)' hint='(PHP 4, PHP 5) float acos(float $arg) - Arc cosine.' flags='130'/>
<tag menu='M' submenu='Math-->>a - h' inserttext='acosh(|)' hint='(PHP 4>=4.1.0, PHP 5) float acosh(float $arg) - Inverse hyperbolic cosine.' flags='130'/>
<tag menu='M' submenu='Math-->>a - h' inserttext='asin(|)' hint='(PHP 4, PHP 5) float asin(float $arg) - Arc sine.' flags='130'/>
<tag menu='M' submenu='Math-->>a - h' inserttext='asinh(|)' hint='(PHP 4>=4.1.0, PHP 5) float asinh(float $arg) - Inverse hyperbolic sine.' flags='130'/>
<tag menu='M' submenu='Math-->>a - h' inserttext='atan(|)' hint='(PHP 4, PHP 5) float atan(float $arg) - Arc tangent.' flags='130'/>
<tag menu='M' submenu='Math-->>a - h' inserttext='atan2(|)' hint='(PHP 4, PHP 5) float atan2(float $y, float $x) - Arc tangent of two variables.' flags='130'/>
<tag menu='M' submenu='Math-->>a - h' inserttext='atanh(|)' hint='(PHP 4>=4.1.0, PHP 5) float atanh(float $arg) - Inverse hyperbolic tangent.' flags='130'/>
<tag menu='M' submenu='Math-->>a - h' inserttext='base_convert(|)' hint='(PHP 4, PHP 5) string base_convert(string $number, int $frombase, int $tobase) - Convert a number between arbitrary bases.' flags='130'/>
<tag menu='M' submenu='Math-->>a - h' inserttext='bindec(|)' hint='(PHP 4, PHP 5) number bindec(string $binary_string) - Binary to decimal.' flags='130'/>
<tag menu='M' submenu='Math-->>a - h' inserttext='ceil(|)' hint='(PHP 4, PHP 5) float ceil(float $value) - Round fractions up.' flags='130'/>
<tag menu='M' submenu='Math-->>a - h' inserttext='cos(|)' hint='(PHP 4, PHP 5) float cos(float $arg) - Cosine.' flags='130'/>
<tag menu='M' submenu='Math-->>a - h' inserttext='cosh(|)' hint='(PHP 4>=4.1.0, PHP 5) float cosh(float $arg) - Hyperbolic cosine.' flags='130'/>
<tag menu='M' submenu='Math-->>a - h' inserttext='decbin(|)' hint='(PHP 4, PHP 5) string decbin(int $number) - Decimal to binary.' flags='130'/>
<tag menu='M' submenu='Math-->>a - h' inserttext='dechex(|)' hint='(PHP 4, PHP 5) string dechex(int $number) - Decimal to hexadecimal.' flags='130'/>
<tag menu='M' submenu='Math-->>a - h' inserttext='decoct(|)' hint='(PHP 4, PHP 5) string decoct(int $number) - Decimal to octal.' flags='130'/>
<tag menu='M' submenu='Math-->>a - h' inserttext='deg2rad(|)' hint='(PHP 4, PHP 5) float deg2rad(float $number) - Converts the number in degrees to the radian equivalent.' flags='130'/>
<tag menu='M' submenu='Math-->>a - h' inserttext='exp(|)' hint='(PHP 4, PHP 5) float exp(float $arg) - Calculates the exponent of e.' flags='130'/>
<tag menu='M' submenu='Math-->>a - h' inserttext='expm1(|)' hint='(PHP 4>=4.1.0, PHP 5) float expm1(float $arg) - Returns exp(number) - 1, computed in a way that is accurate even when the value of number is close to zero.' flags='130'/>
<tag menu='M' submenu='Math-->>a - h' inserttext='floor(|)' hint='(PHP 4, PHP 5) float floor(float $value) - Round fractions down.' flags='130'/>
<tag menu='M' submenu='Math-->>a - h' inserttext='fmod(|)' hint='(PHP 4>=4.2.0, PHP 5) float fmod(float $x, float $y) - Returns the floating point remainder (modulo) of the division of the arguments.' flags='130'/>
<tag menu='M' submenu='Math-->>a - h' inserttext='getrandmax()' hint='(PHP 4, PHP 5) int getrandmax(void) - Show largest possible random value.' flags='130'/>
<tag menu='M' submenu='Math-->>a - h' inserttext='hexdec(|)' hint='(PHP 4, PHP 5) number hexdec(string $hex_string) - Hexadecimal to decimal.' flags='130'/>
<tag menu='M' submenu='Math-->>a - h' inserttext='hypot(|)' hint='(PHP 4>=4.1.0, PHP 5) float hypot(float $x, float $y) - Calculate the length of the hypotenuse of a right-angle triangle.' flags='130'/>
<tag menu='M' submenu='Math-->>i - t' inserttext='is_finite(|)' hint='(PHP 4>=4.2.0, PHP 5) bool is_finite(float $val) - Finds whether a value is a legal finite number.' flags='130'/>
<tag menu='M' submenu='Math-->>i - t' inserttext='is_infinite(|)' hint='(PHP 4>=4.2.0, PHP 5) bool is_infinite(float $val) - Finds whether a value is infinite.' flags='130'/>
<tag menu='M' submenu='Math-->>i - t' inserttext='is_nan(|)' hint='(PHP 4>=4.2.0, PHP 5) bool is_nan(float $val) - Finds whether a value is not a number.' flags='130'/>
<tag menu='M' submenu='Math-->>i - t' inserttext='lcg_value()' hint='(PHP 4, PHP 5) float lcg_value(void) - Combined linear congruential generator.' flags='130'/>
<tag menu='M' submenu='Math-->>i - t' inserttext='log(|)' hint='(PHP 4, PHP 5) float log(float $arg [, float $base=M_E]) - Natural logarithm.' flags='130'/>
<tag menu='M' submenu='Math-->>i - t' inserttext='log10(|)' hint='(PHP 4, PHP 5) float log10(float $arg) - Base-10 logarithm.' flags='130'/>
<tag menu='M' submenu='Math-->>i - t' inserttext='log1p(|)' hint='(PHP 4>=4.1.0, PHP 5) float log1p(float $number) - Returns log(1 + number), computed in a way that is accurate even when the value of number is close to zero.' flags='130'/>
<tag menu='M' submenu='Math-->>i - t' inserttext='max(|)' hint='(PHP 4, PHP 5) mixed max(array $values) - Find highest value.' flags='130'/>
<tag menu='M' submenu='Math-->>i - t' inserttext='min(|)' hint='(PHP 4, PHP 5) mixed min(array $values) - Find lowest value.' flags='130'/>
<tag menu='M' submenu='Math-->>i - t' inserttext='mt_getrandmax()' hint='(PHP 4, PHP 5) int mt_getrandmax(void) - Show largest possible random value.' flags='130'/>
<tag menu='M' submenu='Math-->>i - t' inserttext='mt_rand()' hint='(PHP 4, PHP 5) int mt_rand(void) - Generate a better random value.' flags='130'/>
<tag menu='M' submenu='Math-->>i - t' inserttext='mt_srand(|)' hint='(PHP 4, PHP 5) void mt_srand([int $seed]) - Seed the better random number generator.' flags='130'/>
<tag menu='M' submenu='Math-->>i - t' inserttext='octdec(|)' hint='(PHP 4, PHP 5) number octdec(string $octal_string) - Octal to decimal.' flags='130'/>
<tag menu='M' submenu='Math-->>i - t' inserttext='pi()' hint='(PHP 4, PHP 5) float pi(void) - Get value of pi.' flags='130'/>
<tag menu='M' submenu='Math-->>i - t' inserttext='pow(|)' hint='(PHP 4, PHP 5) number pow(number $base, number $exp) - Exponential expression.' flags='130'/>
<tag menu='M' submenu='Math-->>i - t' inserttext='rad2deg(|)' hint='(PHP 4, PHP 5) float rad2deg(float $number) - Converts the radian number to the equivalent number in degrees.' flags='130'/>
<tag menu='M' submenu='Math-->>i - t' inserttext='rand()' hint='(PHP 4, PHP 5) int rand(void) - Generate a random integer.' flags='130'/>
<tag menu='M' submenu='Math-->>i - t' inserttext='round(|)' hint='(PHP 4, PHP 5) float round(float $val [, int $precision=0 [, int $mode=PHP_ROUND_HALF_UP ]]) - Rounds a float.' flags='130'/>
<tag menu='M' submenu='Math-->>i - t' inserttext='sin(|)' hint='(PHP 4, PHP 5) float sin(float $arg) - Sine.' flags='130'/>
<tag menu='M' submenu='Math-->>i - t' inserttext='sinh(|)' hint='(PHP 4>=4.1.0, PHP 5) float sinh(float $arg) - Hyperbolic sine.' flags='130'/>
<tag menu='M' submenu='Math-->>i - t' inserttext='sqrt(|)' hint='(PHP 4, PHP 5) float sqrt(float $arg) - Square root.' flags='130'/>
<tag menu='M' submenu='Math-->>i - t' inserttext='srand(|)' hint='(PHP 4, PHP 5) void srand([int $seed]) - Seed the random number generator.' flags='130'/>
<tag menu='M' submenu='Math-->>i - t' inserttext='tan(|)' hint='(PHP 4, PHP 5) float tan(float $arg) - Tangent.' flags='130'/>
<tag menu='M' submenu='Math-->>i - t' inserttext='tanh(|)' hint='(PHP 4>=4.1.0, PHP 5) float tanh(float $arg) - Hyperbolic tangent.' flags='130'/>
<tag menu='M' submenu='Mcrypt-->>m - mcrypt_generic_d' inserttext='mcrypt_cbc(|)' hint='(PHP 4, PHP 5) string mcrypt_cbc(int $cipher, string $key, string $data, int $mode [, string $iv]) - Encrypt/decrypt data in CBC mode.' flags='130'/>
<tag menu='M' submenu='Mcrypt-->>m - mcrypt_generic_d' inserttext='mcrypt_cfb(|)' hint='(PHP 4, PHP 5) string mcrypt_cfb(int $cipher, string $key, string $data, int $mode, string $iv) - Encrypt/decrypt data in CFB mode.' flags='130'/>
<tag menu='M' submenu='Mcrypt-->>m - mcrypt_generic_d' inserttext='mcrypt_create_iv(|)' hint='(PHP 4, PHP 5) string mcrypt_create_iv(int $size [, int $source=MCRYPT_DEV_RANDOM]) - Create an initialization vector (IV) from a random source.' flags='130'/>
<tag menu='M' submenu='Mcrypt-->>m - mcrypt_generic_d' inserttext='mcrypt_decrypt(|)' hint='(PHP 4>=4.0.2, PHP 5) string mcrypt_decrypt(string $cipher, string $key, string $data, string $mode [, string $iv]) - Decrypts crypttext with given parameters.' flags='130'/>
<tag menu='M' submenu='Mcrypt-->>m - mcrypt_generic_d' inserttext='mcrypt_ecb(|)' hint='(PHP 4, PHP 5) string mcrypt_ecb(int $cipher, string $key, string $data, int $mode) - Deprecated: Encrypt/decrypt data in ECB mode.' flags='130'/>
<tag menu='M' submenu='Mcrypt-->>m - mcrypt_generic_d' inserttext='mcrypt_enc_get_algorithms_name(|)' hint='(PHP 4>=4.0.2, PHP 5) string mcrypt_enc_get_algorithms_name(resource $td) - Returns the name of the opened algorithm.' flags='130'/>
<tag menu='M' submenu='Mcrypt-->>m - mcrypt_generic_d' inserttext='mcrypt_enc_get_block_size(|)' hint='(PHP 4>=4.0.2, PHP 5) int mcrypt_enc_get_block_size(resource $td) - Returns the blocksize of the opened algorithm.' flags='130'/>
<tag menu='M' submenu='Mcrypt-->>m - mcrypt_generic_d' inserttext='mcrypt_enc_get_iv_size(|)' hint='(PHP 4>=4.0.2, PHP 5) int mcrypt_enc_get_iv_size(resource $td) - Returns the size of the IV of the opened algorithm.' flags='130'/>
<tag menu='M' submenu='Mcrypt-->>m - mcrypt_generic_d' inserttext='mcrypt_enc_get_key_size(|)' hint='(PHP 4>=4.0.2, PHP 5) int mcrypt_enc_get_key_size(resource $td) - Returns the maximum supported keysize of the opened mode.' flags='130'/>
<tag menu='M' submenu='Mcrypt-->>m - mcrypt_generic_d' inserttext='mcrypt_enc_get_modes_name(|)' hint='(PHP 4>=4.0.2, PHP 5) string mcrypt_enc_get_modes_name(resource $td) - Returns the name of the opened mode.' flags='130'/>
<tag menu='M' submenu='Mcrypt-->>m - mcrypt_generic_d' inserttext='mcrypt_enc_get_supported_key_sizes(|)' hint='(PHP 4>=4.0.2, PHP 5) array mcrypt_enc_get_supported_key_sizes(resource $td) - Returns an array with the supported keysizes of the opened algorithm.' flags='130'/>
<tag menu='M' submenu='Mcrypt-->>m - mcrypt_generic_d' inserttext='mcrypt_enc_is_block_algorithm(|)' hint='(PHP 4>=4.0.2, PHP 5) bool mcrypt_enc_is_block_algorithm(resource $td) - Checks whether the algorithm of the opened mode is a block algorithm.' flags='130'/>
<tag menu='M' submenu='Mcrypt-->>m - mcrypt_generic_d' inserttext='mcrypt_enc_is_block_algorithm_mode(|)' hint='(PHP 4>=4.0.2, PHP 5) bool mcrypt_enc_is_block_algorithm_mode(resource $td) - Checks whether the encryption of the opened mode works on blocks.' flags='130'/>
<tag menu='M' submenu='Mcrypt-->>m - mcrypt_generic_d' inserttext='mcrypt_enc_is_block_mode(|)' hint='(PHP 4>=4.0.2, PHP 5) bool mcrypt_enc_is_block_mode(resource $td) - Checks whether the opened mode outputs blocks.' flags='130'/>
<tag menu='M' submenu='Mcrypt-->>m - mcrypt_generic_d' inserttext='mcrypt_enc_self_test(|)' hint='(PHP 4>=4.0.2, PHP 5) int mcrypt_enc_self_test(resource $td) - Runs a self test on the opened module.' flags='130'/>
<tag menu='M' submenu='Mcrypt-->>m - mcrypt_generic_d' inserttext='mcrypt_encrypt(|)' hint='(PHP 4>=4.0.2, PHP 5) string mcrypt_encrypt(string $cipher, string $key, string $data, string $mode [, string $iv]) - Encrypts plaintext with given parameters.' flags='130'/>
<tag menu='M' submenu='Mcrypt-->>m - mcrypt_generic_d' inserttext='mcrypt_generic(|)' hint='(PHP 4>=4.0.2, PHP 5) string mcrypt_generic(resource $td, string $data) - This function encrypts data.' flags='130'/>
<tag menu='M' submenu='Mcrypt-->>m - mcrypt_generic_d' inserttext='mcrypt_generic_deinit(|)' hint='(PHP 4>=4.0.7, PHP 5) bool mcrypt_generic_deinit(resource $td) - This function deinitializes an encryption module.' flags='130'/>
<tag menu='M' submenu='Mcrypt-->>mcrypt_generic_e - m' inserttext='mcrypt_generic_end(|)' hint='(PHP 4>=4.0.2, PHP 5&lt;=5.1.6) bool mcrypt_generic_end(resource $td) - This function terminates encryption.' flags='130'/>
<tag menu='M' submenu='Mcrypt-->>mcrypt_generic_e - m' inserttext='mcrypt_generic_init(|)' hint='(PHP 4>=4.0.2, PHP 5) int mcrypt_generic_init(resource $td, string $key, string $iv) - This function initializes all buffers needed for encryption.' flags='130'/>
<tag menu='M' submenu='Mcrypt-->>mcrypt_generic_e - m' inserttext='mcrypt_get_block_size(|)' hint='(PHP 4, PHP 5) int mcrypt_get_block_size(int $cipher) - Get the block size of the specified cipher.' flags='130'/>
<tag menu='M' submenu='Mcrypt-->>mcrypt_generic_e - m' inserttext='mcrypt_get_cipher_name(|)' hint='(PHP 4, PHP 5) string mcrypt_get_cipher_name(int $cipher) - Get the name of the specified cipher.' flags='130'/>
<tag menu='M' submenu='Mcrypt-->>mcrypt_generic_e - m' inserttext='mcrypt_get_iv_size(|)' hint='(PHP 4>=4.0.2, PHP 5) int mcrypt_get_iv_size(string $cipher, string $mode) - Returns the size of the IV belonging to a specific cipher/mode combination.' flags='130'/>
<tag menu='M' submenu='Mcrypt-->>mcrypt_generic_e - m' inserttext='mcrypt_get_key_size(|)' hint='(PHP 4, PHP 5) int mcrypt_get_key_size(int $cipher) - Get the key size of the specified cipher.' flags='130'/>
<tag menu='M' submenu='Mcrypt-->>mcrypt_generic_e - m' inserttext='mcrypt_list_algorithms(|)' hint='(PHP 4>=4.0.2, PHP 5) array mcrypt_list_algorithms([string $lib_dir=ini_get("mcrypt.algorithms_dir")]) - Get an array of all supported ciphers.' flags='130'/>
<tag menu='M' submenu='Mcrypt-->>mcrypt_generic_e - m' inserttext='mcrypt_list_modes(|)' hint='(PHP 4>=4.0.2, PHP 5) array mcrypt_list_modes([string $lib_dir=ini_get("mcrypt.modes_dir")]) - Get an array of all supported modes.' flags='130'/>
<tag menu='M' submenu='Mcrypt-->>mcrypt_generic_e - m' inserttext='mcrypt_module_close(|)' hint='(PHP 4>=4.0.2, PHP 5) bool mcrypt_module_close(resource $td) - Close the mcrypt module.' flags='130'/>
<tag menu='M' submenu='Mcrypt-->>mcrypt_generic_e - m' inserttext='mcrypt_module_get_algo_block_size(|)' hint='(PHP 4>=4.0.2, PHP 5) int mcrypt_module_get_algo_block_size(string $algorithm [, string $lib_dir]) - Returns the blocksize of the specified algorithm.' flags='130'/>
<tag menu='M' submenu='Mcrypt-->>mcrypt_generic_e - m' inserttext='mcrypt_module_get_algo_key_size(|)' hint='(PHP 4>=4.0.2, PHP 5) int mcrypt_module_get_algo_key_size(string $algorithm [, string $lib_dir]) - Returns the maximum supported keysize of the opened mode.' flags='130'/>
<tag menu='M' submenu='Mcrypt-->>mcrypt_generic_e - m' inserttext='mcrypt_module_get_supported_key_sizes(|)' hint='(PHP 4>=4.0.2, PHP 5) array mcrypt_module_get_supported_key_sizes(string $algorithm [, string $lib_dir]) - Returns an array with the supported keysizes of the opened algorithm.' flags='130'/>
<tag menu='M' submenu='Mcrypt-->>mcrypt_generic_e - m' inserttext='mcrypt_module_is_block_algorithm(|)' hint='(PHP 4>=4.0.2, PHP 5) bool mcrypt_module_is_block_algorithm(string $algorithm [, string $lib_dir]) - This function checks whether the specified algorithm is a block algorithm.' flags='130'/>
<tag menu='M' submenu='Mcrypt-->>mcrypt_generic_e - m' inserttext='mcrypt_module_is_block_algorithm_mode(|)' hint='(PHP 4>=4.0.2, PHP 5) bool mcrypt_module_is_block_algorithm_mode(string $mode [, string $lib_dir]) - Returns if the specified module is a block algorithm or not.' flags='130'/>
<tag menu='M' submenu='Mcrypt-->>mcrypt_generic_e - m' inserttext='mcrypt_module_is_block_mode(|)' hint='(PHP 4>=4.0.2, PHP 5) bool mcrypt_module_is_block_mode(string $mode [, string $lib_dir]) - Returns if the specified mode outputs blocks or not.' flags='130'/>
<tag menu='M' submenu='Mcrypt-->>mcrypt_generic_e - m' inserttext='mcrypt_module_open(|)' hint='(PHP 4>=4.0.2, PHP 5) resource mcrypt_module_open(string $algorithm, string $algorithm_directory, string $mode, string $mode_directory) - Opens the module of the algorithm and the mode to be used.' flags='130'/>
<tag menu='M' submenu='Mcrypt-->>mcrypt_generic_e - m' inserttext='mcrypt_module_self_test(|)' hint='(PHP 4>=4.0.2, PHP 5) bool mcrypt_module_self_test(string $algorithm [, string $lib_dir]) - This function runs a self test on the specified module.' flags='130'/>
<tag menu='M' submenu='Mcrypt-->>mcrypt_generic_e - m' inserttext='mcrypt_ofb(|)' hint='(PHP 4, PHP 5) string mcrypt_ofb(int $cipher, string $key, string $data, int $mode, string $iv) - Encrypt/decrypt data in OFB mode.' flags='130'/>
<tag menu='M' submenu='Mcrypt-->>mcrypt_generic_e - m' inserttext='mdecrypt_generic(|)' hint='(PHP 4>=4.0.2, PHP 5) string mdecrypt_generic(resource $td, string $data) - Decrypt data.' flags='130'/>
<tag menu='M' submenu='MessageFormatter class' inserttext='MessageFormatter::create(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) MessageFormatter MessageFormatter::create(string $locale, string $pattern) - Constructs a new Message Formatter.' flags='130'/>
<tag menu='M' submenu='MessageFormatter class' inserttext='MessageFormatter::format(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) string MessageFormatter::format(array $args) - Format the message.' flags='130'/>
<tag menu='M' submenu='MessageFormatter class' inserttext='MessageFormatter::formatMessage(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) static string MessageFormatter::formatMessage(string $locale, string $pattern, array $args) - Quick format message.' flags='130'/>
<tag menu='M' submenu='MessageFormatter class' inserttext='MessageFormatter::getErrorCode()' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) int MessageFormatter::getErrorCode(void) - Get the error code from last operation.' flags='130'/>
<tag menu='M' submenu='MessageFormatter class' inserttext='MessageFormatter::getErrorMessage()' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) string MessageFormatter::getErrorMessage(void) - Get the error text from the last operation.' flags='130'/>
<tag menu='M' submenu='MessageFormatter class' inserttext='MessageFormatter::getLocale()' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) string MessageFormatter::getLocale(void) - Get the locale for which the formatter was created.' flags='130'/>
<tag menu='M' submenu='MessageFormatter class' inserttext='MessageFormatter::getPattern()' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) string MessageFormatter::getPattern(void) - Get the pattern used by the formatter.' flags='130'/>
<tag menu='M' submenu='MessageFormatter class' inserttext='MessageFormatter::parse(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) array MessageFormatter::parse(string $value) - Parse input string according to pattern.' flags='130'/>
<tag menu='M' submenu='MessageFormatter class' inserttext='MessageFormatter::parseMessage(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) static array MessageFormatter::parseMessage(string $locale, string $pattern, string $source) - Quick parse input string.' flags='130'/>
<tag menu='M' submenu='MessageFormatter class' inserttext='MessageFormatter::setPattern(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) bool MessageFormatter::setPattern(string $pattern) - Set the pattern used by the formatter.' flags='130'/>
<tag menu='M' submenu='Mhash' inserttext='mhash(|)' hint='(PHP 4, PHP 5) string mhash(int $hash, string $data [, string $key]) - Compute hash.' flags='130'/>
<tag menu='M' submenu='Mhash' inserttext='mhash_count()' hint='(PHP 4, PHP 5) int mhash_count(void) - Get the highest available hash id.' flags='130'/>
<tag menu='M' submenu='Mhash' inserttext='mhash_get_block_size(|)' hint='(PHP 4, PHP 5) int mhash_get_block_size(int $hash) - Get the block size of the specified hash.' flags='130'/>
<tag menu='M' submenu='Mhash' inserttext='mhash_get_hash_name(|)' hint='(PHP 4, PHP 5) string mhash_get_hash_name(int $hash) - Get the name of the specified hash.' flags='130'/>
<tag menu='M' submenu='Mhash' inserttext='mhash_keygen_s2k(|)' hint='(PHP 4>=4.0.4, PHP 5) string mhash_keygen_s2k(int $hash, string $password, string $salt, int $bytes) - Generates a key.' flags='130'/>
<tag menu='M' submenu='Microsoft SQL Server-->>m - mssql_fi' inserttext='mssql_bind(|)' hint='(PHP 4>=4.0.7, PHP 5, PECL odbtp>=1.1.1) bool mssql_bind(resource $stmt, string $param_name, mixed &amp;$var, int $type [, bool $is_output=false [, bool $is_null=false [, int $maxlen=-1 ]]]) - Adds a parameter to a stored procedure or a remote stored procedure.' flags='130'/>
<tag menu='M' submenu='Microsoft SQL Server-->>m - mssql_fi' inserttext='mssql_close(|)' hint='(PHP 4, PHP 5, PECL odbtp>=1.1.1) bool mssql_close([resource $link_identifier]) - Close MS SQL Server connection.' flags='130'/>
<tag menu='M' submenu='Microsoft SQL Server-->>m - mssql_fi' inserttext='mssql_connect(|)' hint='(PHP 4, PHP 5, PECL odbtp>=1.1.1) resource mssql_connect([string $servername [, string $username [, string $password [, bool $new_link ]]]]) - Open MS SQL server connection.' flags='130'/>
<tag menu='M' submenu='Microsoft SQL Server-->>m - mssql_fi' inserttext='mssql_data_seek(|)' hint='(PHP 4, PHP 5, PECL odbtp>=1.1.1) bool mssql_data_seek(resource $result_identifier, int $row_number) - Moves internal row pointer.' flags='130'/>
<tag menu='M' submenu='Microsoft SQL Server-->>m - mssql_fi' inserttext='mssql_execute(|)' hint='(PHP 4>=4.0.7, PHP 5, PECL odbtp>=1.1.1) mixed mssql_execute(resource $stmt [, bool $skip_results=false]) - Executes a stored procedure on a MS SQL server database.' flags='130'/>
<tag menu='M' submenu='Microsoft SQL Server-->>m - mssql_fi' inserttext='mssql_fetch_array(|)' hint='(PHP 4, PHP 5, PECL odbtp>=1.1.1) array mssql_fetch_array(resource $result [, int $result_type=MSSQL_BOTH]) - Fetch a result row as an associative array, a numeric array, or both.' flags='130'/>
<tag menu='M' submenu='Microsoft SQL Server-->>m - mssql_fi' inserttext='mssql_fetch_assoc(|)' hint='(PHP 4>=4.2.0, PHP 5, PECL odbtp>=1.1.1) array mssql_fetch_assoc(resource $result_id) - Returns an associative array of the current row in the result.' flags='130'/>
<tag menu='M' submenu='Microsoft SQL Server-->>m - mssql_fi' inserttext='mssql_fetch_batch(|)' hint='(PHP 4>=4.0.4, PHP 5, PECL odbtp>=1.1.1) int mssql_fetch_batch(resource $result) - Returns the next batch of records.' flags='130'/>
<tag menu='M' submenu='Microsoft SQL Server-->>m - mssql_fi' inserttext='mssql_fetch_field(|)' hint='(PHP 4, PHP 5, PECL odbtp>=1.1.1) object mssql_fetch_field(resource $result [, int $field_offset=-1]) - Get field information.' flags='130'/>
<tag menu='M' submenu='Microsoft SQL Server-->>m - mssql_fi' inserttext='mssql_fetch_object(|)' hint='(PHP 4, PHP 5, PECL odbtp>=1.1.1) object mssql_fetch_object(resource $result) - Fetch row as object.' flags='130'/>
<tag menu='M' submenu='Microsoft SQL Server-->>m - mssql_fi' inserttext='mssql_fetch_row(|)' hint='(PHP 4, PHP 5, PECL odbtp>=1.1.1) array mssql_fetch_row(resource $result) - Get row as enumerated array.' flags='130'/>
<tag menu='M' submenu='Microsoft SQL Server-->>m - mssql_fi' inserttext='mssql_field_length(|)' hint='(PHP 4, PHP 5, PECL odbtp>=1.1.1) int mssql_field_length(resource $result [, int $offset=-1]) - Get the length of a field.' flags='130'/>
<tag menu='M' submenu='Microsoft SQL Server-->>m - mssql_fi' inserttext='mssql_field_name(|)' hint='(PHP 4, PHP 5, PECL odbtp>=1.1.1) string mssql_field_name(resource $result [, int $offset=-1]) - Get the name of a field.' flags='130'/>
<tag menu='M' submenu='Microsoft SQL Server-->>m - mssql_fi' inserttext='mssql_field_seek(|)' hint='(PHP 4, PHP 5, PECL odbtp>=1.1.1) bool mssql_field_seek(resource $result, int $field_offset) - Seeks to the specified field offset.' flags='130'/>
<tag menu='M' submenu='Microsoft SQL Server-->>m - mssql_fi' inserttext='mssql_field_type(|)' hint='(PHP 4, PHP 5, PECL odbtp>=1.1.1) string mssql_field_type(resource $result [, int $offset=-1]) - Gets the type of a field.' flags='130'/>
<tag menu='M' submenu='Microsoft SQL Server-->>mssql_fr - m' inserttext='mssql_free_result(|)' hint='(PHP 4, PHP 5, PECL odbtp>=1.1.1) bool mssql_free_result(resource $result) - Free result memory.' flags='130'/>
<tag menu='M' submenu='Microsoft SQL Server-->>mssql_fr - m' inserttext='mssql_free_statement(|)' hint='(PHP 4>=4.3.2, PHP 5, PECL odbtp>=1.1.1) bool mssql_free_statement(resource $stmt) - Free statement memory.' flags='130'/>
<tag menu='M' submenu='Microsoft SQL Server-->>mssql_fr - m' inserttext='mssql_get_last_message()' hint='(PHP 4, PHP 5, PECL odbtp>=1.1.1) string mssql_get_last_message(void) - Returns the last message from the server.' flags='130'/>
<tag menu='M' submenu='Microsoft SQL Server-->>mssql_fr - m' inserttext='mssql_guid_string(|)' hint='(PHP 4>=4.0.7, PHP 5, PECL odbtp>=1.1.1) string mssql_guid_string(string $binary [, bool $short_format=false]) - Converts a 16 byte binary GUID to a string.' flags='130'/>
<tag menu='M' submenu='Microsoft SQL Server-->>mssql_fr - m' inserttext='mssql_init(|)' hint='(PHP 4>=4.0.7, PHP 5, PECL odbtp>=1.1.1) resource mssql_init(string $sp_name [, resource $link_identifier]) - Initializes a stored procedure or a remote stored procedure.' flags='130'/>
<tag menu='M' submenu='Microsoft SQL Server-->>mssql_fr - m' inserttext='mssql_min_error_severity(|)' hint='(PHP 4, PHP 5, PECL odbtp>=1.1.1) void mssql_min_error_severity(int $severity) - Sets the minimum error severity.' flags='130'/>
<tag menu='M' submenu='Microsoft SQL Server-->>mssql_fr - m' inserttext='mssql_min_message_severity(|)' hint='(PHP 4, PHP 5, PECL odbtp>=1.1.1) void mssql_min_message_severity(int $severity) - Sets the minimum message severity.' flags='130'/>
<tag menu='M' submenu='Microsoft SQL Server-->>mssql_fr - m' inserttext='mssql_next_result(|)' hint='(PHP 4>=4.0.5, PHP 5, PECL odbtp>=1.1.1) bool mssql_next_result(resource $result_id) - Move the internal result pointer to the next result.' flags='130'/>
<tag menu='M' submenu='Microsoft SQL Server-->>mssql_fr - m' inserttext='mssql_num_fields(|)' hint='(PHP 4, PHP 5, PECL odbtp>=1.1.1) int mssql_num_fields(resource $result) - Gets the number of fields in result.' flags='130'/>
<tag menu='M' submenu='Microsoft SQL Server-->>mssql_fr - m' inserttext='mssql_num_rows(|)' hint='(PHP 4, PHP 5, PECL odbtp>=1.1.1) int mssql_num_rows(resource $result) - Gets the number of rows in result.' flags='130'/>
<tag menu='M' submenu='Microsoft SQL Server-->>mssql_fr - m' inserttext='mssql_pconnect(|)' hint='(PHP 4, PHP 5, PECL odbtp>=1.1.1) resource mssql_pconnect([string $servername [, string $username [, string $password [, bool $new_link ]]]]) - Open persistent MS SQL connection.' flags='130'/>
<tag menu='M' submenu='Microsoft SQL Server-->>mssql_fr - m' inserttext='mssql_query(|)' hint='(PHP 4, PHP 5, PECL odbtp>=1.1.1) mixed mssql_query(string $query [, resource $link_identifier [, int $batch_size=0 ]]) - Send MS SQL query.' flags='130'/>
<tag menu='M' submenu='Microsoft SQL Server-->>mssql_fr - m' inserttext='mssql_result(|)' hint='(PHP 4, PHP 5, PECL odbtp>=1.1.1) string mssql_result(resource $result, int $row, mixed $field) - Get result data.' flags='130'/>
<tag menu='M' submenu='Microsoft SQL Server-->>mssql_fr - m' inserttext='mssql_rows_affected(|)' hint='(PHP 4>=4.0.4, PHP 5, PECL odbtp>=1.1.1) int mssql_rows_affected(resource $link_identifier) - Returns the number of records affected by the query.' flags='130'/>
<tag menu='M' submenu='Microsoft SQL Server-->>mssql_fr - m' inserttext='mssql_select_db(|)' hint='(PHP 4, PHP 5, PECL odbtp>=1.1.1) bool mssql_select_db(string $database_name [, resource $link_identifier]) - Select MS SQL database.' flags='130'/>
<tag menu='M' submenu='Ming (flash)' inserttext='ming_keypress(|)' hint='(PHP 5&lt;=5.3.0, PECL ming SVN) int ming_keypress(string $char) - Returns the action flag for keyPress(char).' flags='130'/>
<tag menu='M' submenu='Ming (flash)' inserttext='ming_setcubicthreshold(|)' hint='(PHP 4>=4.0.5, PHP 5, PECL ming SVN) void ming_setcubicthreshold(int $threshold) - Set cubic threshold.' flags='130'/>
<tag menu='M' submenu='Ming (flash)' inserttext='ming_setscale(|)' hint='(PHP 4>=4.0.5, PHP 5, PECL ming SVN) void ming_setscale(float $scale) - Set the global scaling factor.' flags='130'/>
<tag menu='M' submenu='Ming (flash)' inserttext='ming_setswfcompression(|)' hint='(PHP 5.2.1-5.3.0, PECL ming SVN) void ming_setswfcompression(int $level) - Sets the SWF output compression.' flags='130'/>
<tag menu='M' submenu='Ming (flash)' inserttext='ming_useconstants(|)' hint='(PHP 5&lt;=5.3.0, PECL ming SVN) void ming_useconstants(int $use) - Use constant pool.' flags='130'/>
<tag menu='M' submenu='Ming (flash)' inserttext='ming_useswfversion(|)' hint='(PHP 4>=4.2.0, PHP 5&lt;=5.3.0, PECL ming SVN) void ming_useswfversion(int $version) - Sets the SWF version.' flags='130'/>
<tag menu='M' submenu='Misc.' inserttext='__halt_compiler()' hint='(PHP 5>=5.1.0) void __halt_compiler(void) - Halts the compiler execution.' flags='130'/>
<tag menu='M' submenu='Misc.' inserttext='connection_aborted()' hint='(PHP 4, PHP 5) int connection_aborted(void) - Check whether client disconnected.' flags='130'/>
<tag menu='M' submenu='Misc.' inserttext='connection_status()' hint='(PHP 4, PHP 5) int connection_status(void) - Returns connection status bitfield.' flags='130'/>
<tag menu='M' submenu='Misc.' inserttext='connection_timeout()' hint='(PHP 4&lt;=4.0.4) int connection_timeout(void) - Check if the script timed out.' flags='130'/>
<tag menu='M' submenu='Misc.' inserttext='constant(|)' hint='(PHP 4>=4.0.4, PHP 5) mixed constant(string $name) - Returns the value of a constant.' flags='130'/>
<tag menu='M' submenu='Misc.' inserttext='define(|)' hint='(PHP 4, PHP 5) bool define(string $name, mixed $value [, bool $case_insensitive=false]) - Defines a named constant.' flags='130'/>
<tag menu='M' submenu='Misc.' inserttext='defined(|)' hint='(PHP 4, PHP 5) bool defined(string $name) - Checks whether a given named constant exists.' flags='130'/>
<tag menu='M' submenu='Misc.' inserttext='die(|)' hint='(PHP 4, PHP 5) Equivalent to exit().' flags='130'/>
<tag menu='M' submenu='Misc.' inserttext='eval(|)' hint='(PHP 4, PHP 5) mixed eval(string $code_str) - Evaluate a string as PHP code.' flags='130'/>
<tag menu='M' submenu='Misc.' inserttext='exit(|)' hint='(PHP 4, PHP 5) void exit([string $status]) - Output a message and terminate the current script.' flags='130'/>
<tag menu='M' submenu='Misc.' inserttext='get_browser(|)' hint="(PHP 4, PHP 5) mixed get_browser([string $user_agent [, bool $return_array=false ]]) - Tells what the user's browser is capable of." flags='130'/>
<tag menu='M' submenu='Misc.' inserttext='highlight_file(|)' hint='(PHP 4, PHP 5) mixed highlight_file(string $filename [, bool $return=false]) - Syntax highlighting of a file.' flags='130'/>
<tag menu='M' submenu='Misc.' inserttext='highlight_string(|)' hint='(PHP 4, PHP 5) mixed highlight_string(string $str [, bool $return=false]) - Syntax highlighting of a string.' flags='130'/>
<tag menu='M' submenu='Misc.' inserttext='ignore_user_abort(|)' hint='(PHP 4, PHP 5) int ignore_user_abort([string $value]) - Set whether a client disconnect should abort script execution.' flags='130'/>
<tag menu='M' submenu='Misc.' inserttext='pack(|)' hint='(PHP 4, PHP 5) string pack(string $format [, mixed $args [, mixed $... ]]) - Pack data into binary string.' flags='130'/>
<tag menu='M' submenu='Misc.' inserttext='php_check_syntax(|)' hint='(PHP 5&lt;=5.0.4) bool php_check_syntax(string $filename [, string &amp;$error_message]) - Check the PHP syntax of (and execute) the specified file.' flags='130'/>
<tag menu='M' submenu='Misc.' inserttext='php_strip_whitespace(|)' hint='(PHP 5) string php_strip_whitespace(string $filename) - Return source with stripped comments and whitespace.' flags='130'/>
<tag menu='M' submenu='Misc.' inserttext='show_source(|)' hint='(PHP 4, PHP 5) Alias of highlight_file().' flags='130'/>
<tag menu='M' submenu='Misc.' inserttext='sleep(|)' hint='(PHP 4, PHP 5) int sleep(int $seconds) - Delay execution.' flags='130'/>
<tag menu='M' submenu='Misc.' inserttext='sys_getloadavg()' hint='(PHP 5>=5.1.3) array sys_getloadavg(void) - Gets system load average.' flags='130'/>
<tag menu='M' submenu='Misc.' inserttext='time_nanosleep(|)' hint='(PHP 5) mixed time_nanosleep(int $seconds, int $nanoseconds) - Delay for a number of seconds and nanoseconds.' flags='130'/>
<tag menu='M' submenu='Misc.' inserttext='time_sleep_until(|)' hint='(PHP 5>=5.1.0) bool time_sleep_until(float $timestamp) - Make the script sleep until the specified time.' flags='130'/>
<tag menu='M' submenu='Misc.' inserttext='uniqid(|)' hint='(PHP 4, PHP 5) string uniqid([string $prefix="" [, bool $more_entropy=false ]]) - Generate a unique ID.' flags='130'/>
<tag menu='M' submenu='Misc.' inserttext='unpack(|)' hint='(PHP 4, PHP 5) array unpack(string $format, string $data) - Unpack data from binary string.' flags='130'/>
<tag menu='M' submenu='Misc.' inserttext='usleep(|)' hint='(PHP 4, PHP 5) void usleep(int $micro_seconds) - Delay execution in microseconds.' flags='130'/>
<tag menu='M' submenu='Msession' inserttext='msession_connect(|)' hint='(PHP 4>=4.2.0, PHP 5&lt;=5.1.2) bool msession_connect(string $host, string $port) - Connect to msession server.' flags='130'/>
<tag menu='M' submenu='Msession' inserttext='msession_count()' hint='(PHP 4>=4.2.0, PHP 5&lt;=5.1.2) int msession_count(void) - Get session count.' flags='130'/>
<tag menu='M' submenu='Msession' inserttext='msession_create(|)' hint='(PHP 4>=4.2.0, PHP 5&lt;=5.1.2) bool msession_create(string $session [, string $classname [, string $data ]]) - Create a session.' flags='130'/>
<tag menu='M' submenu='Msession' inserttext='msession_destroy(|)' hint='(PHP 4>=4.2.0, PHP 5&lt;=5.1.2) bool msession_destroy(string $name) - Destroy a session.' flags='130'/>
<tag menu='M' submenu='Msession' inserttext='msession_disconnect()' hint='(PHP 4>=4.2.0, PHP 5&lt;=5.1.2) void msession_disconnect(void) - Close connection to msession server.' flags='130'/>
<tag menu='M' submenu='Msession' inserttext='msession_find(|)' hint='(PHP 4>=4.2.0, PHP 5&lt;=5.1.2) array msession_find(string $name, string $value) - Find all sessions with name and value.' flags='130'/>
<tag menu='M' submenu='Msession' inserttext='msession_get(|)' hint='(PHP 4>=4.2.0, PHP 5&lt;=5.1.2) string msession_get(string $session, string $name, string $value) - Get value from session.' flags='130'/>
<tag menu='M' submenu='Msession' inserttext='msession_get_array(|)' hint='(PHP 4>=4.2.0, PHP 5&lt;=5.1.2) array msession_get_array(string $session) - Get array of msession variables.' flags='130'/>
<tag menu='M' submenu='Msession' inserttext='msession_get_data(|)' hint='(PHP 4>=4.2.0, PHP 5&lt;=5.1.2) string msession_get_data(string $session) - Get data session unstructured data.' flags='130'/>
<tag menu='M' submenu='Msession' inserttext='msession_inc(|)' hint='(PHP 4>=4.2.0, PHP 5&lt;=5.1.2) string msession_inc(string $session, string $name) - Increment value in session.' flags='130'/>
<tag menu='M' submenu='Msession' inserttext='msession_list()' hint='(PHP 4>=4.2.0, PHP 5&lt;=5.1.2) array msession_list(void) - List all sessions.' flags='130'/>
<tag menu='M' submenu='Msession' inserttext='msession_listvar(|)' hint='(PHP 4>=4.2.0, PHP 5&lt;=5.1.2) array msession_listvar(string $name) - List sessions with variable.' flags='130'/>
<tag menu='M' submenu='Msession' inserttext='msession_lock(|)' hint='(PHP 4>=4.2.0, PHP 5&lt;=5.1.2) int msession_lock(string $name) - Lock a session.' flags='130'/>
<tag menu='M' submenu='Msession' inserttext='msession_plugin(|)' hint='(PHP 4>=4.2.0, PHP 5&lt;=5.1.2) string msession_plugin(string $session, string $val [, string $param]) - Call an escape function within the msession personality plugin.' flags='130'/>
<tag menu='M' submenu='Msession' inserttext='msession_randstr(|)' hint='(PHP 4>=4.2.0, PHP 5&lt;=5.1.2) string msession_randstr(int $param) - Get random string.' flags='130'/>
<tag menu='M' submenu='Msession' inserttext='msession_set(|)' hint='(PHP 4>=4.2.0, PHP 5&lt;=5.1.2) bool msession_set(string $session, string $name, string $value) - Set value in session.' flags='130'/>
<tag menu='M' submenu='Msession' inserttext='msession_set_array(|)' hint='(PHP 4>=4.2.0, PHP 5&lt;=5.1.2) void msession_set_array(string $session, array $tuples) - Set msession variables from an array.' flags='130'/>
<tag menu='M' submenu='Msession' inserttext='msession_set_data(|)' hint='(PHP 4>=4.2.0, PHP 5&lt;=5.1.2) bool msession_set_data(string $session, string $value) - Set data session unstructured data.' flags='130'/>
<tag menu='M' submenu='Msession' inserttext='msession_timeout(|)' hint='(PHP 4>=4.2.0, PHP 5&lt;=5.1.2) int msession_timeout(string $session [, int $param]) - Set/get session timeout.' flags='130'/>
<tag menu='M' submenu='Msession' inserttext='msession_uniq(|)' hint='(PHP 4>=4.2.0, PHP 5&lt;=5.1.2) string msession_uniq(int $param [, string $classname [, string $data ]]) - Get unique id.' flags='130'/>
<tag menu='M' submenu='Msession' inserttext='msession_unlock(|)' hint='(PHP 4>=4.2.0, PHP 5&lt;=5.1.2) int msession_unlock(string $session, int $key) - Unlock a session.' flags='130'/>
<tag menu='M' submenu='Multibyte String-->>m - mb_ereg_search_g' inserttext='mb_check_encoding(|)' hint='(PHP 4>=4.4.3, PHP 5>=5.1.3) bool mb_check_encoding([string $var=NULL [, string $encoding=mb_internal_encoding() ]]) - Check if the string is valid for the specified encoding.' flags='130'/>
<tag menu='M' submenu='Multibyte String-->>m - mb_ereg_search_g' inserttext='mb_convert_case(|)' hint='(PHP 4>=4.3.0, PHP 5) string mb_convert_case(string $str, int $mode=MB_CASE_UPPER [, string $encoding=mb_internal_encoding()]) - Perform case folding on a string.' flags='130'/>
<tag menu='M' submenu='Multibyte String-->>m - mb_ereg_search_g' inserttext='mb_convert_encoding(|)' hint='(PHP 4>=4.0.6, PHP 5) string mb_convert_encoding(string $str, string $to_encoding [, mixed $from_encoding]) - Convert character encoding.' flags='130'/>
<tag menu='M' submenu='Multibyte String-->>m - mb_ereg_search_g' inserttext='mb_convert_kana(|)' hint='(PHP 4>=4.0.6, PHP 5) string mb_convert_kana(string $str [, string $option="KV" [, string $encoding ]]) - Convert "kana" one from another ("zen-kaku", "han-kaku" and more).' flags='130'/>
<tag menu='M' submenu='Multibyte String-->>m - mb_ereg_search_g' inserttext='mb_convert_variables(|)' hint='(PHP 4>=4.0.6, PHP 5) string mb_convert_variables(string $to_encoding, mixed $from_encoding, mixed &amp;$vars [, mixed &amp;$...]) - Convert character code in variable(s).' flags='130'/>
<tag menu='M' submenu='Multibyte String-->>m - mb_ereg_search_g' inserttext='mb_decode_mimeheader(|)' hint='(PHP 4>=4.0.6, PHP 5) string mb_decode_mimeheader(string $str) - Decode string in MIME header field.' flags='130'/>
<tag menu='M' submenu='Multibyte String-->>m - mb_ereg_search_g' inserttext='mb_decode_numericentity(|)' hint='(PHP 4>=4.0.6, PHP 5) string mb_decode_numericentity(string $str, array $convmap, string $encoding) - Decode HTML numeric string reference to character.' flags='130'/>
<tag menu='M' submenu='Multibyte String-->>m - mb_ereg_search_g' inserttext='mb_detect_encoding(|)' hint='(PHP 4>=4.0.6, PHP 5) string mb_detect_encoding(string $str [, mixed $encoding_list=mb_detect_order() [, bool $strict=false ]]) - Detect character encoding.' flags='130'/>
<tag menu='M' submenu='Multibyte String-->>m - mb_ereg_search_g' inserttext='mb_detect_order(|)' hint='(PHP 4>=4.0.6, PHP 5) mixed mb_detect_order([mixed $encoding_list]) - Set/Get character encoding detection order.' flags='130'/>
<tag menu='M' submenu='Multibyte String-->>m - mb_ereg_search_g' inserttext='mb_encode_mimeheader(|)' hint='(PHP 4>=4.0.6, PHP 5) string mb_encode_mimeheader(string $str [, string $charset [, string $transfer_encoding [, string $linefeed [, int $indent ]]]]) - Encode string for MIME header.' flags='130'/>
<tag menu='M' submenu='Multibyte String-->>m - mb_ereg_search_g' inserttext='mb_encode_numericentity(|)' hint='(PHP 4>=4.0.6, PHP 5) string mb_encode_numericentity(string $str, array $convmap, string $encoding) - Encode character to HTML numeric string reference.' flags='130'/>
<tag menu='M' submenu='Multibyte String-->>m - mb_ereg_search_g' inserttext='mb_encoding_aliases(|)' hint='(PHP 5>=5.3.0) array mb_encoding_aliases(string $encoding) - Get aliases of a known encoding type.' flags='130'/>
<tag menu='M' submenu='Multibyte String-->>m - mb_ereg_search_g' inserttext='mb_ereg(|)' hint='(PHP 4>=4.2.0, PHP 5) int mb_ereg(string $pattern, string $string [, array $regs]) - Regular expression match with multibyte support.' flags='130'/>
<tag menu='M' submenu='Multibyte String-->>m - mb_ereg_search_g' inserttext='mb_ereg_match(|)' hint='(PHP 4>=4.2.0, PHP 5) bool mb_ereg_match(string $pattern, string $string [, string $option="msr"]) - Regular expression match for multibyte string.' flags='130'/>
<tag menu='M' submenu='Multibyte String-->>m - mb_ereg_search_g' inserttext='mb_ereg_replace(|)' hint='(PHP 4>=4.2.0, PHP 5) string mb_ereg_replace(string $pattern, string $replacement, string $string [, string $option="msr"]) - Replace regular expression with multibyte support.' flags='130'/>
<tag menu='M' submenu='Multibyte String-->>m - mb_ereg_search_g' inserttext='mb_ereg_search(|)' hint='(PHP 4>=4.2.0, PHP 5) bool mb_ereg_search([string $pattern [, string $option="ms" ]]) - Multibyte regular expression match for predefined multibyte string.' flags='130'/>
<tag menu='M' submenu='Multibyte String-->>m - mb_ereg_search_g' inserttext='mb_ereg_search_getpos()' hint='(PHP 4>=4.2.0, PHP 5) int mb_ereg_search_getpos(void) - Returns start point for next regular expression match.' flags='130'/>
<tag menu='M' submenu='Multibyte String-->>m - mb_ereg_search_g' inserttext='mb_ereg_search_getregs()' hint='(PHP 4>=4.2.0, PHP 5) array mb_ereg_search_getregs(void) - Retrieve the result from the last multibyte regular expression match.' flags='130'/>
<tag menu='M' submenu='Multibyte String-->>mb_ereg_search_i - mb_se' inserttext='mb_ereg_search_init(|)' hint='(PHP 4>=4.2.0, PHP 5) bool mb_ereg_search_init(string $string [, string $pattern [, string $option="msr" ]]) - Setup string and regular expression for a multibyte regular expression match.' flags='130'/>
<tag menu='M' submenu='Multibyte String-->>mb_ereg_search_i - mb_se' inserttext='mb_ereg_search_pos(|)' hint='(PHP 4>=4.2.0, PHP 5) array mb_ereg_search_pos([string $pattern [, string $option="ms" ]]) - Returns position and length of a matched part of the multibyte regular expression for a predefined multibyte string.' flags='130'/>
<tag menu='M' submenu='Multibyte String-->>mb_ereg_search_i - mb_se' inserttext='mb_ereg_search_regs(|)' hint='(PHP 4>=4.2.0, PHP 5) array mb_ereg_search_regs([string $pattern [, string $option="ms" ]]) - Returns the matched part of a multibyte regular expression.' flags='130'/>
<tag menu='M' submenu='Multibyte String-->>mb_ereg_search_i - mb_se' inserttext='mb_ereg_search_setpos(|)' hint='(PHP 4>=4.2.0, PHP 5) bool mb_ereg_search_setpos(int $position) - Set start point of next regular expression match.' flags='130'/>
<tag menu='M' submenu='Multibyte String-->>mb_ereg_search_i - mb_se' inserttext='mb_eregi(|)' hint='(PHP 4>=4.2.0, PHP 5) int mb_eregi(string $pattern, string $string [, array $regs]) - Regular expression match ignoring case with multibyte support.' flags='130'/>
<tag menu='M' submenu='Multibyte String-->>mb_ereg_search_i - mb_se' inserttext='mb_eregi_replace(|)' hint='(PHP 4>=4.2.0, PHP 5) string mb_eregi_replace(string $pattern, string $replace, string $string [, string $option="msri"]) - Replace regular expression with multibyte support ignoring case.' flags='130'/>
<tag menu='M' submenu='Multibyte String-->>mb_ereg_search_i - mb_se' inserttext='mb_get_info(|)' hint='(PHP 4>=4.2.0, PHP 5) mixed mb_get_info([string $type="all"]) - Get internal settings of mbstring.' flags='130'/>
<tag menu='M' submenu='Multibyte String-->>mb_ereg_search_i - mb_se' inserttext='mb_http_input(|)' hint='(PHP 4>=4.0.6, PHP 5) mixed mb_http_input([string $type=""]) - Detect HTTP input character encoding.' flags='130'/>
<tag menu='M' submenu='Multibyte String-->>mb_ereg_search_i - mb_se' inserttext='mb_http_output(|)' hint='(PHP 4>=4.0.6, PHP 5) mixed mb_http_output([string $encoding]) - Set/Get HTTP output character encoding.' flags='130'/>
<tag menu='M' submenu='Multibyte String-->>mb_ereg_search_i - mb_se' inserttext='mb_internal_encoding(|)' hint='(PHP 4>=4.0.6, PHP 5) mixed mb_internal_encoding([string $encoding=mb_internal_encoding()]) - Set/Get internal character encoding.' flags='130'/>
<tag menu='M' submenu='Multibyte String-->>mb_ereg_search_i - mb_se' inserttext='mb_language(|)' hint='(PHP 4>=4.0.6, PHP 5) mixed mb_language([string $language]) - Set/Get current language.' flags='130'/>
<tag menu='M' submenu='Multibyte String-->>mb_ereg_search_i - mb_se' inserttext='mb_list_encodings()' hint='(PHP 5) array mb_list_encodings(void) - Returns an array of all supported encodings.' flags='130'/>
<tag menu='M' submenu='Multibyte String-->>mb_ereg_search_i - mb_se' inserttext='mb_output_handler(|)' hint='(PHP 4>=4.0.6, PHP 5) string mb_output_handler(string $contents, int $status) - Callback function converts character encoding in output buffer.' flags='130'/>
<tag menu='M' submenu='Multibyte String-->>mb_ereg_search_i - mb_se' inserttext='mb_parse_str(|)' hint='(PHP 4>=4.0.6, PHP 5) bool mb_parse_str(string $encoded_string [, array &amp;$result]) - Parse GET/POST/COOKIE data and set global variable.' flags='130'/>
<tag menu='M' submenu='Multibyte String-->>mb_ereg_search_i - mb_se' inserttext='mb_preferred_mime_name(|)' hint='(PHP 4>=4.0.6, PHP 5) string mb_preferred_mime_name(string $encoding) - Get MIME charset string.' flags='130'/>
<tag menu='M' submenu='Multibyte String-->>mb_ereg_search_i - mb_se' inserttext='mb_regex_encoding(|)' hint='(PHP 4>=4.2.0, PHP 5) mixed mb_regex_encoding([string $encoding]) - Returns current encoding for multibyte regex as string.' flags='130'/>
<tag menu='M' submenu='Multibyte String-->>mb_ereg_search_i - mb_se' inserttext='mb_regex_set_options(|)' hint='(PHP 4>=4.3.0, PHP 5) string mb_regex_set_options([string $options="msr"]) - Set/Get the default options for mbregex functions.' flags='130'/>
<tag menu='M' submenu='Multibyte String-->>mb_ereg_search_i - mb_se' inserttext='mb_send_mail(|)' hint='(PHP 4>=4.0.6, PHP 5) bool mb_send_mail(string $to, string $subject, string $message [, string $additional_headers=NULL [, string $additional_parameter=NULL ]]) - Send encoded mail.' flags='130'/>
<tag menu='M' submenu='Multibyte String-->>mb_sp - m' inserttext='mb_split(|)' hint='(PHP 4>=4.2.0, PHP 5) array mb_split(string $pattern, string $string [, int $limit=-1]) - Split multibyte string using regular expression.' flags='130'/>
<tag menu='M' submenu='Multibyte String-->>mb_sp - m' inserttext='mb_strcut(|)' hint='(PHP 4>=4.0.6, PHP 5) string mb_strcut(string $str, int $start [, int $length [, string $encoding ]]) - Get part of string.' flags='130'/>
<tag menu='M' submenu='Multibyte String-->>mb_sp - m' inserttext='mb_strimwidth(|)' hint='(PHP 4>=4.0.6, PHP 5) string mb_strimwidth(string $str, int $start, int $width [, string $trimmarker [, string $encoding ]]) - Get truncated string with specified width.' flags='130'/>
<tag menu='M' submenu='Multibyte String-->>mb_sp - m' inserttext='mb_stripos(|)' hint='(PHP 5>=5.2.0) int mb_stripos(string $haystack, string $needle [, int $offset [, string $encoding ]]) - Finds position of first occurrence of a string within another, case insensitive.' flags='130'/>
<tag menu='M' submenu='Multibyte String-->>mb_sp - m' inserttext='mb_stristr(|)' hint='(PHP 5>=5.2.0) string mb_stristr(string $haystack, string $needle [, bool $part=false [, string $encoding ]]) - Finds first occurrence of a string within another, case insensitive.' flags='130'/>
<tag menu='M' submenu='Multibyte String-->>mb_sp - m' inserttext='mb_strlen(|)' hint='(PHP 4>=4.0.6, PHP 5) int mb_strlen(string $str [, string $encoding]) - Get string length.' flags='130'/>
<tag menu='M' submenu='Multibyte String-->>mb_sp - m' inserttext='mb_strpos(|)' hint='(PHP 4>=4.0.6, PHP 5) int mb_strpos(string $haystack, string $needle [, int $offset [, string $encoding ]]) - Find position of first occurrence of string in a string.' flags='130'/>
<tag menu='M' submenu='Multibyte String-->>mb_sp - m' inserttext='mb_strrchr(|)' hint='(PHP 5>=5.2.0) string mb_strrchr(string $haystack, string $needle [, bool $part=false [, string $encoding ]]) - Finds the last occurrence of a character in a string within another.' flags='130'/>
<tag menu='M' submenu='Multibyte String-->>mb_sp - m' inserttext='mb_strrichr(|)' hint='(PHP 5>=5.2.0) string mb_strrichr(string $haystack, string $needle [, bool $part=false [, string $encoding ]]) - Finds the last occurrence of a character in a string within another, case insensitive.' flags='130'/>
<tag menu='M' submenu='Multibyte String-->>mb_sp - m' inserttext='mb_strripos(|)' hint='(PHP 5>=5.2.0) int mb_strripos(string $haystack, string $needle [, int $offset [, string $encoding ]]) - Finds position of last occurrence of a string within another, case insensitive.' flags='130'/>
<tag menu='M' submenu='Multibyte String-->>mb_sp - m' inserttext='mb_strrpos(|)' hint='(PHP 4>=4.0.6, PHP 5) int mb_strrpos(string $haystack, string $needle [, int $offset [, string $encoding ]]) - Find position of last occurrence of a string in a string.' flags='130'/>
<tag menu='M' submenu='Multibyte String-->>mb_sp - m' inserttext='mb_strstr(|)' hint='(PHP 5>=5.2.0) string mb_strstr(string $haystack, string $needle [, bool $part=false [, string $encoding ]]) - Finds first occurrence of a string within another.' flags='130'/>
<tag menu='M' submenu='Multibyte String-->>mb_sp - m' inserttext='mb_strtolower(|)' hint='(PHP 4>=4.3.0, PHP 5) string mb_strtolower(string $str [, string $encoding=mb_internal_encoding()]) - Make a string lowercase.' flags='130'/>
<tag menu='M' submenu='Multibyte String-->>mb_sp - m' inserttext='mb_strtoupper(|)' hint='(PHP 4>=4.3.0, PHP 5) string mb_strtoupper(string $str [, string $encoding=mb_internal_encoding()]) - Make a string uppercase.' flags='130'/>
<tag menu='M' submenu='Multibyte String-->>mb_sp - m' inserttext='mb_strwidth(|)' hint='(PHP 4>=4.0.6, PHP 5) int mb_strwidth(string $str [, string $encoding]) - Return width of string.' flags='130'/>
<tag menu='M' submenu='Multibyte String-->>mb_sp - m' inserttext='mb_substitute_character(|)' hint='(PHP 4>=4.0.6, PHP 5) mixed mb_substitute_character([mixed $substrchar]) - Set/Get substitution character.' flags='130'/>
<tag menu='M' submenu='Multibyte String-->>mb_sp - m' inserttext='mb_substr(|)' hint='(PHP 4>=4.0.6, PHP 5) string mb_substr(string $str, int $start [, int $length [, string $encoding ]]) - Get part of string.' flags='130'/>
<tag menu='M' submenu='Multibyte String-->>mb_sp - m' inserttext='mb_substr_count(|)' hint='(PHP 4>=4.3.0, PHP 5) int mb_substr_count(string $haystack, string $needle [, string $encoding]) - Count the number of substring occurrences.' flags='130'/>
<tag menu='M' submenu='MultipleIterator class' inserttext='MultipleIterator::__construct(|)' hint='(PHP 5>=5.3.0) MultipleIterator::__construct(integer $flags) - Constructs a new MultipleIterator.' flags='130'/>
<tag menu='M' submenu='MultipleIterator class' inserttext='MultipleIterator::attachIterator(|)' hint='(PHP 5>=5.3.0) public void MultipleIterator::attachIterator(Iterator $iterator [, string $infos]) - Attaches iterator information.' flags='130'/>
<tag menu='M' submenu='MultipleIterator class' inserttext='MultipleIterator::containsIterator(|)' hint='(PHP 5>=5.3.0) public void MultipleIterator::containsIterator(Iterator $iterator) - Checks if an iterator is attached.' flags='130'/>
<tag menu='M' submenu='MultipleIterator class' inserttext='MultipleIterator::countIterators()' hint='(PHP 5>=5.3.0) public void MultipleIterator::countIterators(void) - Gets the number of attached iterator instances.' flags='130'/>
<tag menu='M' submenu='MultipleIterator class' inserttext='MultipleIterator::current()' hint='(PHP 5>=5.3.0) public void MultipleIterator::current(void) - Gets the registered iterator instances.' flags='130'/>
<tag menu='M' submenu='MultipleIterator class' inserttext='MultipleIterator::detachIterator(|)' hint='(PHP 5>=5.3.0) public void MultipleIterator::detachIterator(Iterator $iterator) - Detaches an iterator.' flags='130'/>
<tag menu='M' submenu='MultipleIterator class' inserttext='MultipleIterator::getFlags()' hint='(PHP 5>=5.3.0) public void MultipleIterator::getFlags(void) - Gets the flag information.' flags='130'/>
<tag menu='M' submenu='MultipleIterator class' inserttext='MultipleIterator::key()' hint='(PHP 5>=5.3.0) public void MultipleIterator::key(void) - Gets the registered iterator instances.' flags='130'/>
<tag menu='M' submenu='MultipleIterator class' inserttext='MultipleIterator::next()' hint='(PHP 5>=5.3.0) public void MultipleIterator::next(void) - Moves all attached iterator instances forward.' flags='130'/>
<tag menu='M' submenu='MultipleIterator class' inserttext='MultipleIterator::rewind()' hint='(PHP 5>=5.3.0) public void MultipleIterator::rewind(void) - Rewinds all attached iterator instances.' flags='130'/>
<tag menu='M' submenu='MultipleIterator class' inserttext='MultipleIterator::setFlags(|)' hint='(PHP 5>=5.3.0) public void MultipleIterator::setFlags(integer $flags) - Sets flags.' flags='130'/>
<tag menu='M' submenu='MultipleIterator class' inserttext='MultipleIterator::valid()' hint='(PHP 5>=5.3.0) public void MultipleIterator::valid(void) - Checks the validity of sub iterators.' flags='130'/>
<tag menu='M' submenu='MySQL-->>m - mysql_fi' inserttext='mysql_affected_rows(|)' hint='(PHP 4, PHP 5) int mysql_affected_rows([resource $link_identifier]) - Get number of affected rows in previous MySQL operation.' flags='130'/>
<tag menu='M' submenu='MySQL-->>m - mysql_fi' inserttext='mysql_client_encoding(|)' hint='(PHP 4>=4.3.0, PHP 5) string mysql_client_encoding([resource $link_identifier]) - Returns the name of the character set.' flags='130'/>
<tag menu='M' submenu='MySQL-->>m - mysql_fi' inserttext='mysql_close(|)' hint='(PHP 4, PHP 5) bool mysql_close([resource $link_identifier]) - Close MySQL connection.' flags='130'/>
<tag menu='M' submenu='MySQL-->>m - mysql_fi' inserttext='mysql_connect(|)' hint='(PHP 4, PHP 5) resource mysql_connect([string $server=ini_get("mysql.default_host") [, string $username=ini_get("mysql.default_user") [, string $password=ini_get("mysql.default_password") [, bool $new_link=false [, int $client_flags=0 ]]]]]) - Open a connection to a MySQL Server.' flags='130'/>
<tag menu='M' submenu='MySQL-->>m - mysql_fi' inserttext='mysql_create_db(|)' hint='(PHP 4, PHP 5) bool mysql_create_db(string $database_name [, resource $link_identifier]) - Create a MySQL database.' flags='130'/>
<tag menu='M' submenu='MySQL-->>m - mysql_fi' inserttext='mysql_data_seek(|)' hint='(PHP 4, PHP 5) bool mysql_data_seek(resource $result, int $row_number) - Move internal result pointer.' flags='130'/>
<tag menu='M' submenu='MySQL-->>m - mysql_fi' inserttext='mysql_db_name(|)' hint='(PHP 4, PHP 5) string mysql_db_name(resource $result, int $row [, mixed $field]) - Get result data.' flags='130'/>
<tag menu='M' submenu='MySQL-->>m - mysql_fi' inserttext='mysql_db_query(|)' hint='(PHP 4, PHP 5) resource mysql_db_query(string $database, string $query [, resource $link_identifier]) - Send a MySQL query.' flags='130'/>
<tag menu='M' submenu='MySQL-->>m - mysql_fi' inserttext='mysql_drop_db(|)' hint='(PHP 4, PHP 5) bool mysql_drop_db(string $database_name [, resource $link_identifier]) - Drop (delete) a MySQL database.' flags='130'/>
<tag menu='M' submenu='MySQL-->>m - mysql_fi' inserttext='mysql_errno(|)' hint='(PHP 4, PHP 5) int mysql_errno([resource $link_identifier]) - Returns the numerical value of the error message from previous MySQL operation.' flags='130'/>
<tag menu='M' submenu='MySQL-->>m - mysql_fi' inserttext='mysql_error(|)' hint='(PHP 4, PHP 5) string mysql_error([resource $link_identifier]) - Returns the text of the error message from previous MySQL operation.' flags='130'/>
<tag menu='M' submenu='MySQL-->>m - mysql_fi' inserttext='mysql_escape_string(|)' hint='(PHP 4>=4.0.3, PHP 5) string mysql_escape_string(string $unescaped_string) - Escapes a string for use in a mysql_query.' flags='130'/>
<tag menu='M' submenu='MySQL-->>m - mysql_fi' inserttext='mysql_fetch_array(|)' hint='(PHP 4, PHP 5) array mysql_fetch_array(resource $result [, int $result_type=MYSQL_BOTH]) - Fetch a result row as an associative array, a numeric array, or both.' flags='130'/>
<tag menu='M' submenu='MySQL-->>m - mysql_fi' inserttext='mysql_fetch_assoc(|)' hint='(PHP 4>=4.0.3, PHP 5) array mysql_fetch_assoc(resource $result) - Fetch a result row as an associative array.' flags='130'/>
<tag menu='M' submenu='MySQL-->>m - mysql_fi' inserttext='mysql_fetch_field(|)' hint='(PHP 4, PHP 5) object mysql_fetch_field(resource $result [, int $field_offset=0]) - Get column information from a result and return as an object.' flags='130'/>
<tag menu='M' submenu='MySQL-->>m - mysql_fi' inserttext='mysql_fetch_lengths(|)' hint='(PHP 4, PHP 5) array mysql_fetch_lengths(resource $result) - Get the length of each output in a result.' flags='130'/>
<tag menu='M' submenu='MySQL-->>m - mysql_fi' inserttext='mysql_fetch_object(|)' hint='(PHP 4, PHP 5) object mysql_fetch_object(resource $result [, string $class_name [, array $params ]]) - Fetch a result row as an object.' flags='130'/>
<tag menu='M' submenu='MySQL-->>m - mysql_fi' inserttext='mysql_fetch_row(|)' hint='(PHP 4, PHP 5) array mysql_fetch_row(resource $result) - Get a result row as an enumerated array.' flags='130'/>
<tag menu='M' submenu='MySQL-->>m - mysql_fi' inserttext='mysql_field_flags(|)' hint='(PHP 4, PHP 5) string mysql_field_flags(resource $result, int $field_offset) - Get the flags associated with the specified field in a result.' flags='130'/>
<tag menu='M' submenu='MySQL-->>m - mysql_fi' inserttext='mysql_field_len(|)' hint='(PHP 4, PHP 5) int mysql_field_len(resource $result, int $field_offset) - Returns the length of the specified field.' flags='130'/>
<tag menu='M' submenu='MySQL-->>m - mysql_fi' inserttext='mysql_field_name(|)' hint='(PHP 4, PHP 5) string mysql_field_name(resource $result, int $field_offset) - Get the name of the specified field in a result.' flags='130'/>
<tag menu='M' submenu='MySQL-->>m - mysql_fi' inserttext='mysql_field_seek(|)' hint='(PHP 4, PHP 5) bool mysql_field_seek(resource $result, int $field_offset) - Set result pointer to a specified field offset.' flags='130'/>
<tag menu='M' submenu='MySQL-->>m - mysql_fi' inserttext='mysql_field_table(|)' hint='(PHP 4, PHP 5) string mysql_field_table(resource $result, int $field_offset) - Get name of the table the specified field is in.' flags='130'/>
<tag menu='M' submenu='MySQL-->>m - mysql_fi' inserttext='mysql_field_type(|)' hint='(PHP 4, PHP 5) string mysql_field_type(resource $result, int $field_offset) - Get the type of the specified field in a result.' flags='130'/>
<tag menu='M' submenu='MySQL-->>mysql_fr - m' inserttext='mysql_free_result(|)' hint='(PHP 4, PHP 5) bool mysql_free_result(resource $result) - Free result memory.' flags='130'/>
<tag menu='M' submenu='MySQL-->>mysql_fr - m' inserttext='mysql_get_client_info()' hint='(PHP 4>=4.0.5, PHP 5) string mysql_get_client_info(void) - Get MySQL client info.' flags='130'/>
<tag menu='M' submenu='MySQL-->>mysql_fr - m' inserttext='mysql_get_host_info(|)' hint='(PHP 4>=4.0.5, PHP 5) string mysql_get_host_info([resource $link_identifier]) - Get MySQL host info.' flags='130'/>
<tag menu='M' submenu='MySQL-->>mysql_fr - m' inserttext='mysql_get_proto_info(|)' hint='(PHP 4>=4.0.5, PHP 5) int mysql_get_proto_info([resource $link_identifier]) - Get MySQL protocol info.' flags='130'/>
<tag menu='M' submenu='MySQL-->>mysql_fr - m' inserttext='mysql_get_server_info(|)' hint='(PHP 4>=4.0.5, PHP 5) string mysql_get_server_info([resource $link_identifier]) - Get MySQL server info.' flags='130'/>
<tag menu='M' submenu='MySQL-->>mysql_fr - m' inserttext='mysql_info(|)' hint='(PHP 4>=4.3.0, PHP 5) string mysql_info([resource $link_identifier]) - Get information about the most recent query.' flags='130'/>
<tag menu='M' submenu='MySQL-->>mysql_fr - m' inserttext='mysql_insert_id(|)' hint='(PHP 4, PHP 5) int mysql_insert_id([resource $link_identifier]) - Get the ID generated in the last query.' flags='130'/>
<tag menu='M' submenu='MySQL-->>mysql_fr - m' inserttext='mysql_list_dbs(|)' hint='(PHP 4, PHP 5) resource mysql_list_dbs([resource $link_identifier]) - List databases available on a MySQL server.' flags='130'/>
<tag menu='M' submenu='MySQL-->>mysql_fr - m' inserttext='mysql_list_fields(|)' hint='(PHP 4, PHP 5) resource mysql_list_fields(string $database_name, string $table_name [, resource $link_identifier]) - List MySQL table fields.' flags='130'/>
<tag menu='M' submenu='MySQL-->>mysql_fr - m' inserttext='mysql_list_processes(|)' hint='(PHP 4>=4.3.0, PHP 5) resource mysql_list_processes([resource $link_identifier]) - List MySQL processes.' flags='130'/>
<tag menu='M' submenu='MySQL-->>mysql_fr - m' inserttext='mysql_list_tables(|)' hint='(PHP 4, PHP 5) resource mysql_list_tables(string $database [, resource $link_identifier]) - List tables in a MySQL database.' flags='130'/>
<tag menu='M' submenu='MySQL-->>mysql_fr - m' inserttext='mysql_num_fields(|)' hint='(PHP 4, PHP 5) int mysql_num_fields(resource $result) - Get number of fields in result.' flags='130'/>
<tag menu='M' submenu='MySQL-->>mysql_fr - m' inserttext='mysql_num_rows(|)' hint='(PHP 4, PHP 5) int mysql_num_rows(resource $result) - Get number of rows in result.' flags='130'/>
<tag menu='M' submenu='MySQL-->>mysql_fr - m' inserttext='mysql_pconnect(|)' hint='(PHP 4, PHP 5) resource mysql_pconnect([string $server=ini_get("mysql.default_host") [, string $username=ini_get("mysql.default_user") [, string $password=ini_get("mysql.default_password") [, int $client_flags ]]]]) - Open a persistent connection to a MySQL server.' flags='130'/>
<tag menu='M' submenu='MySQL-->>mysql_fr - m' inserttext='mysql_ping(|)' hint='(PHP 4>=4.3.0, PHP 5) bool mysql_ping([resource $link_identifier]) - Ping a server connection or reconnect if there is no connection.' flags='130'/>
<tag menu='M' submenu='MySQL-->>mysql_fr - m' inserttext='mysql_query(|)' hint='(PHP 4, PHP 5) resource mysql_query(string $query [, resource $link_identifier]) - Send a MySQL query.' flags='130'/>
<tag menu='M' submenu='MySQL-->>mysql_fr - m' inserttext='mysql_real_escape_string(|)' hint='(PHP 4>=4.3.0, PHP 5) string mysql_real_escape_string(string $unescaped_string [, resource $link_identifier]) - Escapes special characters in a string for use in an SQL statement.' flags='130'/>
<tag menu='M' submenu='MySQL-->>mysql_fr - m' inserttext='mysql_result(|)' hint='(PHP 4, PHP 5) string mysql_result(resource $result, int $row [, mixed $field=0]) - Get result data.' flags='130'/>
<tag menu='M' submenu='MySQL-->>mysql_fr - m' inserttext='mysql_select_db(|)' hint='(PHP 4, PHP 5) bool mysql_select_db(string $database_name [, resource $link_identifier]) - Select a MySQL database.' flags='130'/>
<tag menu='M' submenu='MySQL-->>mysql_fr - m' inserttext='mysql_set_charset(|)' hint='(PHP 5>=5.2.3) bool mysql_set_charset(string $charset [, resource $link_identifier]) - Sets the client character set.' flags='130'/>
<tag menu='M' submenu='MySQL-->>mysql_fr - m' inserttext='mysql_stat(|)' hint='(PHP 4>=4.3.0, PHP 5) string mysql_stat([resource $link_identifier]) - Get current system status.' flags='130'/>
<tag menu='M' submenu='MySQL-->>mysql_fr - m' inserttext='mysql_tablename(|)' hint='(PHP 4, PHP 5) string mysql_tablename(resource $result, int $i) - Get table name of field.' flags='130'/>
<tag menu='M' submenu='MySQL-->>mysql_fr - m' inserttext='mysql_thread_id(|)' hint='(PHP 4>=4.3.0, PHP 5) int mysql_thread_id([resource $link_identifier]) - Return the current thread ID.' flags='130'/>
<tag menu='M' submenu='MySQL-->>mysql_fr - m' inserttext='mysql_unbuffered_query(|)' hint='(PHP 4>=4.0.6, PHP 5) resource mysql_unbuffered_query(string $query [, resource $link_identifier]) - Send an SQL query to MySQL without fetching and buffering the result rows.' flags='130'/>
<tag menu='M' submenu='MySQLi class-->>m - mysqli->t' inserttext='mysqli->affected_rows(|)' hint='(PHP 5) int mysqli::mysqli_affected_rows(mysqli $link) - Gets the number of affected rows in a previous MySQL operation.' flags='130'/>
<tag menu='M' submenu='MySQLi class-->>m - mysqli->t' inserttext='mysqli->client_info(|)' hint='(PHP 5) string mysqli::mysqli_get_client_info(mysqli $link) - Returns the MySQL client version as a string.' flags='130'/>
<tag menu='M' submenu='MySQLi class-->>m - mysqli->t' inserttext='mysqli->client_version(|)' hint='(PHP 5) int mysqli::mysqli_get_client_version(mysqli $link) - Get MySQL client info.' flags='130'/>
<tag menu='M' submenu='MySQLi class-->>m - mysqli->t' inserttext='mysqli->client_version(|)' hint='(PHP 5) int mysqli::mysqli_get_client_version(mysqli $link) - Get MySQL client info.' flags='130'/>
<tag menu='M' submenu='MySQLi class-->>m - mysqli->t' inserttext='mysqli->connect_errno(|)' hint='(PHP 5) int mysqli::mysqli_connect_errno(void) - Returns the error code from last connect call.' flags='130'/>
<tag menu='M' submenu='MySQLi class-->>m - mysqli->t' inserttext='mysqli->connect_error(|)' hint='(PHP 5) string mysqli::mysqli_connect_error(void) - Returns a string description of the last connect error.' flags='130'/>
<tag menu='M' submenu='MySQLi class-->>m - mysqli->t' inserttext='mysqli->errno(|)' hint='(PHP 5) int mysqli::mysqli_errno(mysqli $link) - Returns the error code for the most recent function call.' flags='130'/>
<tag menu='M' submenu='MySQLi class-->>m - mysqli->t' inserttext='mysqli->error(|)' hint='(PHP 5) string mysqli::mysqli_error(mysqli $link) - Returns a string description of the last error.' flags='130'/>
<tag menu='M' submenu='MySQLi class-->>m - mysqli->t' inserttext='mysqli->field_count(|)' hint='(PHP 5) int mysqli_result::mysqli_field_count(mysqli $link) - Returns the number of columns for the most recent query.' flags='130'/>
<tag menu='M' submenu='MySQLi class-->>m - mysqli->t' inserttext='mysqli->get_client_info(|)' hint='(PHP 5) string mysqli::get_client_info(void) - Returns the MySQL client version as a string.' flags='130'/>
<tag menu='M' submenu='MySQLi class-->>m - mysqli->t' inserttext='mysqli->host_info(|)' hint='(PHP 5) string mysqli::mysqli_get_host_info(mysqli $link) - Returns a string representing the type of connection used.' flags='130'/>
<tag menu='M' submenu='MySQLi class-->>m - mysqli->t' inserttext='mysqli->info(|)' hint='(PHP 5) string mysqli::mysqli_info(mysqli $link) - Retrieves information about the most recently executed query.' flags='130'/>
<tag menu='M' submenu='MySQLi class-->>m - mysqli->t' inserttext='mysqli->insert_id(|)' hint='(PHP 5) mixed mysqli::mysqli_insert_id(mysqli $link) - Returns the auto generated id used in the last query.' flags='130'/>
<tag menu='M' submenu='MySQLi class-->>m - mysqli->t' inserttext='mysqli->protocol_version(|)' hint='(PHP 5) int mysqli::mysqli_get_proto_info(mysqli $link) - Returns the version of the MySQL protocol used.' flags='130'/>
<tag menu='M' submenu='MySQLi class-->>m - mysqli->t' inserttext='mysqli->server_info(|)' hint='(PHP 5) string mysqli::mysqli_get_server_info(mysqli $link) - Returns the version of the MySQL server.' flags='130'/>
<tag menu='M' submenu='MySQLi class-->>m - mysqli->t' inserttext='mysqli->server_version(|)' hint='(PHP 5) int mysqli::mysqli_get_server_version(mysqli $link) - Returns the version of the MySQL server as an integer.' flags='130'/>
<tag menu='M' submenu='MySQLi class-->>m - mysqli->t' inserttext='mysqli->sqlstate(|)' hint='(PHP 5) string mysqli::mysqli_sqlstate(mysqli $link) - Returns the SQLSTATE error from previous MySQL operation.' flags='130'/>
<tag menu='M' submenu='MySQLi class-->>m - mysqli->t' inserttext='mysqli->thread_id(|)' hint='(PHP 5) int mysqli::mysqli_thread_id(mysqli $link) - Returns the thread ID for the current connection.' flags='130'/>
<tag menu='M' submenu='MySQLi class-->>mysqli->w - mysqli::o' inserttext='mysqli->warning_count(|)' hint='(PHP 5) int mysqli::mysqli_warning_count(mysqli $link) - Returns the number of warnings from the last query for the given link.' flags='130'/>
<tag menu='M' submenu='MySQLi class-->>mysqli->w - mysqli::o' inserttext='mysqli::__construct(|)' hint='(PHP 5) mysqli mysqli_connect([string $host=ini_get("mysqli.default_host") [, string $username=ini_get("mysqli.default_user") [, string $passwd=ini_get("mysqli.default_pw") [, string $dbname="" [, int $port=ini_get("mysqli.default_port") [, string $socket=ini_get("mysqli.default_socket") ]]]]]]) - Open a new connection to the MySQL server.' flags='130'/>
<tag menu='M' submenu='MySQLi class-->>mysqli->w - mysqli::o' inserttext='mysqli::autocommit(|)' hint='(PHP 5) bool mysqli::autocommit(bool $mode) - Turns on or off auto-commiting database modifications.' flags='130'/>
<tag menu='M' submenu='MySQLi class-->>mysqli->w - mysqli::o' inserttext='mysqli::change_user(|)' hint='(PHP 5) bool mysqli::change_user(string $user, string $password, string $database) - Changes the user of the specified database connection.' flags='130'/>
<tag menu='M' submenu='MySQLi class-->>mysqli->w - mysqli::o' inserttext='mysqli::character_set_name()' hint='(PHP 5) string mysqli::character_set_name(void) - Returns the default character set for the database connection.' flags='130'/>
<tag menu='M' submenu='MySQLi class-->>mysqli->w - mysqli::o' inserttext='mysqli::close()' hint='(PHP 5) bool mysqli::close(void) - Closes a previously opened database connection.' flags='130'/>
<tag menu='M' submenu='MySQLi class-->>mysqli->w - mysqli::o' inserttext='mysqli::commit()' hint='(PHP 5) bool mysqli::commit(void) - Commits the current transaction.' flags='130'/>
<tag menu='M' submenu='MySQLi class-->>mysqli->w - mysqli::o' inserttext='mysqli::debug(|)' hint='(PHP 5) bool mysqli::debug(string $message) - Performs debugging operations.' flags='130'/>
<tag menu='M' submenu='MySQLi class-->>mysqli->w - mysqli::o' inserttext='mysqli::dump_debug_info()' hint='(PHP 5) bool mysqli::dump_debug_info(void) - Dump debugging information into the log.' flags='130'/>
<tag menu='M' submenu='MySQLi class-->>mysqli->w - mysqli::o' inserttext='mysqli::get_charset()' hint='(PHP 5>=5.1.0) object mysqli::get_charset(void) - Returns a character set object.' flags='130'/>
<tag menu='M' submenu='MySQLi class-->>mysqli->w - mysqli::o' inserttext='mysqli::get_connection_stats()' hint='(PHP 5>=5.3.0) bool mysqli::get_connection_stats(void) - Returns statistics about the client connection.' flags='130'/>
<tag menu='M' submenu='MySQLi class-->>mysqli->w - mysqli::o' inserttext='mysqli::get_warnings()' hint='(PHP 5>=5.1.0) mysqli_warning mysqli::get_warnings(void) - Get result of SHOW WARNINGS.' flags='130'/>
<tag menu='M' submenu='MySQLi class-->>mysqli->w - mysqli::o' inserttext='mysqli::init()' hint='(PHP 5) mysqli mysqli::init(void) - Initializes MySQLi and returns a resource for use with mysqli_real_connect().' flags='130'/>
<tag menu='M' submenu='MySQLi class-->>mysqli->w - mysqli::o' inserttext='mysqli::kill(|)' hint='(PHP 5) bool mysqli::kill(int $processid) - Asks the server to kill a MySQL thread.' flags='130'/>
<tag menu='M' submenu='MySQLi class-->>mysqli->w - mysqli::o' inserttext='mysqli::more_results()' hint='(PHP 5) bool mysqli::more_results(void) - Check if there are any more query results from a multi query.' flags='130'/>
<tag menu='M' submenu='MySQLi class-->>mysqli->w - mysqli::o' inserttext='mysqli::multi_query(|)' hint='(PHP 5) bool mysqli::multi_query(string $query) - Performs a query on the database.' flags='130'/>
<tag menu='M' submenu='MySQLi class-->>mysqli->w - mysqli::o' inserttext='mysqli::next_result()' hint='(PHP 5) bool mysqli::next_result(void) - Prepare next result from multi_query.' flags='130'/>
<tag menu='M' submenu='MySQLi class-->>mysqli->w - mysqli::o' inserttext='mysqli::options(|)' hint='(PHP 5) bool mysqli::options(int $option, mixed $value) - Set options.' flags='130'/>
<tag menu='M' submenu='MySQLi class-->>mysqli::p - m' inserttext='mysqli::ping()' hint='(PHP 5) bool mysqli::ping(void) - Pings a server connection, or tries to reconnect if the connection has gone down.' flags='130'/>
<tag menu='M' submenu='MySQLi class-->>mysqli::p - m' inserttext='mysqli::poll(|)' hint='(PHP 5>=5.3.0) public int mysqli::poll(array &amp;$read, array &amp;$error, array &amp;$reject, int $sec [, int $usec]) - Poll connections.' flags='130'/>
<tag menu='M' submenu='MySQLi class-->>mysqli::p - m' inserttext='mysqli::prepare(|)' hint='(PHP 5) mysqli_stmt mysqli::prepare(string $query) - Prepare an SQL statement for execution.' flags='130'/>
<tag menu='M' submenu='MySQLi class-->>mysqli::p - m' inserttext='mysqli::query(|)' hint='(PHP 5) mixed mysqli::query(string $query [, int $resultmode]) - Performs a query on the database.' flags='130'/>
<tag menu='M' submenu='MySQLi class-->>mysqli::p - m' inserttext='mysqli::real_connect(|)' hint='(PHP 5) bool mysqli::real_connect([string $host [, string $username [, string $passwd [, string $dbname [, int $port [, string $socket [, int $flags ]]]]]]]) - Opens a connection to a mysql server.' flags='130'/>
<tag menu='M' submenu='MySQLi class-->>mysqli::p - m' inserttext='mysqli::real_escape_string(|)' hint='(PHP 5) string mysqli::escape_string(string $escapestr) - Escapes special characters in a string for use in an SQL statement, taking into account the current charset of the connection.' flags='130'/>
<tag menu='M' submenu='MySQLi class-->>mysqli::p - m' inserttext='mysqli::real_query(|)' hint='(PHP 5) bool mysqli::real_query(string $query) - Execute an SQL query.' flags='130'/>
<tag menu='M' submenu='MySQLi class-->>mysqli::p - m' inserttext='mysqli::reap_async_query()' hint='(PHP 5>=5.3.0) public mysqli_result mysqli::reap_async_query(void) - Get result from async query.' flags='130'/>
<tag menu='M' submenu='MySQLi class-->>mysqli::p - m' inserttext='mysqli::rollback()' hint='(PHP 5) bool mysqli::rollback(void) - Rolls back current transaction.' flags='130'/>
<tag menu='M' submenu='MySQLi class-->>mysqli::p - m' inserttext='mysqli::select_db(|)' hint='(PHP 5) bool mysqli::select_db(string $dbname) - Selects the default database for database queries.' flags='130'/>
<tag menu='M' submenu='MySQLi class-->>mysqli::p - m' inserttext='mysqli::set_charset(|)' hint='(PHP 5>=5.0.5) bool mysqli::set_charset(string $charset) - Sets the default client character set.' flags='130'/>
<tag menu='M' submenu='MySQLi class-->>mysqli::p - m' inserttext='mysqli::set_local_infile_default(|)' hint='(PHP 5) void mysqli_set_local_infile_default(mysqli $link) - Unsets user defined handler for load local infile command.' flags='130'/>
<tag menu='M' submenu='MySQLi class-->>mysqli::p - m' inserttext='mysqli::set_local_infile_handler(|)' hint='(PHP 5) bool mysqli::set_local_infile_handler(mysqli $link, callback $read_func) - Set callback function for LOAD DATA LOCAL INFILE command.' flags='130'/>
<tag menu='M' submenu='MySQLi class-->>mysqli::p - m' inserttext='mysqli::ssl_set(|)' hint='(PHP 5) bool mysqli::ssl_set(string $key, string $cert, string $ca, string $capath, string $cipher) - Used for establishing secure connections using SSL.' flags='130'/>
<tag menu='M' submenu='MySQLi class-->>mysqli::p - m' inserttext='mysqli::stat()' hint='(PHP 5) string mysqli::stat(void) - Gets the current system status.' flags='130'/>
<tag menu='M' submenu='MySQLi class-->>mysqli::p - m' inserttext='mysqli::stmt_init()' hint='(PHP 5) mysqli_stmt mysqli::stmt_init(void) - Initializes a statement and returns an object for use with mysqli_stmt_prepare.' flags='130'/>
<tag menu='M' submenu='MySQLi class-->>mysqli::p - m' inserttext='mysqli::store_result()' hint='(PHP 5) mysqli_result mysqli::store_result(void) - Transfers a result set from the last query.' flags='130'/>
<tag menu='M' submenu='MySQLi class-->>mysqli::p - m' inserttext='mysqli::thread_safe(|)' hint='(PHP 5) bool mysqli_thread_safe(void) - Returns whether thread safety is given or not.' flags='130'/>
<tag menu='M' submenu='MySQLi class-->>mysqli::p - m' inserttext='mysqli::use_result()' hint='(PHP 5) mysqli_result mysqli::use_result(void) - Initiate a result set retrieval.' flags='130'/>
<tag menu='M' submenu='MySQLi_Driver class' inserttext='mysqli_driver::embedded_server_end()' hint='(PHP 5) void mysqli_driver::embedded_server_end(void) - Stop embedded server.' flags='130'/>
<tag menu='M' submenu='MySQLi_Driver class' inserttext='mysqli_driver::embedded_server_start(|)' hint='(PHP 5) bool mysqli_driver::embedded_server_start(bool $start, array $arguments, array $groups) - Initialize and start embedded server.' flags='130'/>
<tag menu='M' submenu='MySQLi_Result class' inserttext='mysqli_result->current_field(|)' hint='(PHP 5) int mysqli_result::mysqli_field_tell(mysqli_result $result) - Get current field offset of a result pointer.' flags='130'/>
<tag menu='M' submenu='MySQLi_Result class' inserttext='mysqli_result->field_count(|)' hint='(PHP 5) int mysqli_result::mysqli_num_fields(mysqli_result $result) - Get the number of fields in a result.' flags='130'/>
<tag menu='M' submenu='MySQLi_Result class' inserttext='mysqli_result->lengths(|)' hint='(PHP 5) array mysqli_result::mysqli_fetch_lengths(mysqli_result $result) - Returns the lengths of the columns of the current row in the result set.' flags='130'/>
<tag menu='M' submenu='MySQLi_Result class' inserttext='mysqli_result->num_rows(|)' hint='(PHP 5) int mysqli_result::mysqli_num_rows(mysqli_result $result) - Gets the number of rows in a result.' flags='130'/>
<tag menu='M' submenu='MySQLi_Result class' inserttext='mysqli_result::data_seek(|)' hint='(PHP 5) bool mysqli_result::data_seek(int $offset) - Adjusts the result pointer to an arbitary row in the result.' flags='130'/>
<tag menu='M' submenu='MySQLi_Result class' inserttext='mysqli_result::fetch_all(|)' hint='(PHP 5>=5.3.0) mixed mysqli_result::fetch_all([int $resulttype=MYSQLI_NUM]) - Fetches all result rows as an associative array, a numeric array, or both.' flags='130'/>
<tag menu='M' submenu='MySQLi_Result class' inserttext='mysqli_result::fetch_array(|)' hint='(PHP 5) mixed mysqli_result::fetch_array([int $resulttype=MYSQLI_BOTH]) - Fetch a result row as an associative, a numeric array, or both.' flags='130'/>
<tag menu='M' submenu='MySQLi_Result class' inserttext='mysqli_result::fetch_assoc()' hint='(PHP 5) array mysqli_result::fetch_assoc(void) - Fetch a result row as an associative array.' flags='130'/>
<tag menu='M' submenu='MySQLi_Result class' inserttext='mysqli_result::fetch_field()' hint='(PHP 5) object mysqli_result::fetch_field(void) - Returns the next field in the result set.' flags='130'/>
<tag menu='M' submenu='MySQLi_Result class' inserttext='mysqli_result::fetch_field_direct(|)' hint='(PHP 5) object mysqli_result::fetch_field_direct(int $fieldnr) - Fetch meta-data for a single field.' flags='130'/>
<tag menu='M' submenu='MySQLi_Result class' inserttext='mysqli_result::fetch_fields()' hint='(PHP 5) array mysqli_result::fetch_fields(void) - Returns an array of objects representing the fields in a result set.' flags='130'/>
<tag menu='M' submenu='MySQLi_Result class' inserttext='mysqli_result::fetch_object(|)' hint='(PHP 5) object mysqli_result::fetch_object([string $class_name [, array $params ]]) - Returns the current row of a result set as an object.' flags='130'/>
<tag menu='M' submenu='MySQLi_Result class' inserttext='mysqli_result::fetch_row()' hint='(PHP 5) mixed mysqli_result::fetch_row(void) - Get a result row as an enumerated array.' flags='130'/>
<tag menu='M' submenu='MySQLi_Result class' inserttext='mysqli_result::field_seek(|)' hint='(PHP 5) bool mysqli_result::field_seek(int $fieldnr) - Set result pointer to a specified field offset.' flags='130'/>
<tag menu='M' submenu='MySQLi_Result class' inserttext='mysqli_result::free()' hint='(PHP 5) void mysqli_result::free(void) - Frees the memory associated with a result.' flags='130'/>
<tag menu='M' submenu='MySQLi_STMT class' inserttext='mysqli_stmt->affected_rows(|)' hint='(PHP 5) int mysqli_stmt::mysqli_stmt_affected_rows(mysqli_stmt $stmt) - Returns the total number of rows changed, deleted, or inserted by the last executed statement.' flags='130'/>
<tag menu='M' submenu='MySQLi_STMT class' inserttext='mysqli_stmt->errno(|)' hint='(PHP 5) int mysqli_stmt::mysqli_stmt_errno(mysqli_stmt $stmt) - Returns the error code for the most recent statement call.' flags='130'/>
<tag menu='M' submenu='MySQLi_STMT class' inserttext='mysqli_stmt->error(|)' hint='(PHP 5) string mysqli_stmt::mysqli_stmt_error(mysqli_stmt $stmt) - Returns a string description for last statement error.' flags='130'/>
<tag menu='M' submenu='MySQLi_STMT class' inserttext='mysqli_stmt->field_count(|)' hint='(PHP 5) int mysqli_stmt::mysqli_stmt_field_count(mysqli_stmt $stmt) - Returns the number of field in the given statement.' flags='130'/>
<tag menu='M' submenu='MySQLi_STMT class' inserttext='mysqli_stmt->insert_id(|)' hint='(PHP 5) mixed mysqli_stmt::mysqli_stmt_insert_id(mysqli_stmt $stmt) - Get the ID generated from the previous INSERT operation.' flags='130'/>
<tag menu='M' submenu='MySQLi_STMT class' inserttext='mysqli_stmt->param_count(|)' hint='(PHP 5) int mysqli_stmt::mysqli_stmt_param_count(mysqli_stmt $stmt) - Returns the number of parameter for the given statement.' flags='130'/>
<tag menu='M' submenu='MySQLi_STMT class' inserttext='mysqli_stmt::attr_get(|)' hint='(PHP 5) int mysqli_stmt::attr_get(int $attr) - Used to get the current value of a statement attribute.' flags='130'/>
<tag menu='M' submenu='MySQLi_STMT class' inserttext='mysqli_stmt::attr_set(|)' hint='(PHP 5) bool mysqli_stmt::attr_set(int $attr, int $mode) - Used to modify the behavior of a prepared statement.' flags='130'/>
<tag menu='M' submenu='MySQLi_STMT class' inserttext='mysqli_stmt::bind_param(|)' hint='(PHP 5) bool mysqli_stmt::bind_param(string $types, mixed &amp;$var1 [, mixed &amp;$...]) - Binds variables to a prepared statement as parameters.' flags='130'/>
<tag menu='M' submenu='MySQLi_STMT class' inserttext='mysqli_stmt::bind_result(|)' hint='(PHP 5) bool mysqli_stmt::bind_result(mixed &amp;$var1 [, mixed &amp;$...]) - Binds variables to a prepared statement for result storage.' flags='130'/>
<tag menu='M' submenu='MySQLi_STMT class' inserttext='mysqli_stmt::close()' hint='(PHP 5) bool mysqli_stmt::close(void) - Closes a prepared statement.' flags='130'/>
<tag menu='M' submenu='MySQLi_STMT class' inserttext='mysqli_stmt::data_seek(|)' hint='(PHP 5) void mysqli_stmt::data_seek(int $offset) - Seeks to an arbitrary row in statement result set.' flags='130'/>
<tag menu='M' submenu='MySQLi_STMT class' inserttext='mysqli_stmt::execute()' hint='(PHP 5) bool mysqli_stmt::execute(void) - Executes a prepared Query.' flags='130'/>
<tag menu='M' submenu='MySQLi_STMT class' inserttext='mysqli_stmt::fetch()' hint='(PHP 5) bool mysqli_stmt::fetch(void) - Fetch results from a prepared statement into the bound variables.' flags='130'/>
<tag menu='M' submenu='MySQLi_STMT class' inserttext='mysqli_stmt::free_result()' hint='(PHP 5) void mysqli_stmt::free_result(void) - Frees stored result memory for the given statement handle.' flags='130'/>
<tag menu='M' submenu='MySQLi_STMT class' inserttext='mysqli_stmt::get_warnings(|)' hint='(PHP 5>=5.1.0) object mysqli_stmt::get_warnings(mysqli_stmt $stmt) - Get result of SHOW WARNINGS.' flags='130'/>
<tag menu='M' submenu='MySQLi_STMT class' inserttext='mysqli_stmt::num_rows(|)' hint='(PHP 5) int mysqli_stmt::mysqli_stmt_num_rows(mysqli_stmt $stmt) - Return the number of rows in statements result set.' flags='130'/>
<tag menu='M' submenu='MySQLi_STMT class' inserttext='mysqli_stmt::prepare(|)' hint='(PHP 5) mixed mysqli_stmt::prepare(string $query) - Prepare an SQL statement for execution.' flags='130'/>
<tag menu='M' submenu='MySQLi_STMT class' inserttext='mysqli_stmt::reset()' hint='(PHP 5) bool mysqli_stmt::reset(void) - Resets a prepared statement.' flags='130'/>
<tag menu='M' submenu='MySQLi_STMT class' inserttext='mysqli_stmt::result_metadata()' hint='(PHP 5) mysqli_result mysqli_stmt::result_metadata(void) - Returns result set metadata from a prepared statement.' flags='130'/>
<tag menu='M' submenu='MySQLi_STMT class' inserttext='mysqli_stmt::send_long_data(|)' hint='(PHP 5) bool mysqli_stmt::send_long_data(int $param_nr, string $data) - Send data in blocks.' flags='130'/>
<tag menu='M' submenu='MySQLi_STMT class' inserttext='mysqli_stmt::sqlstate(|)' hint='(PHP 5) string mysqli_stmt::mysqli_stmt_sqlstate(mysqli_stmt $stmt) - Returns SQLSTATE error from previous statement operation.' flags='130'/>
<tag menu='M' submenu='MySQLi_STMT class' inserttext='mysqli_stmt::store_result()' hint='(PHP 5) bool mysqli_stmt::store_result(void) - Transfers a result set from a prepared statement.' flags='130'/>
<tag menu='M' submenu='mSQL-->>m - msql_field_ta' inserttext='msql(|)' hint='(PHP 4, PHP 5) Alias of msql_db_query().' flags='130'/>
<tag menu='M' submenu='mSQL-->>m - msql_field_ta' inserttext='msql_affected_rows(|)' hint='(PHP 4, PHP 5) int msql_affected_rows(resource $result) - Returns number of affected rows.' flags='130'/>
<tag menu='M' submenu='mSQL-->>m - msql_field_ta' inserttext='msql_close(|)' hint='(PHP 4, PHP 5) bool msql_close([resource $link_identifier]) - Close mSQL connection.' flags='130'/>
<tag menu='M' submenu='mSQL-->>m - msql_field_ta' inserttext='msql_connect(|)' hint='(PHP 4, PHP 5) resource msql_connect([string $hostname]) - Open mSQL connection.' flags='130'/>
<tag menu='M' submenu='mSQL-->>m - msql_field_ta' inserttext='msql_create_db(|)' hint='(PHP 4, PHP 5) bool msql_create_db(string $database_name [, resource $link_identifier]) - Create mSQL database.' flags='130'/>
<tag menu='M' submenu='mSQL-->>m - msql_field_ta' inserttext='msql_createdb(|)' hint='(PHP 4, PHP 5) Alias of msql_create_db().' flags='130'/>
<tag menu='M' submenu='mSQL-->>m - msql_field_ta' inserttext='msql_data_seek(|)' hint='(PHP 4, PHP 5) bool msql_data_seek(resource $result, int $row_number) - Move internal row pointer.' flags='130'/>
<tag menu='M' submenu='mSQL-->>m - msql_field_ta' inserttext='msql_db_query(|)' hint='(PHP 4, PHP 5) resource msql_db_query(string $database, string $query [, resource $link_identifier]) - Send mSQL query.' flags='130'/>
<tag menu='M' submenu='mSQL-->>m - msql_field_ta' inserttext='msql_dbname(|)' hint='(PHP 4, PHP 5) Alias of msql_result().' flags='130'/>
<tag menu='M' submenu='mSQL-->>m - msql_field_ta' inserttext='msql_drop_db(|)' hint='(PHP 4, PHP 5) bool msql_drop_db(string $database_name [, resource $link_identifier]) - Drop (delete) mSQL database.' flags='130'/>
<tag menu='M' submenu='mSQL-->>m - msql_field_ta' inserttext='msql_error()' hint='(PHP 4, PHP 5) string msql_error(void) - Returns error message of last msql call.' flags='130'/>
<tag menu='M' submenu='mSQL-->>m - msql_field_ta' inserttext='msql_fetch_array(|)' hint='(PHP 4, PHP 5) array msql_fetch_array(resource $result [, int $result_type]) - Fetch row as array.' flags='130'/>
<tag menu='M' submenu='mSQL-->>m - msql_field_ta' inserttext='msql_fetch_field(|)' hint='(PHP 4, PHP 5) object msql_fetch_field(resource $result [, int $field_offset]) - Get field information.' flags='130'/>
<tag menu='M' submenu='mSQL-->>m - msql_field_ta' inserttext='msql_fetch_object(|)' hint='(PHP 4, PHP 5) object msql_fetch_object(resource $result) - Fetch row as object.' flags='130'/>
<tag menu='M' submenu='mSQL-->>m - msql_field_ta' inserttext='msql_fetch_row(|)' hint='(PHP 4, PHP 5) array msql_fetch_row(resource $result) - Get row as enumerated array.' flags='130'/>
<tag menu='M' submenu='mSQL-->>m - msql_field_ta' inserttext='msql_field_flags(|)' hint='(PHP 4, PHP 5) string msql_field_flags(resource $result, int $field_offset) - Get field flags.' flags='130'/>
<tag menu='M' submenu='mSQL-->>m - msql_field_ta' inserttext='msql_field_len(|)' hint='(PHP 4, PHP 5) int msql_field_len(resource $result, int $field_offset) - Get field length.' flags='130'/>
<tag menu='M' submenu='mSQL-->>m - msql_field_ta' inserttext='msql_field_name(|)' hint='(PHP 4, PHP 5) string msql_field_name(resource $result, int $field_offset) - Get the name of the specified field in a result.' flags='130'/>
<tag menu='M' submenu='mSQL-->>m - msql_field_ta' inserttext='msql_field_seek(|)' hint='(PHP 4, PHP 5) bool msql_field_seek(resource $result, int $field_offset) - Set field offset.' flags='130'/>
<tag menu='M' submenu='mSQL-->>m - msql_field_ta' inserttext='msql_field_table(|)' hint='(PHP 4, PHP 5) int msql_field_table(resource $result, int $field_offset) - Get table name for field.' flags='130'/>
<tag menu='M' submenu='mSQL-->>msql_field_ty - m' inserttext='msql_field_type(|)' hint='(PHP 4, PHP 5) string msql_field_type(resource $result, int $field_offset) - Get field type.' flags='130'/>
<tag menu='M' submenu='mSQL-->>msql_field_ty - m' inserttext='msql_fieldflags(|)' hint='(PHP 4, PHP 5) Alias of msql_field_flags().' flags='130'/>
<tag menu='M' submenu='mSQL-->>msql_field_ty - m' inserttext='msql_fieldlen(|)' hint='(PHP 4, PHP 5) Alias of msql_field_len().' flags='130'/>
<tag menu='M' submenu='mSQL-->>msql_field_ty - m' inserttext='msql_fieldname(|)' hint='(PHP 4, PHP 5) Alias of msql_field_name().' flags='130'/>
<tag menu='M' submenu='mSQL-->>msql_field_ty - m' inserttext='msql_fieldtable(|)' hint='(PHP 4, PHP 5) Alias of msql_field_table().' flags='130'/>
<tag menu='M' submenu='mSQL-->>msql_field_ty - m' inserttext='msql_fieldtype(|)' hint='(PHP 4, PHP 5) Alias of msql_field_type().' flags='130'/>
<tag menu='M' submenu='mSQL-->>msql_field_ty - m' inserttext='msql_free_result(|)' hint='(PHP 4, PHP 5) bool msql_free_result(resource $result) - Free result memory.' flags='130'/>
<tag menu='M' submenu='mSQL-->>msql_field_ty - m' inserttext='msql_list_dbs(|)' hint='(PHP 4, PHP 5) resource msql_list_dbs([resource $link_identifier]) - List mSQL databases on server.' flags='130'/>
<tag menu='M' submenu='mSQL-->>msql_field_ty - m' inserttext='msql_list_fields(|)' hint='(PHP 4, PHP 5) resource msql_list_fields(string $database, string $tablename [, resource $link_identifier]) - List result fields.' flags='130'/>
<tag menu='M' submenu='mSQL-->>msql_field_ty - m' inserttext='msql_list_tables(|)' hint='(PHP 4, PHP 5) resource msql_list_tables(string $database [, resource $link_identifier]) - List tables in an mSQL database.' flags='130'/>
<tag menu='M' submenu='mSQL-->>msql_field_ty - m' inserttext='msql_num_fields(|)' hint='(PHP 4, PHP 5) int msql_num_fields(resource $result) - Get number of fields in result.' flags='130'/>
<tag menu='M' submenu='mSQL-->>msql_field_ty - m' inserttext='msql_num_rows(|)' hint='(PHP 4, PHP 5) int msql_num_rows(resource $query_identifier) - Get number of rows in result.' flags='130'/>
<tag menu='M' submenu='mSQL-->>msql_field_ty - m' inserttext='msql_numfields(|)' hint='(PHP 4, PHP 5) Alias of msql_num_fields().' flags='130'/>
<tag menu='M' submenu='mSQL-->>msql_field_ty - m' inserttext='msql_numrows(|)' hint='(PHP 4, PHP 5) Alias of msql_num_rows().' flags='130'/>
<tag menu='M' submenu='mSQL-->>msql_field_ty - m' inserttext='msql_pconnect(|)' hint='(PHP 4, PHP 5) resource msql_pconnect([string $hostname]) - Open persistent mSQL connection.' flags='130'/>
<tag menu='M' submenu='mSQL-->>msql_field_ty - m' inserttext='msql_query(|)' hint='(PHP 4, PHP 5) resource msql_query(string $query [, resource $link_identifier]) - Send mSQL query.' flags='130'/>
<tag menu='M' submenu='mSQL-->>msql_field_ty - m' inserttext='msql_regcase(|)' hint='(PHP 4, PHP 5) Alias of sql_regcase().' flags='130'/>
<tag menu='M' submenu='mSQL-->>msql_field_ty - m' inserttext='msql_result(|)' hint='(PHP 4, PHP 5) string msql_result(resource $result, int $row [, mixed $field]) - Get result data.' flags='130'/>
<tag menu='M' submenu='mSQL-->>msql_field_ty - m' inserttext='msql_select_db(|)' hint='(PHP 4, PHP 5) bool msql_select_db(string $database_name [, resource $link_identifier]) - Select mSQL database.' flags='130'/>
<tag menu='M' submenu='mSQL-->>msql_field_ty - m' inserttext='msql_tablename(|)' hint='(PHP 4, PHP 5) Alias of msql_result().' flags='130'/>
<tag menu='M' submenu='mnoGoSearch' inserttext='udm_add_search_limit(|)' hint='(PHP 4>=4.0.5, PHP 5&lt;=5.0.5, PECL mnogosearch>=1.0.0) bool udm_add_search_limit(resource $agent, int $var, string $val) - Add various search limits.' flags='130'/>
<tag menu='M' submenu='mnoGoSearch' inserttext='udm_alloc_agent(|)' hint='(PHP 4>=4.0.5, PHP 5&lt;=5.0.5, PECL mnogosearch>=1.0.0) resource udm_alloc_agent(string $dbaddr [, string $dbmode]) - Allocate mnoGoSearch session.' flags='130'/>
<tag menu='M' submenu='mnoGoSearch' inserttext='udm_alloc_agent_array(|)' hint='(PHP 4>=4.3.3, PHP 5&lt;=5.0.5, PECL mnogosearch>=1.0.0) resource udm_alloc_agent_array(array $databases) - Allocate mnoGoSearch session.' flags='130'/>
<tag menu='M' submenu='mnoGoSearch' inserttext='udm_api_version()' hint='(PHP 4>=4.0.5, PHP 5&lt;=5.0.5, PECL mnogosearch>=1.0.0) int udm_api_version(void) - Get mnoGoSearch API version.' flags='130'/>
<tag menu='M' submenu='mnoGoSearch' inserttext='udm_cat_list(|)' hint='(PHP 4>=4.0.6, PHP 5&lt;=5.0.5, PECL mnogosearch>=1.0.0) array udm_cat_list(resource $agent, string $category) - Get all the categories on the same level with the current one.' flags='130'/>
<tag menu='M' submenu='mnoGoSearch' inserttext='udm_cat_path(|)' hint='(PHP 4>=4.0.6, PHP 5&lt;=5.0.5, PECL mnogosearch>=1.0.0) array udm_cat_path(resource $agent, string $category) - Get the path to the current category.' flags='130'/>
<tag menu='M' submenu='mnoGoSearch' inserttext='udm_check_charset(|)' hint='(PHP 4>=4.2.0, PHP 5&lt;=5.0.5, PECL mnogosearch>=1.0.0) bool udm_check_charset(resource $agent, string $charset) - Check if the given charset is known to mnogosearch.' flags='130'/>
<tag menu='M' submenu='mnoGoSearch' inserttext='udm_check_stored(|)' hint='(PHP 4>=4.2.0) int udm_check_stored(resource $agent, int $link, string $doc_id) - Check connection to stored.' flags='130'/>
<tag menu='M' submenu='mnoGoSearch' inserttext='udm_clear_search_limits(|)' hint='(PHP 4>=4.0.5, PHP 5&lt;=5.0.5, PECL mnogosearch>=1.0.0) bool udm_clear_search_limits(resource $agent) - Clear all mnoGoSearch search restrictions.' flags='130'/>
<tag menu='M' submenu='mnoGoSearch' inserttext='udm_close_stored(|)' hint='(PHP 4>=4.2.0) int udm_close_stored(resource $agent, int $link) - Close connection to stored.' flags='130'/>
<tag menu='M' submenu='mnoGoSearch' inserttext='udm_crc32(|)' hint='(PHP 4>=4.2.0, PHP 5&lt;=5.0.5, PECL mnogosearch>=1.0.0) int udm_crc32(resource $agent, string $str) - Return CRC32 checksum of given string.' flags='130'/>
<tag menu='M' submenu='mnoGoSearch' inserttext='udm_errno(|)' hint='(PHP 4>=4.0.5, PHP 5&lt;=5.0.5, PECL mnogosearch>=1.0.0) int udm_errno(resource $agent) - Get mnoGoSearch error number.' flags='130'/>
<tag menu='M' submenu='mnoGoSearch' inserttext='udm_error(|)' hint='(PHP 4>=4.0.5, PHP 5&lt;=5.0.5, PECL mnogosearch>=1.0.0) string udm_error(resource $agent) - Get mnoGoSearch error message.' flags='130'/>
<tag menu='M' submenu='mnoGoSearch' inserttext='udm_find(|)' hint='(PHP 4>=4.0.5, PHP 5&lt;=5.0.5, PECL mnogosearch>=1.0.0) resource udm_find(resource $agent, string $query) - Perform search.' flags='130'/>
<tag menu='M' submenu='mnoGoSearch' inserttext='udm_free_agent(|)' hint='(PHP 4>=4.0.5, PHP 5&lt;=5.0.5, PECL mnogosearch>=1.0.0) int udm_free_agent(resource $agent) - Free mnoGoSearch session.' flags='130'/>
<tag menu='M' submenu='mnoGoSearch' inserttext='udm_free_ispell_data(|)' hint='(PHP 4>=4.0.5, PHP 5&lt;=5.0.5, PECL mnogosearch>=1.0.0) bool udm_free_ispell_data(int $agent) - Free memory allocated for ispell data.' flags='130'/>
<tag menu='M' submenu='mnoGoSearch' inserttext='udm_free_res(|)' hint='(PHP 4>=4.0.5, PHP 5&lt;=5.0.5, PECL mnogosearch>=1.0.0) bool udm_free_res(resource $res) - Free mnoGoSearch result.' flags='130'/>
<tag menu='M' submenu='mnoGoSearch' inserttext='udm_get_doc_count(|)' hint='(PHP 4>=4.0.5, PHP 5&lt;=5.0.5, PECL mnogosearch>=1.0.0) int udm_get_doc_count(resource $agent) - Get total number of documents in database.' flags='130'/>
<tag menu='M' submenu='mnoGoSearch' inserttext='udm_get_res_field(|)' hint='(PHP 4>=4.0.5, PHP 5&lt;=5.0.5, PECL mnogosearch>=1.0.0) string udm_get_res_field(resource $res, int $row, int $field) - Fetch a result field.' flags='130'/>
<tag menu='M' submenu='mnoGoSearch' inserttext='udm_get_res_param(|)' hint='(PHP 4>=4.0.5, PHP 5&lt;=5.0.5, PECL mnogosearch>=1.0.0) string udm_get_res_param(resource $res, int $param) - Get mnoGoSearch result parameters.' flags='130'/>
<tag menu='M' submenu='mnoGoSearch' inserttext='udm_hash32(|)' hint='(PHP 4>=4.3.3, PHP 5&lt;=5.0.5, PECL mnogosearch>=1.0.0) int udm_hash32(resource $agent, string $str) - Return Hash32 checksum of gived string.' flags='130'/>
<tag menu='M' submenu='mnoGoSearch' inserttext='udm_load_ispell_data(|)' hint='(PHP 4>=4.0.5, PHP 5&lt;=5.0.5, PECL mnogosearch>=1.0.0) bool udm_load_ispell_data(resource $agent, int $var, string $val1, string $val2, int $flag) - Load ispell data.' flags='130'/>
<tag menu='M' submenu='mnoGoSearch' inserttext='udm_open_stored(|)' hint='(PHP 4>=4.2.0) int udm_open_stored(resource $agent, string $storedaddr) - Open connection to stored.' flags='130'/>
<tag menu='M' submenu='mnoGoSearch' inserttext='udm_set_agent_param(|)' hint='(PHP 4>=4.0.5, PHP 5&lt;=5.0.5, PECL mnogosearch>=1.0.0) bool udm_set_agent_param(resource $agent, int $var, string $val) - Set mnoGoSearch agent session parameters.' flags='130'/>
<tag menu='N' submenu='.NET' inserttext='dotnet_load(|)' hint='(PHP 4) int dotnet_load(string $assembly_name [, string $datatype_name [, int $codepage ]]) - Loads a DOTNET module.' flags='130'/>
<tag menu='N' submenu='NSAPI' inserttext='nsapi_request_headers()' hint='(PHP 4>=4.3.3, PHP 5) array nsapi_request_headers(void) - Fetch all HTTP request headers.' flags='130'/>
<tag menu='N' submenu='NSAPI' inserttext='nsapi_response_headers()' hint='(PHP 4>=4.3.3, PHP 5) array nsapi_response_headers(void) - Fetch all HTTP response headers.' flags='130'/>
<tag menu='N' submenu='NSAPI' inserttext='nsapi_virtual(|)' hint='(PHP 4>=4.3.3, PHP 5) bool nsapi_virtual(string $uri) - Perform an NSAPI sub-request.' flags='130'/>
<tag menu='N' submenu='Network-->>c - g' inserttext='checkdnsrr(|)' hint='(PHP 4, PHP 5) bool checkdnsrr(string $host [, string $type="MX"]) - Check DNS records corresponding to a given Internet host name or IP address.' flags='130'/>
<tag menu='N' submenu='Network-->>c - g' inserttext='closelog()' hint='(PHP 4, PHP 5) bool closelog(void) - Close connection to system logger.' flags='130'/>
<tag menu='N' submenu='Network-->>c - g' inserttext='define_syslog_variables()' hint='(PHP 4, PHP 5) void define_syslog_variables(void) - Initializes all syslog related variables.' flags='130'/>
<tag menu='N' submenu='Network-->>c - g' inserttext='dns_check_record(|)' hint='(PHP 5) Alias of checkdnsrr().' flags='130'/>
<tag menu='N' submenu='Network-->>c - g' inserttext='dns_get_mx(|)' hint='(PHP 5) Alias of getmxrr().' flags='130'/>
<tag menu='N' submenu='Network-->>c - g' inserttext='dns_get_record(|)' hint='(PHP 5) array dns_get_record(string $hostname [, int $type=DNS_ANY [, array &amp;$authns [, array &amp;$addtl ]]]) - Fetch DNS Resource Records associated with a hostname.' flags='130'/>
<tag menu='N' submenu='Network-->>c - g' inserttext='fsockopen(|)' hint='(PHP 4, PHP 5) resource fsockopen(string $hostname [, int $port=-1 [, int &amp;$errno [, string &amp;$errstr [, float $timeout=ini_get("default_socket_timeout") ]]]]) - Open Internet or Unix domain socket connection.' flags='130'/>
<tag menu='N' submenu='Network-->>c - g' inserttext='gethostbyaddr(|)' hint='(PHP 4, PHP 5) string gethostbyaddr(string $ip_address) - Get the Internet host name corresponding to a given IP address.' flags='130'/>
<tag menu='N' submenu='Network-->>c - g' inserttext='gethostbyname(|)' hint='(PHP 4, PHP 5) string gethostbyname(string $hostname) - Get the IPv4 address corresponding to a given Internet host name.' flags='130'/>
<tag menu='N' submenu='Network-->>c - g' inserttext='gethostbynamel(|)' hint='(PHP 4, PHP 5) array gethostbynamel(string $hostname) - Get a list of IPv4 addresses corresponding to a given Internet host name.' flags='130'/>
<tag menu='N' submenu='Network-->>c - g' inserttext='gethostname()' hint='(PHP>=5.3.0) string gethostname(void) - Gets the host name.' flags='130'/>
<tag menu='N' submenu='Network-->>c - g' inserttext='getmxrr(|)' hint='(PHP 4, PHP 5) bool getmxrr(string $hostname, array &amp;$mxhosts [, array &amp;$weight]) - Get MX records corresponding to a given Internet host name.' flags='130'/>
<tag menu='N' submenu='Network-->>c - g' inserttext='getprotobyname(|)' hint='(PHP 4, PHP 5) int getprotobyname(string $name) - Get protocol number associated with protocol name.' flags='130'/>
<tag menu='N' submenu='Network-->>c - g' inserttext='getprotobynumber(|)' hint='(PHP 4, PHP 5) string getprotobynumber(int $number) - Get protocol name associated with protocol number.' flags='130'/>
<tag menu='N' submenu='Network-->>c - g' inserttext='getservbyname(|)' hint='(PHP 4, PHP 5) int getservbyname(string $service, string $protocol) - Get port number associated with an Internet service and protocol.' flags='130'/>
<tag menu='N' submenu='Network-->>c - g' inserttext='getservbyport(|)' hint='(PHP 4, PHP 5) string getservbyport(int $port, string $protocol) - Get Internet service which corresponds to port and protocol.' flags='130'/>
<tag menu='N' submenu='Network-->>h - s' inserttext='header(|)' hint='(PHP 4, PHP 5) void header(string $string [, bool $replace=true [, int $http_response_code ]]) - Send a raw HTTP header.' flags='130'/>
<tag menu='N' submenu='Network-->>h - s' inserttext='header_remove(|)' hint='(PHP 5>=5.3.0) void header_remove([string $name]) - Remove previously set headers.' flags='130'/>
<tag menu='N' submenu='Network-->>h - s' inserttext='headers_list()' hint='(PHP 5) array headers_list(void) - Returns a list of response headers sent (or ready to send).' flags='130'/>
<tag menu='N' submenu='Network-->>h - s' inserttext='headers_sent(|)' hint='(PHP 4, PHP 5) bool headers_sent([string &amp;$file [, int &amp;$line ]]) - Checks if or where headers have been sent.' flags='130'/>
<tag menu='N' submenu='Network-->>h - s' inserttext='inet_ntop(|)' hint='(PHP 5>=5.1.0) string inet_ntop(string $in_addr) - Converts a packed internet address to a human readable representation.' flags='130'/>
<tag menu='N' submenu='Network-->>h - s' inserttext='inet_pton(|)' hint='(PHP 5>=5.1.0) string inet_pton(string $address) - Converts a human readable IP address to its packed in_addr representation.' flags='130'/>
<tag menu='N' submenu='Network-->>h - s' inserttext='ip2long(|)' hint='(PHP 4, PHP 5) int ip2long(string $ip_address) - Converts a string containing an (IPv4) Internet Protocol dotted address into a proper address.' flags='130'/>
<tag menu='N' submenu='Network-->>h - s' inserttext='long2ip(|)' hint='(PHP 4, PHP 5) string long2ip(string $proper_address) - Converts an (IPv4) Internet network address into a string in Internet standard dotted format.' flags='130'/>
<tag menu='N' submenu='Network-->>h - s' inserttext='openlog(|)' hint='(PHP 4, PHP 5) bool openlog(string $ident, int $option, int $facility) - Open connection to system logger.' flags='130'/>
<tag menu='N' submenu='Network-->>h - s' inserttext='pfsockopen(|)' hint='(PHP 4, PHP 5) resource pfsockopen(string $hostname [, int $port=-1 [, int &amp;$errno [, string &amp;$errstr [, float $timeout=ini_get("default_socket_timeout") ]]]]) - Open persistent Internet or Unix domain socket connection.' flags='130'/>
<tag menu='N' submenu='Network-->>h - s' inserttext='setcookie(|)' hint='(PHP 4, PHP 5) bool setcookie(string $name [, string $value [, int $expire=0 [, string $path [, string $domain [, bool $secure=false [, bool $httponly=false ]]]]]]) - Send a cookie.' flags='130'/>
<tag menu='N' submenu='Network-->>h - s' inserttext='setrawcookie(|)' hint='(PHP 5) bool setrawcookie(string $name [, string $value [, int $expire=0 [, string $path [, string $domain [, bool $secure=false [, bool $httponly=false ]]]]]]) - Send a cookie without urlencoding the cookie value.' flags='130'/>
<tag menu='N' submenu='Network-->>h - s' inserttext='socket_get_status(|)' hint='(PHP 4, PHP 5) Alias of stream_get_meta_data().' flags='130'/>
<tag menu='N' submenu='Network-->>h - s' inserttext='socket_set_blocking(|)' hint='(PHP 4, PHP 5) Alias of stream_set_blocking().' flags='130'/>
<tag menu='N' submenu='Network-->>h - s' inserttext='socket_set_timeout(|)' hint='(PHP 4, PHP 5) Alias of stream_set_timeout().' flags='130'/>
<tag menu='N' submenu='Network-->>h - s' inserttext='syslog(|)' hint='(PHP 4, PHP 5) bool syslog(int $priority, string $message) - Generate a system log message.' flags='130'/>
<tag menu='N' submenu='NoRewindIterator class' inserttext='NoRewindIterator::__construct(|)' hint='(PHP 5>=5.1.0) NoRewindIterator::__construct(Iterator $iterator) - Construct a NoRewindIterator.' flags='130'/>
<tag menu='N' submenu='NoRewindIterator class' inserttext='NoRewindIterator::current()' hint='(PHP 5>=5.1.0) public mixed NoRewindIterator::current(void) - Get the current value.' flags='130'/>
<tag menu='N' submenu='NoRewindIterator class' inserttext='NoRewindIterator::getInnerIterator()' hint='(PHP 5>=5.1.0) public iterator NoRewindIterator::getInnerIterator(void) - Get the inner iterator.' flags='130'/>
<tag menu='N' submenu='NoRewindIterator class' inserttext='NoRewindIterator::key()' hint='(PHP 5>=5.1.0) public mixed NoRewindIterator::key(void) - Get the current key.' flags='130'/>
<tag menu='N' submenu='NoRewindIterator class' inserttext='NoRewindIterator::next()' hint='(PHP 5>=5.1.0) public void NoRewindIterator::next(void) - Forward to the next element.' flags='130'/>
<tag menu='N' submenu='NoRewindIterator class' inserttext='NoRewindIterator::rewind()' hint='(PHP 5>=5.1.0) public void NoRewindIterator::rewind(void) - Prevents the rewind operation on the inner iterator.' flags='130'/>
<tag menu='N' submenu='NoRewindIterator class' inserttext='NoRewindIterator::valid()' hint='(PHP 5>=5.1.0) public bool NoRewindIterator::valid(void) - Validates the iterator.' flags='130'/>
<tag menu='N' submenu='Normalizer class' inserttext='Normalizer::isNormalized(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) static bool Normalizer::isNormalized(string $input [, string $form=Normalizer::FORM_C]) - Checks if the provided string is already in the specified normalization form.' flags='130'/>
<tag menu='N' submenu='Normalizer class' inserttext='Normalizer::normalize(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) static string Normalizer::normalize(string $input [, string $form=Normalizer::FORM_C]) - Normalizes the input provided and returns the normalized string.' flags='130'/>
<tag menu='N' submenu='NumberFormatter class' inserttext='NumberFormatter::create(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) static NumberFormatter NumberFormatter::create(string $locale, int $style [, string $pattern]) - Create a number formatter.' flags='130'/>
<tag menu='N' submenu='NumberFormatter class' inserttext='NumberFormatter::format(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) string NumberFormatter::format(number $value [, int $type]) - Format a number.' flags='130'/>
<tag menu='N' submenu='NumberFormatter class' inserttext='NumberFormatter::formatCurrency(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) string NumberFormatter::formatCurrency(float $value, string $currency) - Format a currency value.' flags='130'/>
<tag menu='N' submenu='NumberFormatter class' inserttext='NumberFormatter::getAttribute(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) int NumberFormatter::getAttribute(int $attr) - Get an attribute.' flags='130'/>
<tag menu='N' submenu='NumberFormatter class' inserttext='NumberFormatter::getErrorCode()' hint="(PHP 5>=5.3.0, PECL intl>=1.0.0) int NumberFormatter::getErrorCode(void) - Get formatter's last error code." flags='130'/>
<tag menu='N' submenu='NumberFormatter class' inserttext='NumberFormatter::getErrorMessage()' hint="(PHP 5>=5.3.0, PECL intl>=1.0.0) string NumberFormatter::getErrorMessage(void) - Get formatter's last error message." flags='130'/>
<tag menu='N' submenu='NumberFormatter class' inserttext='NumberFormatter::getLocale(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) string NumberFormatter::getLocale([int $type]) - Get formatter locale.' flags='130'/>
<tag menu='N' submenu='NumberFormatter class' inserttext='NumberFormatter::getPattern()' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) string NumberFormatter::getPattern(void) - Get formatter pattern.' flags='130'/>
<tag menu='N' submenu='NumberFormatter class' inserttext='NumberFormatter::getSymbol(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) string NumberFormatter::getSymbol(int $attr) - Get a symbol value.' flags='130'/>
<tag menu='N' submenu='NumberFormatter class' inserttext='NumberFormatter::getTextAttribute(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) string NumberFormatter::getTextAttribute(int $attr) - Get a text attribute.' flags='130'/>
<tag menu='N' submenu='NumberFormatter class' inserttext='NumberFormatter::parse(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) mixed NumberFormatter::parse(string $value [, int $type [, int &amp;$position ]]) - Parse a number.' flags='130'/>
<tag menu='N' submenu='NumberFormatter class' inserttext='NumberFormatter::parseCurrency(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) float NumberFormatter::parseCurrency(string $value, string &amp;$currency [, int &amp;$position]) - Parse a currency number.' flags='130'/>
<tag menu='N' submenu='NumberFormatter class' inserttext='NumberFormatter::setAttribute(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) bool NumberFormatter::setAttribute(int $attr, int $value) - Set an attribute.' flags='130'/>
<tag menu='N' submenu='NumberFormatter class' inserttext='NumberFormatter::setPattern(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) bool NumberFormatter::setPattern(string $pattern) - Set formatter pattern.' flags='130'/>
<tag menu='N' submenu='NumberFormatter class' inserttext='NumberFormatter::setSymbol(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) bool NumberFormatter::setSymbol(int $attr, string $value) - Set a symbol value.' flags='130'/>
<tag menu='N' submenu='NumberFormatter class' inserttext='NumberFormatter::setTextAttribute(|)' hint='(PHP 5>=5.3.0, PECL intl>=1.0.0) bool NumberFormatter::setTextAttribute(int $attr, string $value) - Set a text attribute.' flags='130'/>
<tag menu='O' submenu='OCI8-->>O - OCI-Lob->l' inserttext='OCI-Collection->append(|)' hint='(PHP 5, PECL OCI8>=1.1.0) bool OCI-Collection::append(mixed $value) - Appends element to the collection.' flags='130'/>
<tag menu='O' submenu='OCI8-->>O - OCI-Lob->l' inserttext='OCI-Collection->assign(|)' hint='(PHP 5, PECL OCI8>=1.1.0) bool OCI-Collection::assign(OCI-Collection $from) - Assigns a value to the collection from another existing collection.' flags='130'/>
<tag menu='O' submenu='OCI8-->>O - OCI-Lob->l' inserttext='OCI-Collection->assignElem(|)' hint='(PHP 5, PECL OCI8>=1.1.0) bool OCI-Collection::assignElem(int $index, mixed $value) - Assigns a value to the element of the collection.' flags='130'/>
<tag menu='O' submenu='OCI8-->>O - OCI-Lob->l' inserttext='OCI-Collection->free(|)' hint='(PHP 5, PECL OCI8>=1.1.0) bool OCI-Collection::free(void) - Frees the resources associated with the collection object.' flags='130'/>
<tag menu='O' submenu='OCI8-->>O - OCI-Lob->l' inserttext='OCI-Collection->getElem(|)' hint='(PHP 5, PECL OCI8>=1.1.0) mixed OCI-Collection::getElem(int $index) - Returns value of the element.' flags='130'/>
<tag menu='O' submenu='OCI8-->>O - OCI-Lob->l' inserttext='OCI-Collection->max(|)' hint='(PHP 5, PECL OCI8>=1.1.0) int OCI-Collection::max(void) - Returns the maximum number of elements in the collection.' flags='130'/>
<tag menu='O' submenu='OCI8-->>O - OCI-Lob->l' inserttext='OCI-Collection->size(|)' hint='(PHP 5, PECL OCI8>=1.1.0) int OCI-Collection::size(void) - Returns size of the collection.' flags='130'/>
<tag menu='O' submenu='OCI8-->>O - OCI-Lob->l' inserttext='OCI-Collection->trim(|)' hint='(PHP 5, PECL OCI8>=1.1.0) bool OCI-Collection::trim(int $num) - Trims elements from the end of the collection.' flags='130'/>
<tag menu='O' submenu='OCI8-->>O - OCI-Lob->l' inserttext='OCI-Lob->append(|)' hint='(PHP 5, PECL OCI8>=1.1.0) bool OCI-Lob::append(OCI-Lob $lob_from) - Appends data from the large object to another large object.' flags='130'/>
<tag menu='O' submenu='OCI8-->>O - OCI-Lob->l' inserttext='OCI-Lob->close(|)' hint='(PHP 5, PECL OCI8>=1.1.0) bool OCI-Lob::close(void) - Closes LOB descriptor.' flags='130'/>
<tag menu='O' submenu='OCI8-->>O - OCI-Lob->l' inserttext='OCI-Lob->eof(|)' hint="(PHP 5, PECL OCI8>=1.1.0) bool OCI-Lob::eof(void) - Tests for end-of-file on a large object's descriptor." flags='130'/>
<tag menu='O' submenu='OCI8-->>O - OCI-Lob->l' inserttext='OCI-Lob->erase(|)' hint='(PHP 5, PECL OCI8>=1.1.0) int OCI-Lob::erase([int $offset [, int $length ]]) - Erases a specified portion of the internal LOB data.' flags='130'/>
<tag menu='O' submenu='OCI8-->>O - OCI-Lob->l' inserttext='OCI-Lob->export(|)' hint="(PHP 5, PECL OCI8>=1.1.0) bool OCI-Lob::export(string $filename [, int $start [, int $length ]]) - Exports LOB's contents to a file." flags='130'/>
<tag menu='O' submenu='OCI8-->>O - OCI-Lob->l' inserttext='OCI-Lob->flush(|)' hint='(PHP 5, PECL OCI8>=1.1.0) bool OCI-Lob::flush([int $flag]) - Flushes/writes buffer of the LOB to the server.' flags='130'/>
<tag menu='O' submenu='OCI8-->>O - OCI-Lob->l' inserttext='OCI-Lob->free(|)' hint='(PHP 5, PECL OCI8>=1.1.0) bool OCI-Lob::free(void) - Frees resources associated with the LOB descriptor.' flags='130'/>
<tag menu='O' submenu='OCI8-->>O - OCI-Lob->l' inserttext='OCI-Lob->getBuffering(|)' hint='(PHP 5, PECL OCI8>=1.1.0) bool OCI-Lob::getBuffering(void) - Returns current state of buffering for the large object.' flags='130'/>
<tag menu='O' submenu='OCI8-->>O - OCI-Lob->l' inserttext='OCI-Lob->import(|)' hint='(PHP 5, PECL OCI8>=1.1.0) bool OCI-Lob::import(string $filename) - Imports file data to the LOB.' flags='130'/>
<tag menu='O' submenu='OCI8-->>O - OCI-Lob->l' inserttext='OCI-Lob->load(|)' hint="(PHP 5, PECL OCI8>=1.1.0) string OCI-Lob::load(void) - Returns large object's contents." flags='130'/>
<tag menu='O' submenu='OCI8-->>OCI-Lob->r - oci_c' inserttext='OCI-Lob->read(|)' hint='(PHP 5, PECL OCI8>=1.1.0) string OCI-Lob::read(int $length) - Reads part of the large object.' flags='130'/>
<tag menu='O' submenu='OCI8-->>OCI-Lob->r - oci_c' inserttext='OCI-Lob->rewind(|)' hint='(PHP 5, PECL OCI8>=1.1.0) bool OCI-Lob::rewind(void) - Moves the internal pointer to the beginning of the large object.' flags='130'/>
<tag menu='O' submenu='OCI8-->>OCI-Lob->r - oci_c' inserttext='OCI-Lob->save(|)' hint='(PHP 5, PECL OCI8>=1.1.0) bool OCI-Lob::save(string $data [, int $offset]) - Saves data to the large object.' flags='130'/>
<tag menu='O' submenu='OCI8-->>OCI-Lob->r - oci_c' inserttext='OCI-Lob->saveFile(|)' hint='(PHP 5, PECL OCI8>=1.1.0) Alias of oci_lob_import().' flags='130'/>
<tag menu='O' submenu='OCI8-->>OCI-Lob->r - oci_c' inserttext='OCI-Lob->seek(|)' hint='(PHP 5, PECL OCI8>=1.1.0) bool OCI-Lob::seek(int $offset [, int $whence=OCI_SEEK_SET]) - Sets the internal pointer of the large object.' flags='130'/>
<tag menu='O' submenu='OCI8-->>OCI-Lob->r - oci_c' inserttext='OCI-Lob->setBuffering(|)' hint='(PHP 5, PECL OCI8>=1.1.0) bool OCI-Lob::setBuffering(bool $on_off) - Changes current state of buffering for the large object.' flags='130'/>
<tag menu='O' submenu='OCI8-->>OCI-Lob->r - oci_c' inserttext='OCI-Lob->size(|)' hint='(PHP 5, PECL OCI8>=1.1.0) int OCI-Lob::size(void) - Returns size of large object.' flags='130'/>
<tag menu='O' submenu='OCI8-->>OCI-Lob->r - oci_c' inserttext='OCI-Lob->tell(|)' hint='(PHP 5, PECL OCI8>=1.1.0) int OCI-Lob::tell(void) - Returns the current position of internal pointer of large object.' flags='130'/>
<tag menu='O' submenu='OCI8-->>OCI-Lob->r - oci_c' inserttext='OCI-Lob->truncate(|)' hint='(PHP 5, PECL OCI8>=1.1.0) bool OCI-Lob::truncate([int $length=0]) - Truncates large object.' flags='130'/>
<tag menu='O' submenu='OCI8-->>OCI-Lob->r - oci_c' inserttext='OCI-Lob->write(|)' hint='(PHP 5, PECL OCI8>=1.1.0) int OCI-Lob::write(string $data [, int $length]) - Writes data to the large object.' flags='130'/>
<tag menu='O' submenu='OCI8-->>OCI-Lob->r - oci_c' inserttext='OCI-Lob->writeTemporary(|)' hint='(PHP 5, PECL OCI8>=1.1.0) bool OCI-Lob::writeTemporary(string $data [, int $lob_type=OCI_TEMP_CLOB]) - Writes a temporary large object.' flags='130'/>
<tag menu='O' submenu='OCI8-->>OCI-Lob->r - oci_c' inserttext='OCI-Lob->writeToFile(|)' hint='(PHP 5, PECL OCI8>=1.1.0) Alias of oci_lob_export().' flags='130'/>
<tag menu='O' submenu='OCI8-->>OCI-Lob->r - oci_c' inserttext='oci_bind_array_by_name(|)' hint='(PHP 5>=5.1.2, PECL OCI8>=1.2.0) bool oci_bind_array_by_name(resource $statement, string $name, array &amp;$var_array, int $max_table_length [, int $max_item_length=-1 [, int $type=SQLT_AFC ]]) - Binds a PHP array to an Oracle PL/SQL array parameter.' flags='130'/>
<tag menu='O' submenu='OCI8-->>OCI-Lob->r - oci_c' inserttext='oci_bind_by_name(|)' hint='(PHP 5, PECL OCI8>=1.1.0) bool oci_bind_by_name(resource $statement, string $bv_name, mixed &amp;$variable [, int $maxlength=-1 [, int $type=SQLT_CHR ]]) - Binds a PHP variable to an Oracle placeholder.' flags='130'/>
<tag menu='O' submenu='OCI8-->>OCI-Lob->r - oci_c' inserttext='oci_cancel(|)' hint='(PHP 5, PECL OCI8>=1.1.0) bool oci_cancel(resource $statement) - Cancels reading from cursor.' flags='130'/>
<tag menu='O' submenu='OCI8-->>OCI-Lob->r - oci_c' inserttext='oci_close(|)' hint='(PHP 5, PECL OCI8>=1.1.0) bool oci_close(resource $connection) - Closes an Oracle connection.' flags='130'/>
<tag menu='O' submenu='OCI8-->>OCI-Lob->r - oci_c' inserttext='oci_commit(|)' hint='(PHP 5, PECL OCI8>=1.1.0) bool oci_commit(resource $connection) - Commits the outstanding database transaction.' flags='130'/>
<tag menu='O' submenu='OCI8-->>OCI-Lob->r - oci_c' inserttext='oci_connect(|)' hint='(PHP 5, PECL OCI8>=1.1.0) resource oci_connect(string $username, string $password [, string $connection_string [, string $character_set [, int $session_mode ]]]) - Connect to an Oracle database.' flags='130'/>
<tag menu='O' submenu='OCI8-->>oci_d - oci_i' inserttext='oci_define_by_name(|)' hint='(PHP 5, PECL OCI8>=1.1.0) bool oci_define_by_name(resource $statement, string $column_name, mixed &amp;$variable [, int $type=SQLT_CHR]) - Associates a PHP variable with a column for query fetches.' flags='130'/>
<tag menu='O' submenu='OCI8-->>oci_d - oci_i' inserttext='oci_error(|)' hint='(PHP 5, PECL OCI8>=1.1.0) array oci_error([resource $resource]) - Returns the last error found.' flags='130'/>
<tag menu='O' submenu='OCI8-->>oci_d - oci_i' inserttext='oci_execute(|)' hint='(PHP 5, PECL OCI8>=1.1.0) bool oci_execute(resource $statement [, int $mode=OCI_COMMIT_ON_SUCCESS]) - Executes a statement.' flags='130'/>
<tag menu='O' submenu='OCI8-->>oci_d - oci_i' inserttext='oci_fetch(|)' hint='(PHP 5, PECL OCI8>=1.1.0) bool oci_fetch(resource $statement) - Fetches the next row from a query into internal buffers.' flags='130'/>
<tag menu='O' submenu='OCI8-->>oci_d - oci_i' inserttext='oci_fetch_all(|)' hint='(PHP 5, PECL OCI8>=1.1.0) int oci_fetch_all(resource $statement, array &amp;$output [, int $skip=0 [, int $maxrows=-1 [, int $flags=OCI_FETCHSTATEMENT_BY_COLUMN + OCI_ASSOC ]]]) - Fetches multiple rows from a query into a two-dimensional array.' flags='130'/>
<tag menu='O' submenu='OCI8-->>oci_d - oci_i' inserttext='oci_fetch_array(|)' hint='(PHP 5, PECL OCI8>=1.1.0) array oci_fetch_array(resource $statement [, int $mode]) - Returns the next row from a query as an associative or numeric array.' flags='130'/>
<tag menu='O' submenu='OCI8-->>oci_d - oci_i' inserttext='oci_fetch_assoc(|)' hint='(PHP 5, PECL OCI8>=1.1.0) array oci_fetch_assoc(resource $statement) - Returns the next row from a query as an associative array.' flags='130'/>
<tag menu='O' submenu='OCI8-->>oci_d - oci_i' inserttext='oci_fetch_object(|)' hint='(PHP 5, PECL OCI8>=1.1.0) object oci_fetch_object(resource $statement) - Returns the next row from a query as an object.' flags='130'/>
<tag menu='O' submenu='OCI8-->>oci_d - oci_i' inserttext='oci_fetch_row(|)' hint='(PHP 5, PECL OCI8>=1.1.0) array oci_fetch_row(resource $statement) - Returns the next row from a query as a numeric array.' flags='130'/>
<tag menu='O' submenu='OCI8-->>oci_d - oci_i' inserttext='oci_field_is_null(|)' hint='(PHP 5, PECL OCI8>=1.1.0) bool oci_field_is_null(resource $statement, mixed $field) - Checks if the field is NULL.' flags='130'/>
<tag menu='O' submenu='OCI8-->>oci_d - oci_i' inserttext='oci_field_name(|)' hint='(PHP 5, PECL OCI8>=1.1.0) string oci_field_name(resource $statement, int $field) - Returns the name of a field from the statement.' flags='130'/>
<tag menu='O' submenu='OCI8-->>oci_d - oci_i' inserttext='oci_field_precision(|)' hint='(PHP 5, PECL OCI8>=1.1.0) int oci_field_precision(resource $statement, int $field) - Tell the precision of a field.' flags='130'/>
<tag menu='O' submenu='OCI8-->>oci_d - oci_i' inserttext='oci_field_scale(|)' hint='(PHP 5, PECL OCI8>=1.1.0) int oci_field_scale(resource $statement, int $field) - Tell the scale of the field.' flags='130'/>
<tag menu='O' submenu='OCI8-->>oci_d - oci_i' inserttext='oci_field_size(|)' hint="(PHP 5, PECL OCI8>=1.1.0) int oci_field_size(resource $statement, mixed $field) - Returns field's size." flags='130'/>
<tag menu='O' submenu='OCI8-->>oci_d - oci_i' inserttext='oci_field_type(|)' hint="(PHP 5, PECL OCI8>=1.1.0) mixed oci_field_type(resource $statement, int $field) - Returns field's data type." flags='130'/>
<tag menu='O' submenu='OCI8-->>oci_d - oci_i' inserttext='oci_field_type_raw(|)' hint='(PHP 5, PECL OCI8>=1.1.0) int oci_field_type_raw(resource $statement, int $field) - Tell the raw Oracle data type of the field.' flags='130'/>
<tag menu='O' submenu='OCI8-->>oci_d - oci_i' inserttext='oci_free_statement(|)' hint='(PHP 5, PECL OCI8>=1.1.0) bool oci_free_statement(resource $statement) - Frees all resources associated with statement or cursor.' flags='130'/>
<tag menu='O' submenu='OCI8-->>oci_d - oci_i' inserttext='oci_internal_debug(|)' hint='(PHP 5, PECL OCI8>=1.1.0) void oci_internal_debug(bool $onoff) - Enables or disables internal debug output.' flags='130'/>
<tag menu='O' submenu='OCI8-->>oci_l - o' inserttext='oci_lob_copy(|)' hint='(PHP 5, PECL OCI8>=1.1.0) bool oci_lob_copy(OCI-Lob $lob_to, OCI-Lob $lob_from [, int $length=0]) - Copies large object.' flags='130'/>
<tag menu='O' submenu='OCI8-->>oci_l - o' inserttext='oci_lob_is_equal(|)' hint='(PHP 5, PECL OCI8>=1.1.0) bool oci_lob_is_equal(OCI-Lob $lob1, OCI-Lob $lob2) - Compares two LOB/FILE locators for equality.' flags='130'/>
<tag menu='O' submenu='OCI8-->>oci_l - o' inserttext='oci_new_collection(|)' hint='(PHP 5, PECL OCI8>=1.1.0) OCI-Collection oci_new_collection(resource $connection, string $tdo [, string $schema=NULL]) - Allocates new collection object.' flags='130'/>
<tag menu='O' submenu='OCI8-->>oci_l - o' inserttext='oci_new_connect(|)' hint='(PHP 5, PECL OCI8>=1.1.0) resource oci_new_connect(string $username, string $password [, string $connection_string [, string $character_set [, int $session_mode ]]]) - Connect to the Oracle server using a unique connection.' flags='130'/>
<tag menu='O' submenu='OCI8-->>oci_l - o' inserttext='oci_new_cursor(|)' hint='(PHP 5, PECL OCI8>=1.1.0) resource oci_new_cursor(resource $connection) - Allocates and returns a new cursor (statement handle).' flags='130'/>
<tag menu='O' submenu='OCI8-->>oci_l - o' inserttext='oci_new_descriptor(|)' hint='(PHP 5, PECL OCI8>=1.1.0) OCI-Lob oci_new_descriptor(resource $connection [, int $type=OCI_DTYPE_LOB]) - Initializes a new empty LOB or FILE descriptor.' flags='130'/>
<tag menu='O' submenu='OCI8-->>oci_l - o' inserttext='oci_num_fields(|)' hint='(PHP 5, PECL OCI8>=1.1.0) int oci_num_fields(resource $statement) - Returns the number of result columns in a statement.' flags='130'/>
<tag menu='O' submenu='OCI8-->>oci_l - o' inserttext='oci_num_rows(|)' hint='(PHP 5, PECL OCI8>=1.1.0) int oci_num_rows(resource $statement) - Returns number of rows affected during statement execution.' flags='130'/>
<tag menu='O' submenu='OCI8-->>oci_l - o' inserttext='oci_parse(|)' hint='(PHP 5, PECL OCI8>=1.1.0) resource oci_parse(resource $connection, string $sql_text) - Prepares an Oracle statement for execution.' flags='130'/>
<tag menu='O' submenu='OCI8-->>oci_l - o' inserttext='oci_password_change(|)' hint="(PHP 5, PECL OCI8>=1.1.0) bool oci_password_change(resource $connection, string $username, string $old_password, string $new_password) - Changes password of Oracle's user." flags='130'/>
<tag menu='O' submenu='OCI8-->>oci_l - o' inserttext='oci_pconnect(|)' hint='(PHP 5, PECL OCI8>=1.1.0) resource oci_pconnect(string $username, string $password [, string $connection_string [, string $character_set [, int $session_mode ]]]) - Connect to an Oracle database using a persistent connection.' flags='130'/>
<tag menu='O' submenu='OCI8-->>oci_l - o' inserttext='oci_result(|)' hint="(PHP 5, PECL OCI8>=1.1.0) mixed oci_result(resource $statement, mixed $field) - Returns field's value from the fetched row." flags='130'/>
<tag menu='O' submenu='OCI8-->>oci_l - o' inserttext='oci_rollback(|)' hint='(PHP 5, PECL OCI8>=1.1.0) bool oci_rollback(resource $connection) - Rolls back the outstanding database transaction.' flags='130'/>
<tag menu='O' submenu='OCI8-->>oci_l - o' inserttext='oci_server_version(|)' hint='(PHP 5, PECL OCI8>=1.1.0) string oci_server_version(resource $connection) - Returns server version.' flags='130'/>
<tag menu='O' submenu='OCI8-->>oci_l - o' inserttext='oci_set_action(|)' hint='(PHP 5.3.2, PECL OCI8>=1.4.0) bool oci_set_action(resource $connection, string $action_name) - Sets the action name.' flags='130'/>
<tag menu='O' submenu='OCI8-->>oci_l - o' inserttext='oci_set_client_identifier(|)' hint='(PHP 5.3.2, PECL OCI8>=1.4.0) bool oci_set_client_identifier(resource $connection, string $client_identifier) - Sets the client identifier.' flags='130'/>
<tag menu='O' submenu='OCI8-->>oci_l - o' inserttext='oci_set_client_info(|)' hint='(PHP 5.3.2, PECL OCI8>=1.4.0) bool oci_set_client_info(resource $connection, string $client_info) - Sets the client information.' flags='130'/>
<tag menu='O' submenu='OCI8-->>oci_l - o' inserttext='oci_set_edition(|)' hint='(PHP 5.3.2, PECL OCI8>=1.4.0) bool oci_set_edition(string $edition) - Sets the database edition.' flags='130'/>
<tag menu='O' submenu='OCI8-->>oci_l - o' inserttext='oci_set_module_name(|)' hint='(PHP 5.3.2, PECL OCI8>=1.4.0) bool oci_set_module_name(resource $connection, string $module_name) - Sets the module name.' flags='130'/>
<tag menu='O' submenu='OCI8-->>oci_l - o' inserttext='oci_set_prefetch(|)' hint='(PHP 5, PECL OCI8>=1.1.0) bool oci_set_prefetch(resource $statement, int $rows) - Sets number of rows to be prefetched by queries.' flags='130'/>
<tag menu='O' submenu='OCI8-->>oci_l - o' inserttext='oci_statement_type(|)' hint='(PHP 5, PECL OCI8>=1.1.0) string oci_statement_type(resource $statement) - Returns the type of a statement.' flags='130'/>
<tag menu='O' submenu='OCI8 Obsolete Aliases and-->>o - ocife' inserttext='ocibindbyname(|)' hint='(PHP 4, PHP 5, PECL OCI8>=1.0.0) Alias of oci_bind_by_name().' flags='130'/>
<tag menu='O' submenu='OCI8 Obsolete Aliases and-->>o - ocife' inserttext='ocicancel(|)' hint='(PHP 4, PHP 5, PECL OCI8>=1.0.0) Alias of oci_cancel().' flags='130'/>
<tag menu='O' submenu='OCI8 Obsolete Aliases and-->>o - ocife' inserttext='ocicloselob(|)' hint='(PHP 4>=4.0.6, PECL OCI8 1.0) Alias of OCI-Lob->close.' flags='130'/>
<tag menu='O' submenu='OCI8 Obsolete Aliases and-->>o - ocife' inserttext='ocicollappend(|)' hint='(PHP 4>=4.0.6, PHP 5, PECL OCI8>=1.0.0) Alias of OCI-Collection->append.' flags='130'/>
<tag menu='O' submenu='OCI8 Obsolete Aliases and-->>o - ocife' inserttext='ocicollassign(|)' hint='(PHP 4>=4.0.6, PECL OCI8 1.0) Alias of OCI-Collection->assign.' flags='130'/>
<tag menu='O' submenu='OCI8 Obsolete Aliases and-->>o - ocife' inserttext='ocicollassignelem(|)' hint='(PHP 4>=4.0.6, PHP 5, PECL OCI8>=1.0.0) Alias of OCI-Collection->assignElem.' flags='130'/>
<tag menu='O' submenu='OCI8 Obsolete Aliases and-->>o - ocife' inserttext='ocicollgetelem(|)' hint='(PHP 4>=4.0.6, PHP 5, PECL OCI8>=1.0.0) Alias of OCI-Collection->getElem.' flags='130'/>
<tag menu='O' submenu='OCI8 Obsolete Aliases and-->>o - ocife' inserttext='ocicollmax(|)' hint='(PHP 4>=4.0.6, PHP 5, PECL OCI8>=1.0.0) Alias of OCI-Collection->max.' flags='130'/>
<tag menu='O' submenu='OCI8 Obsolete Aliases and-->>o - ocife' inserttext='ocicollsize(|)' hint='(PHP 4>=4.0.6, PHP 5, PECL OCI8>=1.0.0) Alias of OCI-Collection->size.' flags='130'/>
<tag menu='O' submenu='OCI8 Obsolete Aliases and-->>o - ocife' inserttext='ocicolltrim(|)' hint='(PHP 4>=4.0.6, PHP 5, PECL OCI8>=1.0.0) Alias of OCI-Collection->trim.' flags='130'/>
<tag menu='O' submenu='OCI8 Obsolete Aliases and-->>o - ocife' inserttext='ocicolumnisnull(|)' hint='(PHP 4, PHP 5, PECL OCI8>=1.0.0) Alias of oci_field_is_null().' flags='130'/>
<tag menu='O' submenu='OCI8 Obsolete Aliases and-->>o - ocife' inserttext='ocicolumnname(|)' hint='(PHP 4, PHP 5, PECL OCI8>=1.0.0) Alias of oci_field_name().' flags='130'/>
<tag menu='O' submenu='OCI8 Obsolete Aliases and-->>o - ocife' inserttext='ocicolumnprecision(|)' hint='(PHP 4, PHP 5, PECL OCI8>=1.0.0) Alias of oci_field_precision().' flags='130'/>
<tag menu='O' submenu='OCI8 Obsolete Aliases and-->>o - ocife' inserttext='ocicolumnscale(|)' hint='(PHP 4, PHP 5, PECL OCI8>=1.0.0) Alias of oci_field_scale().' flags='130'/>
<tag menu='O' submenu='OCI8 Obsolete Aliases and-->>o - ocife' inserttext='ocicolumnsize(|)' hint='(PHP 4, PHP 5, PECL OCI8>=1.0.0) Alias of oci_field_size().' flags='130'/>
<tag menu='O' submenu='OCI8 Obsolete Aliases and-->>o - ocife' inserttext='ocicolumntype(|)' hint='(PHP 4, PHP 5, PECL OCI8>=1.0.0) Alias of oci_field_type().' flags='130'/>
<tag menu='O' submenu='OCI8 Obsolete Aliases and-->>o - ocife' inserttext='ocicolumntyperaw(|)' hint='(PHP 4, PHP 5, PECL OCI8>=1.0.0) Alias of oci_field_type_raw().' flags='130'/>
<tag menu='O' submenu='OCI8 Obsolete Aliases and-->>o - ocife' inserttext='ocicommit(|)' hint='(PHP 4, PHP 5, PECL OCI8>=1.0.0) Alias of oci_commit().' flags='130'/>
<tag menu='O' submenu='OCI8 Obsolete Aliases and-->>o - ocife' inserttext='ocidefinebyname(|)' hint='(PHP 4, PHP 5, PECL OCI8>=1.0.0) Alias of oci_define_by_name().' flags='130'/>
<tag menu='O' submenu='OCI8 Obsolete Aliases and-->>o - ocife' inserttext='ocierror(|)' hint='(PHP 4, PHP 5, PECL OCI8>=1.0.0) Alias of oci_error().' flags='130'/>
<tag menu='O' submenu='OCI8 Obsolete Aliases and-->>o - ocife' inserttext='ociexecute(|)' hint='(PHP 4, PHP 5, PECL OCI8>=1.0.0) Alias of oci_execute().' flags='130'/>
<tag menu='O' submenu='OCI8 Obsolete Aliases and-->>o - ocife' inserttext='ocifetch(|)' hint='(PHP 4, PHP 5, PECL OCI8>=1.0.0) Alias of oci_fetch().' flags='130'/>
<tag menu='O' submenu='OCI8 Obsolete Aliases and-->>o - ocife' inserttext='ocifetchinto(|)' hint='(PHP 4, PHP 5, PECL OCI8>=1.0.0) int ocifetchinto(resource $statement, array &amp;$result [, int $mode=OCI_ASSOC + OCI_NUM]) - Fetches the next row into an array (deprecated).' flags='130'/>
<tag menu='O' submenu='OCI8 Obsolete Aliases and-->>o - ocife' inserttext='ocifetchstatement(|)' hint='(PHP 4, PHP 5, PECL OCI8>=1.0.0) Alias of oci_fetch_all().' flags='130'/>
<tag menu='O' submenu='OCI8 Obsolete Aliases and-->>ocifr - o' inserttext='ocifreecollection(|)' hint='(PHP 4>=4.0.7, PHP 5, PECL OCI8>=1.0.0) Alias of OCI-Collection->free.' flags='130'/>
<tag menu='O' submenu='OCI8 Obsolete Aliases and-->>ocifr - o' inserttext='ocifreecursor(|)' hint='(PHP 4, PHP 5, PECL OCI8>=1.0.0) Alias of oci_free_statement().' flags='130'/>
<tag menu='O' submenu='OCI8 Obsolete Aliases and-->>ocifr - o' inserttext='ocifreedesc(|)' hint='(PHP 4, PHP 5, PECL OCI8>=1.0.0) Alias of OCI-Lob->free.' flags='130'/>
<tag menu='O' submenu='OCI8 Obsolete Aliases and-->>ocifr - o' inserttext='ocifreestatement(|)' hint='(PHP 4, PHP 5, PECL OCI8>=1.0.0) Alias of oci_free_statement().' flags='130'/>
<tag menu='O' submenu='OCI8 Obsolete Aliases and-->>ocifr - o' inserttext='ociinternaldebug(|)' hint='(PHP 4, PHP 5, PECL OCI8>=1.0.0) Alias of oci_internal_debug().' flags='130'/>
<tag menu='O' submenu='OCI8 Obsolete Aliases and-->>ocifr - o' inserttext='ociloadlob(|)' hint='(PHP 4, PHP 5, PECL OCI8>=1.0.0) Alias of OCI-Lob->load.' flags='130'/>
<tag menu='O' submenu='OCI8 Obsolete Aliases and-->>ocifr - o' inserttext='ocilogoff(|)' hint='(PHP 4, PHP 5, PECL OCI8>=1.0.0) Alias of oci_close().' flags='130'/>
<tag menu='O' submenu='OCI8 Obsolete Aliases and-->>ocifr - o' inserttext='ocilogon(|)' hint='(PHP 4, PHP 5, PECL OCI8>=1.0.0) Alias of oci_connect().' flags='130'/>
<tag menu='O' submenu='OCI8 Obsolete Aliases and-->>ocifr - o' inserttext='ocinewcollection(|)' hint='(PHP 4>=4.0.6, PHP 5, PECL OCI8>=1.0.0) Alias of oci_new_collection().' flags='130'/>
<tag menu='O' submenu='OCI8 Obsolete Aliases and-->>ocifr - o' inserttext='ocinewcursor(|)' hint='(PHP 4, PHP 5, PECL OCI8>=1.0.0) Alias of oci_new_cursor().' flags='130'/>
<tag menu='O' submenu='OCI8 Obsolete Aliases and-->>ocifr - o' inserttext='ocinewdescriptor(|)' hint='(PHP 4, PHP 5, PECL OCI8>=1.0.0) Alias of oci_new_descriptor().' flags='130'/>
<tag menu='O' submenu='OCI8 Obsolete Aliases and-->>ocifr - o' inserttext='ocinlogon(|)' hint='(PHP 4, PHP 5, PECL OCI8>=1.0.0) Alias of oci_new_connect().' flags='130'/>
<tag menu='O' submenu='OCI8 Obsolete Aliases and-->>ocifr - o' inserttext='ocinumcols(|)' hint='(PHP 4, PHP 5, PECL OCI8>=1.0.0) Alias of oci_num_fields().' flags='130'/>
<tag menu='O' submenu='OCI8 Obsolete Aliases and-->>ocifr - o' inserttext='ociparse(|)' hint='(PHP 4, PHP 5, PECL OCI8>=1.0.0) Alias of oci_parse().' flags='130'/>
<tag menu='O' submenu='OCI8 Obsolete Aliases and-->>ocifr - o' inserttext='ociplogon(|)' hint='(PHP 4, PHP 5, PECL OCI8>=1.0.0) Alias of oci_pconnect().' flags='130'/>
<tag menu='O' submenu='OCI8 Obsolete Aliases and-->>ocifr - o' inserttext='ociresult(|)' hint='(PHP 4, PHP 5, PECL OCI8>=1.0.0) Alias of oci_result().' flags='130'/>
<tag menu='O' submenu='OCI8 Obsolete Aliases and-->>ocifr - o' inserttext='ocirollback(|)' hint='(PHP 4, PHP 5, PECL OCI8>=1.0.0) Alias of oci_rollback().' flags='130'/>
<tag menu='O' submenu='OCI8 Obsolete Aliases and-->>ocifr - o' inserttext='ocirowcount(|)' hint='(PHP 4, PHP 5, PECL OCI8>=1.0.0) Alias of oci_num_rows().' flags='130'/>
<tag menu='O' submenu='OCI8 Obsolete Aliases and-->>ocifr - o' inserttext='ocisavelob(|)' hint='(PHP 4, PHP 5, PECL OCI8>=1.0.0) Alias of OCI-Lob->save.' flags='130'/>
<tag menu='O' submenu='OCI8 Obsolete Aliases and-->>ocifr - o' inserttext='ocisavelobfile(|)' hint='(PHP 4, PHP 5, PECL OCI8>=1.0.0) Alias of OCI-Lob->import.' flags='130'/>
<tag menu='O' submenu='OCI8 Obsolete Aliases and-->>ocifr - o' inserttext='ociserverversion(|)' hint='(PHP 4, PHP 5, PECL OCI8>=1.0.0) Alias of oci_server_version().' flags='130'/>
<tag menu='O' submenu='OCI8 Obsolete Aliases and-->>ocifr - o' inserttext='ocisetprefetch(|)' hint='(PHP 4, PHP 5, PECL OCI8>=1.0.0) Alias of oci_set_prefetch().' flags='130'/>
<tag menu='O' submenu='OCI8 Obsolete Aliases and-->>ocifr - o' inserttext='ocistatementtype(|)' hint='(PHP 4, PHP 5, PECL OCI8>=1.0.0) Alias of oci_statement_type().' flags='130'/>
<tag menu='O' submenu='OCI8 Obsolete Aliases and-->>ocifr - o' inserttext='ociwritelobtofile(|)' hint='(PHP 4, PHP 5, PECL OCI8>=1.0.0) Alias of OCI-Lob->export.' flags='130'/>
<tag menu='O' submenu='OCI8 Obsolete Aliases and-->>ocifr - o' inserttext='ociwritetemporarylob(|)' hint='(PHP 4>=4.0.6, PECL OCI8 1.0) Alias of OCI-Lob->writeTemporary.' flags='130'/>
<tag menu='O' submenu='ODBC-->>o - odbc_field_n' inserttext='odbc_autocommit(|)' hint='(PHP 4, PHP 5) mixed odbc_autocommit(resource $connection_id [, bool $OnOff=false]) - Toggle autocommit behaviour.' flags='130'/>
<tag menu='O' submenu='ODBC-->>o - odbc_field_n' inserttext='odbc_binmode(|)' hint='(PHP 4, PHP 5) bool odbc_binmode(resource $result_id, int $mode) - Handling of binary column data.' flags='130'/>
<tag menu='O' submenu='ODBC-->>o - odbc_field_n' inserttext='odbc_close(|)' hint='(PHP 4, PHP 5) void odbc_close(resource $connection_id) - Close an ODBC connection.' flags='130'/>
<tag menu='O' submenu='ODBC-->>o - odbc_field_n' inserttext='odbc_close_all()' hint='(PHP 4, PHP 5) void odbc_close_all(void) - Close all ODBC connections.' flags='130'/>
<tag menu='O' submenu='ODBC-->>o - odbc_field_n' inserttext='odbc_columnprivileges(|)' hint='(PHP 4, PHP 5) resource odbc_columnprivileges(resource $connection_id, string $qualifier, string $owner, string $table_name, string $column_name) - Lists columns and associated privileges for the given table.' flags='130'/>
<tag menu='O' submenu='ODBC-->>o - odbc_field_n' inserttext='odbc_columns(|)' hint='(PHP 4, PHP 5) resource odbc_columns(resource $connection_id [, string $qualifier [, string $schema [, string $table_name [, string $column_name ]]]]) - Lists the column names in specified tables.' flags='130'/>
<tag menu='O' submenu='ODBC-->>o - odbc_field_n' inserttext='odbc_commit(|)' hint='(PHP 4, PHP 5) bool odbc_commit(resource $connection_id) - Commit an ODBC transaction.' flags='130'/>
<tag menu='O' submenu='ODBC-->>o - odbc_field_n' inserttext='odbc_connect(|)' hint='(PHP 4, PHP 5) resource odbc_connect(string $dsn, string $user, string $password [, int $cursor_type]) - Connect to a datasource.' flags='130'/>
<tag menu='O' submenu='ODBC-->>o - odbc_field_n' inserttext='odbc_cursor(|)' hint='(PHP 4, PHP 5) string odbc_cursor(resource $result_id) - Get cursorname.' flags='130'/>
<tag menu='O' submenu='ODBC-->>o - odbc_field_n' inserttext='odbc_data_source(|)' hint='(PHP 4>=4.3.0, PHP 5) array odbc_data_source(resource $connection_id, int $fetch_type) - Returns information about a current connection.' flags='130'/>
<tag menu='O' submenu='ODBC-->>o - odbc_field_n' inserttext='odbc_do(|)' hint='(PHP 4, PHP 5) Alias of odbc_exec().' flags='130'/>
<tag menu='O' submenu='ODBC-->>o - odbc_field_n' inserttext='odbc_error(|)' hint='(PHP 4>=4.0.5, PHP 5) string odbc_error([resource $connection_id]) - Get the last error code.' flags='130'/>
<tag menu='O' submenu='ODBC-->>o - odbc_field_n' inserttext='odbc_errormsg(|)' hint='(PHP 4>=4.0.5, PHP 5) string odbc_errormsg([resource $connection_id]) - Get the last error message.' flags='130'/>
<tag menu='O' submenu='ODBC-->>o - odbc_field_n' inserttext='odbc_exec(|)' hint='(PHP 4, PHP 5) resource odbc_exec(resource $connection_id, string $query_string [, int $flags]) - Prepare and execute an SQL statement.' flags='130'/>
<tag menu='O' submenu='ODBC-->>o - odbc_field_n' inserttext='odbc_execute(|)' hint='(PHP 4, PHP 5) bool odbc_execute(resource $result_id [, array $parameters_array]) - Execute a prepared statement.' flags='130'/>
<tag menu='O' submenu='ODBC-->>o - odbc_field_n' inserttext='odbc_fetch_array(|)' hint='(PHP 4>=4.0.2, PHP 5) array odbc_fetch_array(resource $result [, int $rownumber]) - Fetch a result row as an associative array.' flags='130'/>
<tag menu='O' submenu='ODBC-->>o - odbc_field_n' inserttext='odbc_fetch_into(|)' hint='(PHP 4, PHP 5) int odbc_fetch_into(resource $result_id, array &amp;$result_array [, int $rownumber]) - Fetch one result row into array.' flags='130'/>
<tag menu='O' submenu='ODBC-->>o - odbc_field_n' inserttext='odbc_fetch_object(|)' hint='(PHP 4>=4.0.2, PHP 5) object odbc_fetch_object(resource $result [, int $rownumber]) - Fetch a result row as an object.' flags='130'/>
<tag menu='O' submenu='ODBC-->>o - odbc_field_n' inserttext='odbc_fetch_row(|)' hint='(PHP 4, PHP 5) bool odbc_fetch_row(resource $result_id [, int $row_number]) - Fetch a row.' flags='130'/>
<tag menu='O' submenu='ODBC-->>o - odbc_field_n' inserttext='odbc_field_len(|)' hint='(PHP 4, PHP 5) int odbc_field_len(resource $result_id, int $field_number) - Get the length (precision) of a field.' flags='130'/>
<tag menu='O' submenu='ODBC-->>o - odbc_field_n' inserttext='odbc_field_name(|)' hint='(PHP 4, PHP 5) string odbc_field_name(resource $result_id, int $field_number) - Get the columnname.' flags='130'/>
<tag menu='O' submenu='ODBC-->>o - odbc_field_n' inserttext='odbc_field_num(|)' hint='(PHP 4, PHP 5) int odbc_field_num(resource $result_id, string $field_name) - Return column number.' flags='130'/>
<tag menu='O' submenu='ODBC-->>odbc_field_p - o' inserttext='odbc_field_precision(|)' hint='(PHP 4, PHP 5) Alias of odbc_field_len().' flags='130'/>
<tag menu='O' submenu='ODBC-->>odbc_field_p - o' inserttext='odbc_field_scale(|)' hint='(PHP 4, PHP 5) int odbc_field_scale(resource $result_id, int $field_number) - Get the scale of a field.' flags='130'/>
<tag menu='O' submenu='ODBC-->>odbc_field_p - o' inserttext='odbc_field_type(|)' hint='(PHP 4, PHP 5) string odbc_field_type(resource $result_id, int $field_number) - Datatype of a field.' flags='130'/>
<tag menu='O' submenu='ODBC-->>odbc_field_p - o' inserttext='odbc_foreignkeys(|)' hint='(PHP 4, PHP 5) resource odbc_foreignkeys(resource $connection_id, string $pk_qualifier, string $pk_owner, string $pk_table, string $fk_qualifier, string $fk_owner, string $fk_table) - Retrieves a list of foreign keys.' flags='130'/>
<tag menu='O' submenu='ODBC-->>odbc_field_p - o' inserttext='odbc_free_result(|)' hint='(PHP 4, PHP 5) bool odbc_free_result(resource $result_id) - Free resources associated with a result.' flags='130'/>
<tag menu='O' submenu='ODBC-->>odbc_field_p - o' inserttext='odbc_gettypeinfo(|)' hint='(PHP 4, PHP 5) resource odbc_gettypeinfo(resource $connection_id [, int $data_type]) - Retrieves information about data types supported by the data source.' flags='130'/>
<tag menu='O' submenu='ODBC-->>odbc_field_p - o' inserttext='odbc_longreadlen(|)' hint='(PHP 4, PHP 5) bool odbc_longreadlen(resource $result_id, int $length) - Handling of LONG columns.' flags='130'/>
<tag menu='O' submenu='ODBC-->>odbc_field_p - o' inserttext='odbc_next_result(|)' hint='(PHP 4>=4.0.5, PHP 5) bool odbc_next_result(resource $result_id) - Checks if multiple results are available.' flags='130'/>
<tag menu='O' submenu='ODBC-->>odbc_field_p - o' inserttext='odbc_num_fields(|)' hint='(PHP 4, PHP 5) int odbc_num_fields(resource $result_id) - Number of columns in a result.' flags='130'/>
<tag menu='O' submenu='ODBC-->>odbc_field_p - o' inserttext='odbc_num_rows(|)' hint='(PHP 4, PHP 5) int odbc_num_rows(resource $result_id) - Number of rows in a result.' flags='130'/>
<tag menu='O' submenu='ODBC-->>odbc_field_p - o' inserttext='odbc_pconnect(|)' hint='(PHP 4, PHP 5) resource odbc_pconnect(string $dsn, string $user, string $password [, int $cursor_type]) - Open a persistent database connection.' flags='130'/>
<tag menu='O' submenu='ODBC-->>odbc_field_p - o' inserttext='odbc_prepare(|)' hint='(PHP 4, PHP 5) resource odbc_prepare(resource $connection_id, string $query_string) - Prepares a statement for execution.' flags='130'/>
<tag menu='O' submenu='ODBC-->>odbc_field_p - o' inserttext='odbc_primarykeys(|)' hint='(PHP 4, PHP 5) resource odbc_primarykeys(resource $connection_id, string $qualifier, string $owner, string $table) - Gets the primary keys for a table.' flags='130'/>
<tag menu='O' submenu='ODBC-->>odbc_field_p - o' inserttext='odbc_procedurecolumns(|)' hint='(PHP 4, PHP 5) resource odbc_procedurecolumns(resource $connection_id) - Retrieve information about parameters to procedures.' flags='130'/>
<tag menu='O' submenu='ODBC-->>odbc_field_p - o' inserttext='odbc_procedures(|)' hint='(PHP 4, PHP 5) resource odbc_procedures(resource $connection_id) - Get the list of procedures stored in a specific data source.' flags='130'/>
<tag menu='O' submenu='ODBC-->>odbc_field_p - o' inserttext='odbc_result(|)' hint='(PHP 4, PHP 5) mixed odbc_result(resource $result_id, mixed $field) - Get result data.' flags='130'/>
<tag menu='O' submenu='ODBC-->>odbc_field_p - o' inserttext='odbc_result_all(|)' hint='(PHP 4, PHP 5) int odbc_result_all(resource $result_id [, string $format]) - Print result as HTML table.' flags='130'/>
<tag menu='O' submenu='ODBC-->>odbc_field_p - o' inserttext='odbc_rollback(|)' hint='(PHP 4, PHP 5) bool odbc_rollback(resource $connection_id) - Rollback a transaction.' flags='130'/>
<tag menu='O' submenu='ODBC-->>odbc_field_p - o' inserttext='odbc_setoption(|)' hint='(PHP 4, PHP 5) bool odbc_setoption(resource $id, int $function, int $option, int $param) - Adjust ODBC settings.' flags='130'/>
<tag menu='O' submenu='ODBC-->>odbc_field_p - o' inserttext='odbc_specialcolumns(|)' hint='(PHP 4, PHP 5) resource odbc_specialcolumns(resource $connection_id, int $type, string $qualifier, string $owner, string $table, int $scope, int $nullable) - Retrieves special columns.' flags='130'/>
<tag menu='O' submenu='ODBC-->>odbc_field_p - o' inserttext='odbc_statistics(|)' hint='(PHP 4, PHP 5) resource odbc_statistics(resource $connection_id, string $qualifier, string $owner, string $table_name, int $unique, int $accuracy) - Retrieve statistics about a table.' flags='130'/>
<tag menu='O' submenu='ODBC-->>odbc_field_p - o' inserttext='odbc_tableprivileges(|)' hint='(PHP 4, PHP 5) resource odbc_tableprivileges(resource $connection_id, string $qualifier, string $owner, string $name) - Lists tables and the privileges associated with each table.' flags='130'/>
<tag menu='O' submenu='ODBC-->>odbc_field_p - o' inserttext='odbc_tables(|)' hint='(PHP 4, PHP 5) resource odbc_tables(resource $connection_id [, string $qualifier [, string $owner [, string $name [, string $types ]]]]) - Get the list of table names stored in a specific data source.' flags='130'/>
<tag menu='O' submenu='Object Aggregation' inserttext='aggregate(|)' hint='(PHP 4>=4.2.0) void aggregate(object $object, string $class_name) - Dynamic class and object aggregation of methods and properties.' flags='130'/>
<tag menu='O' submenu='Object Aggregation' inserttext='aggregate_info(|)' hint='(PHP 4>=4.3.0) array aggregate_info(object $object) - Gets aggregation information for a given object.' flags='130'/>
<tag menu='O' submenu='Object Aggregation' inserttext='aggregate_methods(|)' hint='(PHP 4>=4.2.0) void aggregate_methods(object $object, string $class_name) - Dynamic class and object aggregation of methods.' flags='130'/>
<tag menu='O' submenu='Object Aggregation' inserttext='aggregate_methods_by_list(|)' hint='(PHP 4>=4.2.0) void aggregate_methods_by_list(object $object, string $class_name, array $methods_list [, bool $exclude=false]) - Selective dynamic class methods aggregation to an object.' flags='130'/>
<tag menu='O' submenu='Object Aggregation' inserttext='aggregate_methods_by_regexp(|)' hint='(PHP 4>=4.2.0) void aggregate_methods_by_regexp(object $object, string $class_name, string $regexp [, bool $exclude=false]) - Selective class methods aggregation to an object using a regular expression.' flags='130'/>
<tag menu='O' submenu='Object Aggregation' inserttext='aggregate_properties(|)' hint='(PHP 4>=4.2.0) void aggregate_properties(object $object, string $class_name) - Dynamic aggregation of class properties to an object.' flags='130'/>
<tag menu='O' submenu='Object Aggregation' inserttext='aggregate_properties_by_list(|)' hint='(PHP 4>=4.2.0) void aggregate_properties_by_list(object $object, string $class_name, array $properties_list [, bool $exclude=false]) - Selective dynamic class properties aggregation to an object.' flags='130'/>
<tag menu='O' submenu='Object Aggregation' inserttext='aggregate_properties_by_regexp(|)' hint='(PHP 4>=4.2.0) void aggregate_properties_by_regexp(object $object, string $class_name, string $regexp [, bool $exclude=false]) - Selective class properties aggregation to an object using a regular expression.' flags='130'/>
<tag menu='O' submenu='Object Aggregation' inserttext='aggregation_info(|)' hint='(PHP 4>=4.2.0 and&lt;4.3.0) Alias of aggregate_info().' flags='130'/>
<tag menu='O' submenu='Object Aggregation' inserttext='deaggregate(|)' hint='(PHP 4>=4.2.0) void deaggregate(object $object [, string $class_name]) - Removes the aggregated methods and properties from an object.' flags='130'/>
<tag menu='O' submenu='Object overloading' inserttext='overload(|)' hint='(PHP 4>=4.3.0) void overload(string $class_name) - Enable property and method call overloading for a class.' flags='130'/>
<tag menu='O' submenu='OpenSSL-->>o - openssl_pkcs7_s' inserttext='openssl_csr_export(|)' hint='(PHP 4>=4.2.0, PHP 5) bool openssl_csr_export(resource $csr, string &amp;$out [, bool $notext=true]) - Exports a CSR as a string.' flags='130'/>
<tag menu='O' submenu='OpenSSL-->>o - openssl_pkcs7_s' inserttext='openssl_csr_export_to_file(|)' hint='(PHP 4>=4.2.0, PHP 5) bool openssl_csr_export_to_file(resource $csr, string $outfilename [, bool $notext=true]) - Exports a CSR to a file.' flags='130'/>
<tag menu='O' submenu='OpenSSL-->>o - openssl_pkcs7_s' inserttext='openssl_csr_get_public_key(|)' hint='(PHP 5>=5.2.0) resource openssl_csr_get_public_key(mixed $csr [, bool $use_shortnames=true]) - Returns the public key of a CERT.' flags='130'/>
<tag menu='O' submenu='OpenSSL-->>o - openssl_pkcs7_s' inserttext='openssl_csr_get_subject(|)' hint='(PHP 5>=5.2.0) array openssl_csr_get_subject(mixed $csr [, bool $use_shortnames=true]) - Returns the subject of a CERT.' flags='130'/>
<tag menu='O' submenu='OpenSSL-->>o - openssl_pkcs7_s' inserttext='openssl_csr_new(|)' hint='(PHP 4>=4.2.0, PHP 5) mixed openssl_csr_new(array $dn, resource &amp;$privkey [, array $configargs [, array $extraattribs ]]) - Generates a CSR.' flags='130'/>
<tag menu='O' submenu='OpenSSL-->>o - openssl_pkcs7_s' inserttext='openssl_csr_sign(|)' hint='(PHP 4>=4.2.0, PHP 5) resource openssl_csr_sign(mixed $csr, mixed $cacert, mixed $priv_key, int $days [, array $configargs [, int $serial=0 ]]) - Sign a CSR with another certificate (or itself) and generate a certificate.' flags='130'/>
<tag menu='O' submenu='OpenSSL-->>o - openssl_pkcs7_s' inserttext='openssl_decrypt(|)' hint='(PHP 5>=5.3.0) string openssl_decrypt(string $data, string $method, string $password [, string $raw_input=false]) - Decrypts data.' flags='130'/>
<tag menu='O' submenu='OpenSSL-->>o - openssl_pkcs7_s' inserttext='openssl_digest(|)' hint='(PHP 5>=5.3.0) string openssl_digest(string $data, string $method [, bool $raw_output=false]) - Computes a digest.' flags='130'/>
<tag menu='O' submenu='OpenSSL-->>o - openssl_pkcs7_s' inserttext='openssl_encrypt(|)' hint='(PHP 5>=5.3.0) string openssl_encrypt(string $data, string $method, string $password [, bool $raw_output=false]) - Encrypts data.' flags='130'/>
<tag menu='O' submenu='OpenSSL-->>o - openssl_pkcs7_s' inserttext='openssl_error_string()' hint='(PHP 4>=4.0.6, PHP 5) string openssl_error_string(void) - Return openSSL error message.' flags='130'/>
<tag menu='O' submenu='OpenSSL-->>o - openssl_pkcs7_s' inserttext='openssl_free_key(|)' hint='(PHP 4>=4.0.4, PHP 5) void openssl_free_key(resource $key_identifier) - Free key resource.' flags='130'/>
<tag menu='O' submenu='OpenSSL-->>o - openssl_pkcs7_s' inserttext='openssl_get_cipher_methods(|)' hint='(PHP 5>=5.3.0) array openssl_get_cipher_methods([bool $aliases=false]) - Gets available cipher methods.' flags='130'/>
<tag menu='O' submenu='OpenSSL-->>o - openssl_pkcs7_s' inserttext='openssl_get_md_methods(|)' hint='(PHP 5>=5.3.0) array openssl_get_md_methods([bool $aliases=false]) - Gets available digest methods.' flags='130'/>
<tag menu='O' submenu='OpenSSL-->>o - openssl_pkcs7_s' inserttext='openssl_get_privatekey(|)' hint='(PHP 4>=4.0.4, PHP 5) Alias of openssl_pkey_get_private().' flags='130'/>
<tag menu='O' submenu='OpenSSL-->>o - openssl_pkcs7_s' inserttext='openssl_get_publickey(|)' hint='(PHP 4>=4.0.4, PHP 5) Alias of openssl_pkey_get_public().' flags='130'/>
<tag menu='O' submenu='OpenSSL-->>o - openssl_pkcs7_s' inserttext='openssl_open(|)' hint='(PHP 4>=4.0.4, PHP 5) bool openssl_open(string $sealed_data, string &amp;$open_data, string $env_key, mixed $priv_key_id) - Open sealed data.' flags='130'/>
<tag menu='O' submenu='OpenSSL-->>o - openssl_pkcs7_s' inserttext='openssl_pkcs12_export(|)' hint='(PHP 5>=5.2.2) bool openssl_pkcs12_export(mixed $x509, string &amp;$out, mixed $priv_key, string $pass [, array $args]) - Exports a PKCS#12 Compatible Certificate Store File to variable.' flags='130'/>
<tag menu='O' submenu='OpenSSL-->>o - openssl_pkcs7_s' inserttext='openssl_pkcs12_export_to_file(|)' hint='(PHP 5>=5.2.2) bool openssl_pkcs12_export_to_file(mixed $x509, string $filename, mixed $priv_key, string $pass [, array $args]) - Exports a PKCS#12 Compatible Certificate Store File.' flags='130'/>
<tag menu='O' submenu='OpenSSL-->>o - openssl_pkcs7_s' inserttext='openssl_pkcs12_read(|)' hint='(PHP 5>=5.2.2) bool openssl_pkcs12_read(string $pkcs12, array &amp;$certs, string $pass) - Parse a PKCS#12 Certificate Store into an array.' flags='130'/>
<tag menu='O' submenu='OpenSSL-->>o - openssl_pkcs7_s' inserttext='openssl_pkcs7_decrypt(|)' hint='(PHP 4>=4.0.6, PHP 5) bool openssl_pkcs7_decrypt(string $infilename, string $outfilename, mixed $recipcert [, mixed $recipkey]) - Decrypts an S/MIME encrypted message.' flags='130'/>
<tag menu='O' submenu='OpenSSL-->>o - openssl_pkcs7_s' inserttext='openssl_pkcs7_encrypt(|)' hint='(PHP 4>=4.0.6, PHP 5) bool openssl_pkcs7_encrypt(string $infile, string $outfile, mixed $recipcerts, array $headers [, int $flags=0 [, int $cipherid=OPENSSL_CIPHER_RC2_40 ]]) - Encrypt an S/MIME message.' flags='130'/>
<tag menu='O' submenu='OpenSSL-->>o - openssl_pkcs7_s' inserttext='openssl_pkcs7_sign(|)' hint='(PHP 4>=4.0.6, PHP 5) bool openssl_pkcs7_sign(string $infilename, string $outfilename, mixed $signcert, mixed $privkey, array $headers [, int $flags=PKCS7_DETACHED [, string $extracerts ]]) - Sign an S/MIME message.' flags='130'/>
<tag menu='O' submenu='OpenSSL-->>openssl_pkcs7_v - o' inserttext='openssl_pkcs7_verify(|)' hint='(PHP 4>=4.0.6, PHP 5) mixed openssl_pkcs7_verify(string $filename, int $flags [, string $outfilename [, array $cainfo [, string $extracerts [, string $content ]]]]) - Verifies the signature of an S/MIME signed message.' flags='130'/>
<tag menu='O' submenu='OpenSSL-->>openssl_pkcs7_v - o' inserttext='openssl_pkey_export(|)' hint='(PHP 4>=4.2.0, PHP 5) bool openssl_pkey_export(mixed $key, string &amp;$out [, string $passphrase [, array $configargs ]]) - Gets an exportable representation of a key into a string.' flags='130'/>
<tag menu='O' submenu='OpenSSL-->>openssl_pkcs7_v - o' inserttext='openssl_pkey_export_to_file(|)' hint='(PHP 4>=4.2.0, PHP 5) bool openssl_pkey_export_to_file(mixed $key, string $outfilename [, string $passphrase [, array $configargs ]]) - Gets an exportable representation of a key into a file.' flags='130'/>
<tag menu='O' submenu='OpenSSL-->>openssl_pkcs7_v - o' inserttext='openssl_pkey_free(|)' hint='(PHP 4>=4.2.0, PHP 5) void openssl_pkey_free(resource $key) - Frees a private key.' flags='130'/>
<tag menu='O' submenu='OpenSSL-->>openssl_pkcs7_v - o' inserttext='openssl_pkey_get_details(|)' hint='(PHP 5>=5.2.0) array openssl_pkey_get_details(resource $key) - Returns an array with the key details.' flags='130'/>
<tag menu='O' submenu='OpenSSL-->>openssl_pkcs7_v - o' inserttext='openssl_pkey_get_private(|)' hint='(PHP 4>=4.2.0, PHP 5) resource openssl_pkey_get_private(mixed $key [, string $passphrase=""]) - Get a private key.' flags='130'/>
<tag menu='O' submenu='OpenSSL-->>openssl_pkcs7_v - o' inserttext='openssl_pkey_get_public(|)' hint='(PHP 4>=4.2.0, PHP 5) resource openssl_pkey_get_public(mixed $certificate) - Extract public key from certificate and prepare it for use.' flags='130'/>
<tag menu='O' submenu='OpenSSL-->>openssl_pkcs7_v - o' inserttext='openssl_pkey_new(|)' hint='(PHP 4>=4.2.0, PHP 5) resource openssl_pkey_new([array $configargs]) - Generates a new private key.' flags='130'/>
<tag menu='O' submenu='OpenSSL-->>openssl_pkcs7_v - o' inserttext='openssl_private_decrypt(|)' hint='(PHP 4>=4.0.6, PHP 5) bool openssl_private_decrypt(string $data, string &amp;$decrypted, mixed $key [, int $padding=OPENSSL_PKCS1_PADDING]) - Decrypts data with private key.' flags='130'/>
<tag menu='O' submenu='OpenSSL-->>openssl_pkcs7_v - o' inserttext='openssl_private_encrypt(|)' hint='(PHP 4>=4.0.6, PHP 5) bool openssl_private_encrypt(string $data, string &amp;$crypted, mixed $key [, int $padding=OPENSSL_PKCS1_PADDING]) - Encrypts data with private key.' flags='130'/>
<tag menu='O' submenu='OpenSSL-->>openssl_pkcs7_v - o' inserttext='openssl_public_decrypt(|)' hint='(PHP 4>=4.0.6, PHP 5) bool openssl_public_decrypt(string $data, string &amp;$decrypted, mixed $key [, int $padding=OPENSSL_PKCS1_PADDING]) - Decrypts data with public key.' flags='130'/>
<tag menu='O' submenu='OpenSSL-->>openssl_pkcs7_v - o' inserttext='openssl_public_encrypt(|)' hint='(PHP 4>=4.0.6, PHP 5) bool openssl_public_encrypt(string $data, string &amp;$crypted, mixed $key [, int $padding=OPENSSL_PKCS1_PADDING]) - Encrypts data with public key.' flags='130'/>
<tag menu='O' submenu='OpenSSL-->>openssl_pkcs7_v - o' inserttext='openssl_random_pseudo_bytes(|)' hint='(PHP 5>=5.3.0) string openssl_random_pseudo_bytes(string $length [, bool &amp;$crypto_strong]) - Generate a pseudo-random string of bytes.' flags='130'/>
<tag menu='O' submenu='OpenSSL-->>openssl_pkcs7_v - o' inserttext='openssl_seal(|)' hint='(PHP 4>=4.0.4, PHP 5) int openssl_seal(string $data, string &amp;$sealed_data, array &amp;$env_keys, array $pub_key_ids) - Seal (encrypt) data.' flags='130'/>
<tag menu='O' submenu='OpenSSL-->>openssl_pkcs7_v - o' inserttext='openssl_sign(|)' hint='(PHP 4>=4.0.4, PHP 5) bool openssl_sign(string $data, string &amp;$signature, mixed $priv_key_id [, int $signature_alg=OPENSSL_ALGO_SHA1]) - Generate signature.' flags='130'/>
<tag menu='O' submenu='OpenSSL-->>openssl_pkcs7_v - o' inserttext='openssl_verify(|)' hint='(PHP 4>=4.0.4, PHP 5) int openssl_verify(string $data, string $signature, mixed $pub_key_id [, int $signature_alg=OPENSSL_ALGO_SHA1]) - Verify signature.' flags='130'/>
<tag menu='O' submenu='OpenSSL-->>openssl_pkcs7_v - o' inserttext='openssl_x509_check_private_key(|)' hint='(PHP 4>=4.2.0, PHP 5) bool openssl_x509_check_private_key(mixed $cert, mixed $key) - Checks if a private key corresponds to a certificate.' flags='130'/>
<tag menu='O' submenu='OpenSSL-->>openssl_pkcs7_v - o' inserttext='openssl_x509_checkpurpose(|)' hint='(PHP 4>=4.0.6, PHP 5) int openssl_x509_checkpurpose(mixed $x509cert, int $purpose [, array $cainfo=array() [, string $untrustedfile ]]) - Verifies if a certificate can be used for a particular purpose.' flags='130'/>
<tag menu='O' submenu='OpenSSL-->>openssl_pkcs7_v - o' inserttext='openssl_x509_export(|)' hint='(PHP 4>=4.2.0, PHP 5) bool openssl_x509_export(mixed $x509, string &amp;$output [, bool $notext]) - Exports a certificate as a string.' flags='130'/>
<tag menu='O' submenu='OpenSSL-->>openssl_pkcs7_v - o' inserttext='openssl_x509_export_to_file(|)' hint='(PHP 4>=4.2.0, PHP 5) bool openssl_x509_export_to_file(mixed $x509, string $outfilename [, bool $notext]) - Exports a certificate to file.' flags='130'/>
<tag menu='O' submenu='OpenSSL-->>openssl_pkcs7_v - o' inserttext='openssl_x509_free(|)' hint='(PHP 4>=4.0.6, PHP 5) void openssl_x509_free(resource $x509cert) - Free certificate resource.' flags='130'/>
<tag menu='O' submenu='OpenSSL-->>openssl_pkcs7_v - o' inserttext='openssl_x509_parse(|)' hint='(PHP 4>=4.0.6, PHP 5) array openssl_x509_parse(mixed $x509cert [, bool $shortnames=true]) - Parse an X509 certificate and return the information as an array.' flags='130'/>
<tag menu='O' submenu='OpenSSL-->>openssl_pkcs7_v - o' inserttext='openssl_x509_read(|)' hint='(PHP 4>=4.0.6, PHP 5) resource openssl_x509_read(mixed $x509certdata) - Parse an X.509 certificate and return a resource identifier for it.' flags='130'/>
<tag menu='O' submenu='OuterIterator interface' inserttext='OuterIterator::getInnerIterator()' hint='(PHP 5>=5.1.0) public Iterator OuterIterator::getInnerIterator(void) - Returns the inner iterator for the current entry.' flags='130'/>
<tag menu='O' submenu='Output Control' inserttext='flush()' hint='(PHP 4, PHP 5) void flush(void) - Flush the output buffer.' flags='130'/>
<tag menu='O' submenu='Output Control' inserttext='ob_clean()' hint='(PHP 4>=4.2.0, PHP 5) void ob_clean(void) - Clean (erase) the output buffer.' flags='130'/>
<tag menu='O' submenu='Output Control' inserttext='ob_end_clean()' hint='(PHP 4, PHP 5) bool ob_end_clean(void) - Clean (erase) the output buffer and turn off output buffering.' flags='130'/>
<tag menu='O' submenu='Output Control' inserttext='ob_end_flush()' hint='(PHP 4, PHP 5) bool ob_end_flush(void) - Flush (send) the output buffer and turn off output buffering.' flags='130'/>
<tag menu='O' submenu='Output Control' inserttext='ob_flush()' hint='(PHP 4>=4.2.0, PHP 5) void ob_flush(void) - Flush (send) the output buffer.' flags='130'/>
<tag menu='O' submenu='Output Control' inserttext='ob_get_clean()' hint='(PHP 4>=4.3.0, PHP 5) string ob_get_clean(void) - Get current buffer contents and delete current output buffer.' flags='130'/>
<tag menu='O' submenu='Output Control' inserttext='ob_get_contents()' hint='(PHP 4, PHP 5) string ob_get_contents(void) - Return the contents of the output buffer.' flags='130'/>
<tag menu='O' submenu='Output Control' inserttext='ob_get_flush()' hint='(PHP 4>=4.3.0, PHP 5) string ob_get_flush(void) - Flush the output buffer, return it as a string and turn off output buffering.' flags='130'/>
<tag menu='O' submenu='Output Control' inserttext='ob_get_length()' hint='(PHP 4>=4.0.2, PHP 5) int ob_get_length(void) - Return the length of the output buffer.' flags='130'/>
<tag menu='O' submenu='Output Control' inserttext='ob_get_level()' hint='(PHP 4>=4.2.0, PHP 5) int ob_get_level(void) - Return the nesting level of the output buffering mechanism.' flags='130'/>
<tag menu='O' submenu='Output Control' inserttext='ob_get_status(|)' hint='(PHP 4>=4.2.0, PHP 5) array ob_get_status([bool $full_status=FALSE]) - Get status of output buffers.' flags='130'/>
<tag menu='O' submenu='Output Control' inserttext='ob_gzhandler(|)' hint='(PHP 4>=4.0.4, PHP 5) string ob_gzhandler(string $buffer, int $mode) - ob_start callback function to gzip output buffer.' flags='130'/>
<tag menu='O' submenu='Output Control' inserttext='ob_implicit_flush(|)' hint='(PHP 4, PHP 5) void ob_implicit_flush([int $flag=true]) - Turn implicit flush on/off.' flags='130'/>
<tag menu='O' submenu='Output Control' inserttext='ob_list_handlers()' hint='(PHP 4>=4.3.0, PHP 5) array ob_list_handlers(void) - List all output handlers in use.' flags='130'/>
<tag menu='O' submenu='Output Control' inserttext='ob_start(|)' hint='(PHP 4, PHP 5) bool ob_start([callback $output_callback [, int $chunk_size [, bool $erase ]]]) - Turn on output buffering.' flags='130'/>
<tag menu='O' submenu='Output Control' inserttext='output_add_rewrite_var(|)' hint='(PHP 4>=4.3.0, PHP 5) bool output_add_rewrite_var(string $name, string $value) - Add URL rewriter values.' flags='130'/>
<tag menu='O' submenu='Output Control' inserttext='output_reset_rewrite_vars()' hint='(PHP 4>=4.3.0, PHP 5) bool output_reset_rewrite_vars(void) - Reset URL rewriter values.' flags='130'/>
<tag menu='O' submenu='Ovrimos SQL' inserttext='ovrimos_close(|)' hint='(PHP 4>=4.0.3, PHP 5&lt;=5.0.5) void ovrimos_close(int $connection) - Closes the connection to ovrimos.' flags='130'/>
<tag menu='O' submenu='Ovrimos SQL' inserttext='ovrimos_commit(|)' hint='(PHP 4>=4.0.3, PHP 5&lt;=5.0.5) bool ovrimos_commit(int $connection_id) - Commits the transaction.' flags='130'/>
<tag menu='O' submenu='Ovrimos SQL' inserttext='ovrimos_connect(|)' hint='(PHP 4>=4.0.3, PHP 5&lt;=5.0.5) int ovrimos_connect(string $host, string $dborport, string $user, string $password) - Connect to the specified database.' flags='130'/>
<tag menu='O' submenu='Ovrimos SQL' inserttext='ovrimos_cursor(|)' hint='(PHP 4>=4.0.3, PHP 5&lt;=5.0.5) string ovrimos_cursor(int $result_id) - Returns the name of the cursor.' flags='130'/>
<tag menu='O' submenu='Ovrimos SQL' inserttext='ovrimos_exec(|)' hint='(PHP 4>=4.0.3, PHP 5&lt;=5.0.5) int ovrimos_exec(int $connection_id, string $query) - Executes an SQL statement.' flags='130'/>
<tag menu='O' submenu='Ovrimos SQL' inserttext='ovrimos_execute(|)' hint='(PHP 4>=4.0.3, PHP 5&lt;=5.0.5) bool ovrimos_execute(int $result_id [, array $parameters_array]) - Executes a prepared SQL statement.' flags='130'/>
<tag menu='O' submenu='Ovrimos SQL' inserttext='ovrimos_fetch_into(|)' hint='(PHP 4>=4.0.3, PHP 5&lt;=5.0.5) bool ovrimos_fetch_into(int $result_id, array &amp;$result_array [, string $how [, int $rownumber ]]) - Fetches a row from the result set.' flags='130'/>
<tag menu='O' submenu='Ovrimos SQL' inserttext='ovrimos_fetch_row(|)' hint='(PHP 4>=4.0.3, PHP 5&lt;=5.0.5) bool ovrimos_fetch_row(int $result_id [, int $how [, int $row_number ]]) - Fetches a row from the result set.' flags='130'/>
<tag menu='O' submenu='Ovrimos SQL' inserttext='ovrimos_field_len(|)' hint='(PHP 4>=4.0.3, PHP 5&lt;=5.0.5) int ovrimos_field_len(int $result_id, int $field_number) - Returns the length of the output column.' flags='130'/>
<tag menu='O' submenu='Ovrimos SQL' inserttext='ovrimos_field_name(|)' hint='(PHP 4>=4.0.3, PHP 5&lt;=5.0.5) string ovrimos_field_name(int $result_id, int $field_number) - Returns the output column name.' flags='130'/>
<tag menu='O' submenu='Ovrimos SQL' inserttext='ovrimos_field_num(|)' hint='(PHP 4>=4.0.3, PHP 5&lt;=5.0.5) int ovrimos_field_num(int $result_id, string $field_name) - Returns the (1-based) index of the output column.' flags='130'/>
<tag menu='O' submenu='Ovrimos SQL' inserttext='ovrimos_field_type(|)' hint='(PHP 4>=4.0.3, PHP 5&lt;=5.0.5) int ovrimos_field_type(int $result_id, int $field_number) - Returns the type of the output column.' flags='130'/>
<tag menu='O' submenu='Ovrimos SQL' inserttext='ovrimos_free_result(|)' hint='(PHP 4>=4.0.3, PHP 5&lt;=5.0.5) bool ovrimos_free_result(int $result_id) - Frees the specified result_id.' flags='130'/>
<tag menu='O' submenu='Ovrimos SQL' inserttext='ovrimos_longreadlen(|)' hint='(PHP 4>=4.0.3, PHP 5&lt;=5.0.5) bool ovrimos_longreadlen(int $result_id, int $length) - Specifies how many bytes are to be retrieved from long datatypes.' flags='130'/>
<tag menu='O' submenu='Ovrimos SQL' inserttext='ovrimos_num_fields(|)' hint='(PHP 4>=4.0.3, PHP 5&lt;=5.0.5) int ovrimos_num_fields(int $result_id) - Returns the number of columns.' flags='130'/>
<tag menu='O' submenu='Ovrimos SQL' inserttext='ovrimos_num_rows(|)' hint='(PHP 4>=4.0.3, PHP 5&lt;=5.0.5) int ovrimos_num_rows(int $result_id) - Returns the number of rows affected by update operations.' flags='130'/>
<tag menu='O' submenu='Ovrimos SQL' inserttext='ovrimos_prepare(|)' hint='(PHP 4>=4.0.3, PHP 5&lt;=5.0.5) int ovrimos_prepare(int $connection_id, string $query) - Prepares an SQL statement.' flags='130'/>
<tag menu='O' submenu='Ovrimos SQL' inserttext='ovrimos_result(|)' hint='(PHP 4>=4.0.3, PHP 5&lt;=5.0.5) string ovrimos_result(int $result_id, mixed $field) - Retrieves the output column.' flags='130'/>
<tag menu='O' submenu='Ovrimos SQL' inserttext='ovrimos_result_all(|)' hint='(PHP 4>=4.0.3, PHP 5&lt;=5.0.5) int ovrimos_result_all(int $result_id [, string $format]) - Prints the whole result set as an HTML table.' flags='130'/>
<tag menu='O' submenu='Ovrimos SQL' inserttext='ovrimos_rollback(|)' hint='(PHP 4>=4.0.3, PHP 5&lt;=5.0.5) bool ovrimos_rollback(int $connection_id) - Rolls back the transaction.' flags='130'/>
<tag menu='P' submenu='PCNTL' inserttext='pcntl_alarm(|)' hint='(PHP 4>=4.3.0, PHP 5) int pcntl_alarm(int $seconds) - Set an alarm clock for delivery of a signal.' flags='130'/>
<tag menu='P' submenu='PCNTL' inserttext='pcntl_exec(|)' hint='(PHP 4>=4.2.0, PHP 5) void pcntl_exec(string $path [, array $args [, array $envs ]]) - Executes specified program in current process space.' flags='130'/>
<tag menu='P' submenu='PCNTL' inserttext='pcntl_fork()' hint='(PHP 4>=4.1.0, PHP 5) int pcntl_fork(void) - Forks the currently running process.' flags='130'/>
<tag menu='P' submenu='PCNTL' inserttext='pcntl_getpriority(|)' hint='(PHP 5) int pcntl_getpriority([int $pid=getmypid() [, int $process_identifier=PRIO_PROCESS ]]) - Get the priority of any process.' flags='130'/>
<tag menu='P' submenu='PCNTL' inserttext='pcntl_setpriority(|)' hint='(PHP 5) bool pcntl_setpriority(int $priority [, int $pid=getmypid() [, int $process_identifier=PRIO_PROCESS ]]) - Change the priority of any process.' flags='130'/>
<tag menu='P' submenu='PCNTL' inserttext='pcntl_signal(|)' hint='(PHP 4>=4.1.0, PHP 5) bool pcntl_signal(int $signo, callback $handler [, bool $restart_syscalls=true]) - Installs a signal handler.' flags='130'/>
<tag menu='P' submenu='PCNTL' inserttext='pcntl_signal_dispatch()' hint='(PHP 5>=5.3.0) bool pcntl_signal_dispatch(void) - Calls signal handlers for pending signals.' flags='130'/>
<tag menu='P' submenu='PCNTL' inserttext='pcntl_sigprocmask(|)' hint='(PHP 5>=5.3.0) bool pcntl_sigprocmask(int $how, array $set [, array &amp;$oldset]) - Sets and retrieves blocked signals.' flags='130'/>
<tag menu='P' submenu='PCNTL' inserttext='pcntl_sigtimedwait(|)' hint='(PHP 5>=5.3.0) int pcntl_sigtimedwait(array $set [, array &amp;$siginfo [, int $seconds=0 [, int $nanoseconds=0 ]]]) - Waits for signals, with a timeout.' flags='130'/>
<tag menu='P' submenu='PCNTL' inserttext='pcntl_sigwaitinfo(|)' hint='(PHP 5>=5.3.0) int pcntl_sigwaitinfo(array $set [, array &amp;$siginfo]) - Waits for signals.' flags='130'/>
<tag menu='P' submenu='PCNTL' inserttext='pcntl_wait(|)' hint='(PHP 5) int pcntl_wait(int &amp;$status [, int $options=0]) - Waits on or returns the status of a forked child.' flags='130'/>
<tag menu='P' submenu='PCNTL' inserttext='pcntl_waitpid(|)' hint='(PHP 4>=4.1.0, PHP 5) int pcntl_waitpid(int $pid, int &amp;$status [, int $options=0]) - Waits on or returns the status of a forked child.' flags='130'/>
<tag menu='P' submenu='PCNTL' inserttext='pcntl_wexitstatus(|)' hint='(PHP 4>=4.1.0, PHP 5) int pcntl_wexitstatus(int $status) - Returns the return code of a terminated child.' flags='130'/>
<tag menu='P' submenu='PCNTL' inserttext='pcntl_wifexited(|)' hint='(PHP 4>=4.1.0, PHP 5) bool pcntl_wifexited(int $status) - Checks if status code represents a normal exit.' flags='130'/>
<tag menu='P' submenu='PCNTL' inserttext='pcntl_wifsignaled(|)' hint='(PHP 4>=4.1.0, PHP 5) bool pcntl_wifsignaled(int $status) - Checks whether the status code represents a termination due to a signal.' flags='130'/>
<tag menu='P' submenu='PCNTL' inserttext='pcntl_wifstopped(|)' hint='(PHP 4>=4.1.0, PHP 5) bool pcntl_wifstopped(int $status) - Checks whether the child process is currently stopped.' flags='130'/>
<tag menu='P' submenu='PCNTL' inserttext='pcntl_wstopsig(|)' hint='(PHP 4>=4.1.0, PHP 5) int pcntl_wstopsig(int $status) - Returns the signal which caused the child to stop.' flags='130'/>
<tag menu='P' submenu='PCNTL' inserttext='pcntl_wtermsig(|)' hint='(PHP 4>=4.1.0, PHP 5) int pcntl_wtermsig(int $status) - Returns the signal which caused the child to terminate.' flags='130'/>
<tag menu='P' submenu='PCRE' inserttext='preg_filter(|)' hint='(PHP 5>=5.3.0) mixed preg_filter(mixed $pattern, mixed $replacement, mixed $subject [, int $limit=-1 [, int &amp;$count ]]) - Perform a regular expression search and replace.' flags='130'/>
<tag menu='P' submenu='PCRE' inserttext='preg_grep(|)' hint='(PHP 4, PHP 5) array preg_grep(string $pattern, array $input [, int $flags=0]) - Return array entries that match the pattern.' flags='130'/>
<tag menu='P' submenu='PCRE' inserttext='preg_last_error()' hint='(PHP 5>=5.2.0) int preg_last_error(void) - Returns the error code of the last PCRE regex execution.' flags='130'/>
<tag menu='P' submenu='PCRE' inserttext='preg_match(|)' hint='(PHP 4, PHP 5) int preg_match(string $pattern, string $subject [, array &amp;$matches [, int $flags [, int $offset ]]]) - Perform a regular expression match.' flags='130'/>
<tag menu='P' submenu='PCRE' inserttext='preg_match_all(|)' hint='(PHP 4, PHP 5) int preg_match_all(string $pattern, string $subject, array &amp;$matches [, int $flags [, int $offset ]]) - Perform a global regular expression match.' flags='130'/>
<tag menu='P' submenu='PCRE' inserttext='preg_quote(|)' hint='(PHP 4, PHP 5) string preg_quote(string $str [, string $delimiter=NULL]) - Quote regular expression characters.' flags='130'/>
<tag menu='P' submenu='PCRE' inserttext='preg_replace(|)' hint='(PHP 4, PHP 5) mixed preg_replace(mixed $pattern, mixed $replacement, mixed $subject [, int $limit=-1 [, int &amp;$count ]]) - Perform a regular expression search and replace.' flags='130'/>
<tag menu='P' submenu='PCRE' inserttext='preg_replace_callback(|)' hint='(PHP 4>=4.0.5, PHP 5) mixed preg_replace_callback(mixed $pattern, callback $callback, mixed $subject [, int $limit=-1 [, int &amp;$count ]]) - Perform a regular expression search and replace using a callback.' flags='130'/>
<tag menu='P' submenu='PCRE' inserttext='preg_split(|)' hint='(PHP 4, PHP 5) array preg_split(string $pattern, string $subject [, int $limit=-1 [, int $flags=0 ]]) - Split string by a regular expression.' flags='130'/>
<tag menu='P' submenu='PDF-->>P - PDF_close' inserttext='PDF_add_annotation(|)' hint='(PHP 4, PECL pdflib>=1.0.0) Add annotation [deprecated].' flags='130'/>
<tag menu='P' submenu='PDF-->>P - PDF_close' inserttext='PDF_add_bookmark(|)' hint='(PHP 4>=4.0.1, PECL pdflib>=1.0.0) Add bookmark for current page [deprecated].' flags='130'/>
<tag menu='P' submenu='PDF-->>P - PDF_close' inserttext='PDF_add_launchlink(|)' hint='(PHP 4>=4.0.5, PECL pdflib>=1.0.0) bool PDF_add_launchlink(resource $pdfdoc, float $llx, float $lly, float $urx, float $ury, string $filename) - Add launch annotation for current page [deprecated].' flags='130'/>
<tag menu='P' submenu='PDF-->>P - PDF_close' inserttext='PDF_add_locallink(|)' hint='(PHP 4>=4.0.5, PECL pdflib>=1.0.0) bool PDF_add_locallink(resource $pdfdoc, float $lowerleftx, float $lowerlefty, float $upperrightx, float $upperrighty, int $page, string $dest) - Add link annotation for current page [deprecated].' flags='130'/>
<tag menu='P' submenu='PDF-->>P - PDF_close' inserttext='PDF_add_note(|)' hint='(PHP 4>=4.0.5, PECL pdflib>=1.0.0) bool PDF_add_note(resource $pdfdoc, float $llx, float $lly, float $urx, float $ury, string $contents, string $title, string $icon, int $open) - Set annotation for current page [deprecated].' flags='130'/>
<tag menu='P' submenu='PDF-->>P - PDF_close' inserttext='PDF_add_outline(|)' hint='(PHP 4, PECL pdflib>=1.0.0) Add bookmark for current page [deprecated].' flags='130'/>
<tag menu='P' submenu='PDF-->>P - PDF_close' inserttext='PDF_add_pdflink(|)' hint='(PHP 4, PECL pdflib>=1.0.0) bool PDF_add_pdflink(resource $pdfdoc, float $bottom_left_x, float $bottom_left_y, float $up_right_x, float $up_right_y, string $filename, int $page, string $dest) - Add file link annotation for current page [deprecated].' flags='130'/>
<tag menu='P' submenu='PDF-->>P - PDF_close' inserttext='PDF_add_thumbnail(|)' hint='(PHP 4>=4.0.5, PECL pdflib>=1.0.0) bool PDF_add_thumbnail(resource $pdfdoc, int $image) - Add thumbnail for current page.' flags='130'/>
<tag menu='P' submenu='PDF-->>P - PDF_close' inserttext='PDF_add_weblink(|)' hint='(PHP 4, PECL pdflib>=1.0.0) bool PDF_add_weblink(resource $pdfdoc, float $lowerleftx, float $lowerlefty, float $upperrightx, float $upperrighty, string $url) - Add weblink for current page [deprecated].' flags='130'/>
<tag menu='P' submenu='PDF-->>P - PDF_close' inserttext='PDF_arc(|)' hint='(PHP 4, PECL pdflib>=1.0.0) bool PDF_arc(resource $p, float $x, float $y, float $r, float $alpha, float $beta) - Draw a counterclockwise circular arc segment.' flags='130'/>
<tag menu='P' submenu='PDF-->>P - PDF_close' inserttext='PDF_arcn(|)' hint='(PHP 4>=4.0.5, PECL pdflib>=1.0.0) bool PDF_arcn(resource $p, float $x, float $y, float $r, float $alpha, float $beta) - Draw a clockwise circular arc segment.' flags='130'/>
<tag menu='P' submenu='PDF-->>P - PDF_close' inserttext='PDF_attach_file(|)' hint='(PHP 4>=4.0.5, PECL pdflib>=1.0.0) bool PDF_attach_file(resource $pdfdoc, float $llx, float $lly, float $urx, float $ury, string $filename, string $description, string $author, string $mimetype, string $icon) - Add file attachment for current page [deprecated].' flags='130'/>
<tag menu='P' submenu='PDF-->>P - PDF_close' inserttext='PDF_begin_page(|)' hint='(PHP 4, PECL pdflib>=1.0.0) bool PDF_begin_page(resource $pdfdoc, float $width, float $height) - Start new page [deprecated].' flags='130'/>
<tag menu='P' submenu='PDF-->>P - PDF_close' inserttext='PDF_begin_pattern(|)' hint='(PHP 4>=4.0.5, PECL pdflib>=1.0.0) int PDF_begin_pattern(resource $pdfdoc, float $width, float $height, float $xstep, float $ystep, int $painttype) - Start pattern definition.' flags='130'/>
<tag menu='P' submenu='PDF-->>P - PDF_close' inserttext='PDF_begin_template(|)' hint='(PHP 4>=4.0.5, PECL pdflib>=1.0.0) int PDF_begin_template(resource $pdfdoc, float $width, float $height) - Start template definition [deprecated].' flags='130'/>
<tag menu='P' submenu='PDF-->>P - PDF_close' inserttext='PDF_circle(|)' hint='(PHP 4, PECL pdflib>=1.0.0) bool PDF_circle(resource $pdfdoc, float $x, float $y, float $r) - Draw a circle.' flags='130'/>
<tag menu='P' submenu='PDF-->>P - PDF_close' inserttext='PDF_clip(|)' hint='(PHP 4, PECL pdflib>=1.0.0) bool PDF_clip(resource $p) - Clip to current path.' flags='130'/>
<tag menu='P' submenu='PDF-->>P - PDF_close' inserttext='PDF_close(|)' hint='(PHP 4, PECL pdflib>=1.0.0) bool PDF_close(resource $p) - Close pdf resource [deprecated].' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_close_ - PDF_get_b' inserttext='PDF_close_image(|)' hint='(PHP 4, PECL pdflib>=1.0.0) bool PDF_close_image(resource $p, int $image) - Close image.' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_close_ - PDF_get_b' inserttext='PDF_close_pdi(|)' hint='(PHP 4>=4.0.5, PECL pdflib>=1.0.0) bool PDF_close_pdi(resource $p, int $doc) - Close the input PDF document [deprecated].' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_close_ - PDF_get_b' inserttext='PDF_close_pdi_page(|)' hint='(PHP 4>=4.0.5, PECL pdflib>=1.0.0) bool PDF_close_pdi_page(resource $p, int $page) - Close the page handle.' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_close_ - PDF_get_b' inserttext='PDF_closepath(|)' hint='(PHP 4, PECL pdflib>=1.0.0) bool PDF_closepath(resource $p) - Close current path.' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_close_ - PDF_get_b' inserttext='PDF_closepath_fill_stroke(|)' hint='(PHP 4, PECL pdflib>=1.0.0) bool PDF_closepath_fill_stroke(resource $p) - Close, fill and stroke current path.' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_close_ - PDF_get_b' inserttext='PDF_closepath_stroke(|)' hint='(PHP 4, PECL pdflib>=1.0.0) bool PDF_closepath_stroke(resource $p) - Close and stroke path.' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_close_ - PDF_get_b' inserttext='PDF_concat(|)' hint='(PHP 4>=4.0.5, PECL pdflib>=1.0.0) bool PDF_concat(resource $p, float $a, float $b, float $c, float $d, float $e, float $f) - Concatenate a matrix to the CTM.' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_close_ - PDF_get_b' inserttext='PDF_continue_text(|)' hint='(PHP 4, PECL pdflib>=1.0.0) bool PDF_continue_text(resource $p, string $text) - Output text in next line.' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_close_ - PDF_get_b' inserttext='PDF_curveto(|)' hint='(PHP 4, PECL pdflib>=1.0.0) bool PDF_curveto(resource $p, float $x1, float $y1, float $x2, float $y2, float $x3, float $y3) - Draw Bezier curve.' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_close_ - PDF_get_b' inserttext='PDF_delete(|)' hint='(PHP 4>=4.0.5, PECL pdflib>=1.0.0) bool PDF_delete(resource $pdfdoc) - Delete PDFlib object.' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_close_ - PDF_get_b' inserttext='PDF_end_page(|)' hint='(PHP 4, PECL pdflib>=1.0.0) bool PDF_end_page(resource $p) - Finish page.' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_close_ - PDF_get_b' inserttext='PDF_end_pattern(|)' hint='(PHP 4>=4.0.5, PECL pdflib>=1.0.0) bool PDF_end_pattern(resource $p) - Finish pattern.' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_close_ - PDF_get_b' inserttext='PDF_end_template(|)' hint='(PHP 4>=4.0.5, PECL pdflib>=1.0.0) bool PDF_end_template(resource $p) - Finish template.' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_close_ - PDF_get_b' inserttext='PDF_endpath(|)' hint='(PHP 4, PECL pdflib>=1.0.0) bool PDF_endpath(resource $p) - End current path.' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_close_ - PDF_get_b' inserttext='PDF_fill(|)' hint='(PHP 4, PECL pdflib>=1.0.0) bool PDF_fill(resource $p) - Fill current path.' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_close_ - PDF_get_b' inserttext='PDF_fill_stroke(|)' hint='(PHP 4, PECL pdflib>=1.0.0) bool PDF_fill_stroke(resource $p) - Fill and stroke path.' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_close_ - PDF_get_b' inserttext='PDF_findfont(|)' hint='(PHP 4>=4.0.5, PECL pdflib>=1.0.0) int PDF_findfont(resource $p, string $fontname, string $encoding, int $embed) - Prepare font for later use [deprecated].' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_close_ - PDF_get_b' inserttext='PDF_get_buffer(|)' hint='(PHP 4>=4.0.5, PECL pdflib>=1.0.0) string PDF_get_buffer(resource $p) - Get PDF output buffer.' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_get_f - PDF_open_f' inserttext='PDF_get_font(|)' hint='(PHP 4, PECL pdflib>=1.0.0) Get font [deprecated].' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_get_f - PDF_open_f' inserttext='PDF_get_fontname(|)' hint='(PHP 4, PECL pdflib>=1.0.0) Get font name [deprecated].' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_get_f - PDF_open_f' inserttext='PDF_get_fontsize(|)' hint='(PHP 4, PECL pdflib>=1.0.0) Font handling [deprecated].' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_get_f - PDF_open_f' inserttext='PDF_get_image_height(|)' hint='(PHP 4, PECL pdflib>=1.0.0) Get image height [deprecated].' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_get_f - PDF_open_f' inserttext='PDF_get_image_width(|)' hint='(PHP 4, PECL pdflib>=1.0.0) Get image width [deprecated].' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_get_f - PDF_open_f' inserttext='PDF_get_majorversion()' hint='(PHP 4>=4.2.0, PECL pdflib>=1.0.0) int PDF_get_majorversion(void) - Get major version number [deprecated].' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_get_f - PDF_open_f' inserttext='PDF_get_minorversion()' hint='(PHP 4>=4.2.0, PECL pdflib>=1.0.0) int PDF_get_minorversion(void) - Get minor version number [deprecated].' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_get_f - PDF_open_f' inserttext='PDF_get_parameter(|)' hint='(PHP 4>=4.0.1, PECL pdflib>=1.0.0) string PDF_get_parameter(resource $p, string $key, float $modifier) - Get string parameter.' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_get_f - PDF_open_f' inserttext='PDF_get_pdi_parameter(|)' hint='(PHP 4>=4.0.5, PECL pdflib>=1.0.0) string PDF_get_pdi_parameter(resource $p, string $key, int $doc, int $page, int $reserved) - Get PDI string parameter [deprecated].' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_get_f - PDF_open_f' inserttext='PDF_get_pdi_value(|)' hint='(PHP 4>=4.0.5, PECL pdflib>=1.0.0) float PDF_get_pdi_value(resource $p, string $key, int $doc, int $page, int $reserved) - Get PDI numerical parameter [deprecated].' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_get_f - PDF_open_f' inserttext='PDF_get_value(|)' hint='(PHP 4>=4.0.1, PECL pdflib>=1.0.0) float PDF_get_value(resource $p, string $key, float $modifier) - Get numerical parameter.' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_get_f - PDF_open_f' inserttext='PDF_initgraphics(|)' hint='(PHP 4>=4.0.5, PECL pdflib>=1.0.0) bool PDF_initgraphics(resource $p) - Reset graphic state.' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_get_f - PDF_open_f' inserttext='PDF_lineto(|)' hint='(PHP 4, PECL pdflib>=1.0.0) bool PDF_lineto(resource $p, float $x, float $y) - Draw a line.' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_get_f - PDF_open_f' inserttext='PDF_makespotcolor(|)' hint='(PHP 4>=4.0.5, PECL pdflib>=1.0.0) int PDF_makespotcolor(resource $p, string $spotname) - Make spot color.' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_get_f - PDF_open_f' inserttext='PDF_moveto(|)' hint='(PHP 4, PECL pdflib>=1.0.0) bool PDF_moveto(resource $p, float $x, float $y) - Set current point.' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_get_f - PDF_open_f' inserttext='PDF_new()' hint='(PHP 4>=4.0.5, PECL pdflib>=1.0.0) resource PDF_new(void) - Create PDFlib object.' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_get_f - PDF_open_f' inserttext='PDF_open_ccitt(|)' hint='(PHP 4>=4.0.5, PECL pdflib>=1.0.0) int PDF_open_ccitt(resource $pdfdoc, string $filename, int $width, int $height, int $BitReverse, int $k, int $Blackls1) - Open raw CCITT image [deprecated].' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_get_f - PDF_open_f' inserttext='PDF_open_file(|)' hint='(PHP 4>=4.0.5, PECL pdflib>=1.0.0) bool PDF_open_file(resource $p, string $filename) - Create PDF file [deprecated].' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_open_g - PDF_set_b' inserttext='PDF_open_gif(|)' hint='(PHP 4, PECL pdflib>=1.0.0) Open GIF image [deprecated].' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_open_g - PDF_set_b' inserttext='PDF_open_image(|)' hint='(PHP 4>=4.0.5, PECL pdflib>=1.0.0) int PDF_open_image(resource $p, string $imagetype, string $source, string $data, int $length, int $width, int $height, int $components, int $bpc, string $params) - Use image data [deprecated].' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_open_g - PDF_set_b' inserttext='PDF_open_image_file(|)' hint='(PHP 4, PECL pdflib>=1.0.0) int PDF_open_image_file(resource $p, string $imagetype, string $filename, string $stringparam, int $intparam) - Read image from file [deprecated].' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_open_g - PDF_set_b' inserttext='PDF_open_jpeg(|)' hint='(PHP 4, PECL pdflib>=1.0.0) Open JPEG image [deprecated].' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_open_g - PDF_set_b' inserttext='PDF_open_memory_image(|)' hint="(PHP 4, PECL pdflib>=1.0.0) int PDF_open_memory_image(resource $p, resource $image) - Open image created with PHP's image functions [not supported]." flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_open_g - PDF_set_b' inserttext='PDF_open_pdi(|)' hint='(PHP 4>=4.0.5, PECL pdflib>=1.0.0) int PDF_open_pdi(resource $pdfdoc, string $filename, string $optlist, int $len) - Open PDF file [deprecated].' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_open_g - PDF_set_b' inserttext='PDF_open_pdi_page(|)' hint='(PHP 4>=4.0.5, PECL pdflib>=1.0.0) int PDF_open_pdi_page(resource $p, int $doc, int $pagenumber, string $optlist) - Prepare a page.' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_open_g - PDF_set_b' inserttext='PDF_open_tiff(|)' hint='(PHP 4, PECL pdflib>=1.0.0) Open TIFF image [deprecated].' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_open_g - PDF_set_b' inserttext='PDF_place_image(|)' hint='(PHP 4, PECL pdflib>=1.0.0) bool PDF_place_image(resource $pdfdoc, int $image, float $x, float $y, float $scale) - Place image on the page [deprecated].' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_open_g - PDF_set_b' inserttext='PDF_place_pdi_page(|)' hint='(PHP 4>=4.0.6, PECL pdflib>=1.0.0) bool PDF_place_pdi_page(resource $pdfdoc, int $page, float $x, float $y, float $sx, float $sy) - Place PDF page [deprecated].' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_open_g - PDF_set_b' inserttext='PDF_rect(|)' hint='(PHP 4, PECL pdflib>=1.0.0) bool PDF_rect(resource $p, float $x, float $y, float $width, float $height) - Draw rectangle.' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_open_g - PDF_set_b' inserttext='PDF_restore(|)' hint='(PHP 4, PECL pdflib>=1.0.0) bool PDF_restore(resource $p) - Restore graphics state.' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_open_g - PDF_set_b' inserttext='PDF_rotate(|)' hint='(PHP 4, PECL pdflib>=1.0.0) bool PDF_rotate(resource $p, float $phi) - Rotate coordinate system.' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_open_g - PDF_set_b' inserttext='PDF_save(|)' hint='(PHP 4, PECL pdflib>=1.0.0) bool PDF_save(resource $p) - Save graphics state.' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_open_g - PDF_set_b' inserttext='PDF_scale(|)' hint='(PHP 4, PECL pdflib>=1.0.0) bool PDF_scale(resource $p, float $sx, float $sy) - Scale coordinate system.' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_open_g - PDF_set_b' inserttext='PDF_set_border_color(|)' hint='(PHP 4, PECL pdflib>=1.0.0) bool PDF_set_border_color(resource $p, float $red, float $green, float $blue) - Set border color of annotations [deprecated].' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_open_g - PDF_set_b' inserttext='PDF_set_border_dash(|)' hint='(PHP 4>=4.0.1, PECL pdflib>=1.0.0) bool PDF_set_border_dash(resource $pdfdoc, float $black, float $white) - Set border dash style of annotations [deprecated].' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_open_g - PDF_set_b' inserttext='PDF_set_border_style(|)' hint='(PHP 4, PECL pdflib>=1.0.0) bool PDF_set_border_style(resource $pdfdoc, string $style, float $width) - Set border style of annotations [deprecated].' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_set_c - PDF_setc' inserttext='PDF_set_char_spacing(|)' hint='(PHP 4, PECL pdflib>=1.0.0) Set character spacing [deprecated].' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_set_c - PDF_setc' inserttext='PDF_set_duration(|)' hint='(PHP 4, PECL pdflib>=1.0.0) Set duration between pages [deprecated].' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_set_c - PDF_setc' inserttext='PDF_set_horiz_scaling(|)' hint='(PHP 4, PECL pdflib>=1.0.0) Set horizontal text scaling [deprecated].' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_set_c - PDF_setc' inserttext='PDF_set_info(|)' hint='(PHP 4>=4.0.1, PECL pdflib>=1.0.0) bool PDF_set_info(resource $p, string $key, string $value) - Fill document info field.' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_set_c - PDF_setc' inserttext='PDF_set_info_author(|)' hint='(PHP 4, PECL pdflib>=1.0.0) Fill the author document info field [deprecated].' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_set_c - PDF_setc' inserttext='PDF_set_info_creator(|)' hint='(PHP 4, PECL pdflib>=1.0.0) Fill the creator document info field [deprecated].' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_set_c - PDF_setc' inserttext='PDF_set_info_keywords(|)' hint='(PHP 4, PECL pdflib>=1.0.0) Fill the keywords document info field [deprecated].' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_set_c - PDF_setc' inserttext='PDF_set_info_subject(|)' hint='(PHP 4, PECL pdflib>=1.0.0) Fill the subject document info field [deprecated].' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_set_c - PDF_setc' inserttext='PDF_set_info_title(|)' hint='(PHP 4, PECL pdflib>=1.0.0) Fill the title document info field [deprecated].' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_set_c - PDF_setc' inserttext='PDF_set_leading(|)' hint='(PHP 4, PECL pdflib>=1.0.0) Set distance between text lines [deprecated].' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_set_c - PDF_setc' inserttext='PDF_set_parameter(|)' hint='(PHP 4, PECL pdflib>=1.0.0) bool PDF_set_parameter(resource $p, string $key, string $value) - Set string parameter.' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_set_c - PDF_setc' inserttext='PDF_set_text_matrix(|)' hint='(PHP 4&lt;=4.0.4) Set text matrix [deprecated].' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_set_c - PDF_setc' inserttext='PDF_set_text_pos(|)' hint='(PHP 4, PECL pdflib>=1.0.0) bool PDF_set_text_pos(resource $p, float $x, float $y) - Set text position.' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_set_c - PDF_setc' inserttext='PDF_set_text_rendering(|)' hint='(PHP 4, PECL pdflib>=1.0.0) Determine text rendering [deprecated].' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_set_c - PDF_setc' inserttext='PDF_set_text_rise(|)' hint='(PHP 4, PECL pdflib>=1.0.0) Set text rise [deprecated].' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_set_c - PDF_setc' inserttext='PDF_set_value(|)' hint='(PHP 4>=4.0.1, PECL pdflib>=1.0.0) bool PDF_set_value(resource $p, string $key, float $value) - Set numerical parameter.' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_set_c - PDF_setc' inserttext='PDF_set_word_spacing(|)' hint='(PHP 4, PECL pdflib>=1.0.0) Set spacing between words [deprecated].' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_set_c - PDF_setc' inserttext='PDF_setcolor(|)' hint='(PHP 4>=4.0.5, PECL pdflib>=1.0.0) bool PDF_setcolor(resource $p, string $fstype, string $colorspace, float $c1, float $c2, float $c3, float $c4) - Set fill and stroke color.' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_setd - P' inserttext='PDF_setdash(|)' hint='(PHP 4, PECL pdflib>=1.0.0) bool PDF_setdash(resource $pdfdoc, float $b, float $w) - Set simple dash pattern.' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_setd - P' inserttext='PDF_setflat(|)' hint='(PHP 4, PECL pdflib>=1.0.0) bool PDF_setflat(resource $pdfdoc, float $flatness) - Set flatness.' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_setd - P' inserttext='PDF_setfont(|)' hint='(PHP 4>=4.0.5, PECL pdflib>=1.0.0) bool PDF_setfont(resource $pdfdoc, int $font, float $fontsize) - Set font.' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_setd - P' inserttext='PDF_setgray(|)' hint='(PHP 4, PECL pdflib>=1.0.0) bool PDF_setgray(resource $p, float $g) - Set color to gray [deprecated].' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_setd - P' inserttext='PDF_setgray_fill(|)' hint='(PHP 4, PECL pdflib>=1.0.0) bool PDF_setgray_fill(resource $p, float $g) - Set fill color to gray [deprecated].' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_setd - P' inserttext='PDF_setgray_stroke(|)' hint='(PHP 4, PECL pdflib>=1.0.0) bool PDF_setgray_stroke(resource $p, float $g) - Set stroke color to gray [deprecated].' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_setd - P' inserttext='PDF_setlinecap(|)' hint='(PHP 4, PECL pdflib>=1.0.0) bool PDF_setlinecap(resource $p, int $linecap) - Set linecap parameter.' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_setd - P' inserttext='PDF_setlinejoin(|)' hint='(PHP 4, PECL pdflib>=1.0.0) bool PDF_setlinejoin(resource $p, int $value) - Set linejoin parameter.' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_setd - P' inserttext='PDF_setlinewidth(|)' hint='(PHP 4, PECL pdflib>=1.0.0) bool PDF_setlinewidth(resource $p, float $width) - Set line width.' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_setd - P' inserttext='PDF_setmatrix(|)' hint='(PHP 4>=4.0.5, PECL pdflib>=1.0.0) bool PDF_setmatrix(resource $p, float $a, float $b, float $c, float $d, float $e, float $f) - Set current transformation matrix.' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_setd - P' inserttext='PDF_setmiterlimit(|)' hint='(PHP 4, PECL pdflib>=1.0.0) bool PDF_setmiterlimit(resource $pdfdoc, float $miter) - Set miter limit.' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_setd - P' inserttext='PDF_setpolydash(|)' hint='(PHP 4>=4.0.5, PECL pdflib>=1.0.0) Set complicated dash pattern [deprecated].' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_setd - P' inserttext='PDF_setrgbcolor(|)' hint='(PHP 4, PECL pdflib>=1.0.0) bool PDF_setrgbcolor(resource $p, float $red, float $green, float $blue) - Set fill and stroke rgb color values [deprecated].' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_setd - P' inserttext='PDF_setrgbcolor_fill(|)' hint='(PHP 4, PECL pdflib>=1.0.0) bool PDF_setrgbcolor_fill(resource $p, float $red, float $green, float $blue) - Set fill rgb color values [deprecated].' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_setd - P' inserttext='PDF_setrgbcolor_stroke(|)' hint='(PHP 4, PECL pdflib>=1.0.0) bool PDF_setrgbcolor_stroke(resource $p, float $red, float $green, float $blue) - Set stroke rgb color values [deprecated].' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_setd - P' inserttext='PDF_show(|)' hint='(PHP 4, PECL pdflib>=1.0.0) bool PDF_show(resource $pdfdoc, string $text) - Output text at current position.' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_setd - P' inserttext='PDF_show_boxed(|)' hint='(PHP 4, PECL pdflib>=1.0.0) int PDF_show_boxed(resource $p, string $text, float $left, float $top, float $width, float $height, string $mode, string $feature) - Output text in a box [deprecated].' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_setd - P' inserttext='PDF_show_xy(|)' hint='(PHP 4, PECL pdflib>=1.0.0) bool PDF_show_xy(resource $p, string $text, float $x, float $y) - Output text at given position.' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_setd - P' inserttext='PDF_skew(|)' hint='(PHP 4, PECL pdflib>=1.0.0) bool PDF_skew(resource $p, float $alpha, float $beta) - Skew the coordinate system.' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_setd - P' inserttext='PDF_stringwidth(|)' hint='(PHP 4, PECL pdflib>=1.0.0) float PDF_stringwidth(resource $p, string $text, int $font, float $fontsize) - Return width of text.' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_setd - P' inserttext='PDF_stroke(|)' hint='(PHP 4, PECL pdflib>=1.0.0) bool PDF_stroke(resource $p) - Stroke path.' flags='130'/>
<tag menu='P' submenu='PDF-->>PDF_setd - P' inserttext='PDF_translate(|)' hint='(PHP 4, PECL pdflib>=1.0.0) bool PDF_translate(resource $p, float $tx, float $ty) - Set origin of coordinate system.' flags='130'/>
<tag menu='P' submenu='PDO class' inserttext='PDO::__construct(|)' hint='(PHP 5>=5.1.0, PECL pdo>=0.1.0) Creates a PDO instance representing a connection to a database.' flags='130'/>
<tag menu='P' submenu='PDO class' inserttext='PDO::beginTransaction()' hint='(PHP 5>=5.1.0, PECL pdo>=0.1.0) bool PDO::beginTransaction(void) - Initiates a transaction.' flags='130'/>
<tag menu='P' submenu='PDO class' inserttext='PDO::commit()' hint='(PHP 5>=5.1.0, PECL pdo>=0.1.0) bool PDO::commit(void) - Commits a transaction.' flags='130'/>
<tag menu='P' submenu='PDO class' inserttext='PDO::errorCode()' hint='(PHP 5>=5.1.0, PECL pdo>=0.1.0) mixed PDO::errorCode(void) - Fetch the SQLSTATE associated with the last operation on the database handle.' flags='130'/>
<tag menu='P' submenu='PDO class' inserttext='PDO::errorInfo()' hint='(PHP 5>=5.1.0, PECL pdo>=0.1.0) array PDO::errorInfo(void) - Fetch extended error information associated with the last operation on the database handle.' flags='130'/>
<tag menu='P' submenu='PDO class' inserttext='PDO::exec(|)' hint='(PHP 5>=5.1.0, PECL pdo>=0.1.0) int PDO::exec(string $statement) - Execute an SQL statement and return the number of affected rows.' flags='130'/>
<tag menu='P' submenu='PDO class' inserttext='PDO::getAttribute(|)' hint='(PHP 5>=5.1.0, PECL pdo>=0.2.0) mixed PDO::getAttribute(int $attribute) - Retrieve a database connection attribute.' flags='130'/>
<tag menu='P' submenu='PDO class' inserttext='PDO::getAvailableDrivers()' hint='(PHP 5>=5.1.3, PECL pdo>=1.0.3) array PDO::getAvailableDrivers(void) - Return an array of available PDO drivers.' flags='130'/>
<tag menu='P' submenu='PDO class' inserttext='PDO::inTransaction()' hint='(PHP 5>=5.3.3, Bundled pdo_pgsql) array PDO::inTransaction(void) - Checks if inside a transaction.' flags='130'/>
<tag menu='P' submenu='PDO class' inserttext='PDO::lastInsertId(|)' hint='(PHP 5>=5.1.0, PECL pdo>=0.1.0) string PDO::lastInsertId([string $name=NULL]) - Returns the ID of the last inserted row or sequence value.' flags='130'/>
<tag menu='P' submenu='PDO class' inserttext='PDO::prepare(|)' hint='(PHP 5>=5.1.0, PECL pdo>=0.1.0) PDOStatement PDO::prepare(string $statement [, array $driver_options=array()]) - Prepares a statement for execution and returns a statement object.' flags='130'/>
<tag menu='P' submenu='PDO class' inserttext='PDO::query(|)' hint='(PHP 5>=5.1.0, PECL pdo>=0.2.0) PDOStatement PDO::query(string $statement) - Executes an SQL statement, returning a result set as a PDOStatement object.' flags='130'/>
<tag menu='P' submenu='PDO class' inserttext='PDO::quote(|)' hint='(PHP 5>=5.1.0, PECL pdo>=0.2.1) string PDO::quote(string $string [, int $parameter_type=PDO::PARAM_STR]) - Quotes a string for use in a query.' flags='130'/>
<tag menu='P' submenu='PDO class' inserttext='PDO::rollBack()' hint='(PHP 5>=5.1.0, PECL pdo>=0.1.0) bool PDO::rollBack(void) - Rolls back a transaction.' flags='130'/>
<tag menu='P' submenu='PDO class' inserttext='PDO::setAttribute(|)' hint='(PHP 5>=5.1.0, PECL pdo>=0.1.0) bool PDO::setAttribute(int $attribute, mixed $value) - Set an attribute.' flags='130'/>
<tag menu='P' submenu='PDOStatement class' inserttext='PDOStatement->bindColumn(|)' hint='(PHP 5>=5.1.0, PECL pdo>=0.1.0) bool PDOStatement::bindColumn(mixed $column, mixed &amp;$param [, int $type [, int $maxlen [, mixed $driverdata ]]]) - Bind a column to a PHP variable.' flags='130'/>
<tag menu='P' submenu='PDOStatement class' inserttext='PDOStatement->bindParam(|)' hint='(PHP 5>=5.1.0, PECL pdo>=0.1.0) bool PDOStatement::bindParam(mixed $parameter, mixed &amp;$variable [, int $data_type=PDO::PARAM_STR [, int $length [, mixed $driver_options ]]]) - Binds a parameter to the specified variable name.' flags='130'/>
<tag menu='P' submenu='PDOStatement class' inserttext='PDOStatement->bindValue(|)' hint='(PHP 5>=5.1.0, PECL pdo>=1.0.0) bool PDOStatement::bindValue(mixed $parameter, mixed $value [, int $data_type=PDO::PARAM_STR]) - Binds a value to a parameter.' flags='130'/>
<tag menu='P' submenu='PDOStatement class' inserttext='PDOStatement->closeCursor(|)' hint='(PHP 5>=5.1.0, PECL pdo>=0.9.0) bool PDOStatement::closeCursor(void) - Closes the cursor, enabling the statement to be executed again.' flags='130'/>
<tag menu='P' submenu='PDOStatement class' inserttext='PDOStatement->columnCount(|)' hint='(PHP 5>=5.1.0, PECL pdo>=0.2.0) int PDOStatement::columnCount(void) - Returns the number of columns in the result set.' flags='130'/>
<tag menu='P' submenu='PDOStatement class' inserttext='PDOStatement->debugDumpParams(|)' hint='(PHP 5>=5.1.0, PECL pdo>=0.9.0) bool PDOStatement::debugDumpParams(void) - Dump an SQL prepared command.' flags='130'/>
<tag menu='P' submenu='PDOStatement class' inserttext='PDOStatement->errorCode(|)' hint='(PHP 5>=5.1.0, PECL pdo>=0.1.0) string PDOStatement::errorCode(void) - Fetch the SQLSTATE associated with the last operation on the statement handle.' flags='130'/>
<tag menu='P' submenu='PDOStatement class' inserttext='PDOStatement->errorInfo(|)' hint='(PHP 5>=5.1.0, PECL pdo>=0.1.0) array PDOStatement::errorInfo(void) - Fetch extended error information associated with the last operation on the statement handle.' flags='130'/>
<tag menu='P' submenu='PDOStatement class' inserttext='PDOStatement->execute(|)' hint='(PHP 5>=5.1.0, PECL pdo>=0.1.0) bool PDOStatement::execute([array $input_parameters=array()]) - Executes a prepared statement.' flags='130'/>
<tag menu='P' submenu='PDOStatement class' inserttext='PDOStatement->fetch(|)' hint='(PHP 5>=5.1.0, PECL pdo>=0.1.0) mixed PDOStatement::fetch([int $fetch_style=PDO::FETCH_BOTH [, int $cursor_orientation=PDO::FETCH_ORI_NEXT [, int $cursor_offset=0 ]]]) - Fetches the next row from a result set.' flags='130'/>
<tag menu='P' submenu='PDOStatement class' inserttext='PDOStatement->fetchAll(|)' hint='(PHP 5>=5.1.0, PECL pdo>=0.1.0) array PDOStatement::fetchAll([int $fetch_style=PDO::FETCH_BOTH [, int $fetch_argument=0 [, array $ctor_args=array() ]]]) - Returns an array containing all of the result set rows.' flags='130'/>
<tag menu='P' submenu='PDOStatement class' inserttext='PDOStatement->fetchColumn(|)' hint='(PHP 5>=5.1.0, PECL pdo>=0.9.0) string PDOStatement::fetchColumn([int $column_number=0]) - Returns a single column from the next row of a result set.' flags='130'/>
<tag menu='P' submenu='PDOStatement class' inserttext='PDOStatement->fetchObject(|)' hint='(PHP 5>=5.1.0, PECL pdo>=0.2.4) mixed PDOStatement::fetchObject([string $class_name="stdClass" [, array $ctor_args ]]) - Fetches the next row and returns it as an object.' flags='130'/>
<tag menu='P' submenu='PDOStatement class' inserttext='PDOStatement->getAttribute(|)' hint='(PHP 5>=5.1.0, PECL pdo>=0.2.0) mixed PDOStatement::getAttribute(int $attribute) - Retrieve a statement attribute.' flags='130'/>
<tag menu='P' submenu='PDOStatement class' inserttext='PDOStatement->getColumnMeta(|)' hint='(PHP 5>=5.1.0, PECL pdo>=0.2.0) array PDOStatement::getColumnMeta(int $column) - Returns metadata for a column in a result set.' flags='130'/>
<tag menu='P' submenu='PDOStatement class' inserttext='PDOStatement->nextRowset(|)' hint='(PHP 5>=5.1.0, PECL pdo>=0.2.0) bool PDOStatement::nextRowset(void) - Advances to the next rowset in a multi-rowset statement handle.' flags='130'/>
<tag menu='P' submenu='PDOStatement class' inserttext='PDOStatement->rowCount(|)' hint='(PHP 5>=5.1.0, PECL pdo>=0.1.0) int PDOStatement::rowCount(void) - Returns the number of rows affected by the last SQL statement.' flags='130'/>
<tag menu='P' submenu='PDOStatement class' inserttext='PDOStatement->setAttribute(|)' hint='(PHP 5>=5.1.0, PECL pdo>=0.2.0) bool PDOStatement::setAttribute(int $attribute, mixed $value) - Set a statement attribute.' flags='130'/>
<tag menu='P' submenu='PDOStatement class' inserttext='PDOStatement->setFetchMode(|)' hint='(PHP 5>=5.1.0, PECL pdo>=0.2.0) bool PDOStatement::setFetchMode(int $mode) - Set the default fetch mode for this statement.' flags='130'/>
<tag menu='P' submenu='PHP Options/Info-->>a - get_m' inserttext='assert(|)' hint='(PHP 4, PHP 5) bool assert(mixed $assertion) - Checks if assertion is FALSE.' flags='130'/>
<tag menu='P' submenu='PHP Options/Info-->>a - get_m' inserttext='assert_options(|)' hint='(PHP 4, PHP 5) mixed assert_options(int $what [, mixed $value]) - Set/get the various assert flags.' flags='130'/>
<tag menu='P' submenu='PHP Options/Info-->>a - get_m' inserttext='dl(|)' hint='(PHP 4, PHP 5) bool dl(string $library) - Loads a PHP extension at runtime.' flags='130'/>
<tag menu='P' submenu='PHP Options/Info-->>a - get_m' inserttext='extension_loaded(|)' hint='(PHP 4, PHP 5) bool extension_loaded(string $name) - Find out whether an extension is loaded.' flags='130'/>
<tag menu='P' submenu='PHP Options/Info-->>a - get_m' inserttext='gc_collect_cycles()' hint='(PHP 5>=5.3.0) int gc_collect_cycles(void) - Forces collection of any existing garbage cycles.' flags='130'/>
<tag menu='P' submenu='PHP Options/Info-->>a - get_m' inserttext='gc_disable()' hint='(PHP 5>=5.3.0) void gc_disable(void) - Deactivates the circular reference collector.' flags='130'/>
<tag menu='P' submenu='PHP Options/Info-->>a - get_m' inserttext='gc_enable()' hint='(PHP 5>=5.3.0) void gc_enable(void) - Activates the circular reference collector.' flags='130'/>
<tag menu='P' submenu='PHP Options/Info-->>a - get_m' inserttext='gc_enabled()' hint='(PHP 5>=5.3.0) bool gc_enabled(void) - Returns status of the circular reference collector.' flags='130'/>
<tag menu='P' submenu='PHP Options/Info-->>a - get_m' inserttext='get_cfg_var(|)' hint='(PHP 4, PHP 5) string get_cfg_var(string $option) - Gets the value of a PHP configuration option.' flags='130'/>
<tag menu='P' submenu='PHP Options/Info-->>a - get_m' inserttext='get_current_user()' hint='(PHP 4, PHP 5) string get_current_user(void) - Gets the name of the owner of the current PHP script.' flags='130'/>
<tag menu='P' submenu='PHP Options/Info-->>a - get_m' inserttext='get_defined_constants(|)' hint='(PHP 4>=4.1.0, PHP 5) array get_defined_constants([bool $categorize=false]) - Returns an associative array with the names of all the constants and their values.' flags='130'/>
<tag menu='P' submenu='PHP Options/Info-->>a - get_m' inserttext='get_extension_funcs(|)' hint='(PHP 4, PHP 5) array get_extension_funcs(string $module_name) - Returns an array with the names of the functions of a module.' flags='130'/>
<tag menu='P' submenu='PHP Options/Info-->>a - get_m' inserttext='get_include_path()' hint='(PHP 4>=4.3.0, PHP 5) string get_include_path(void) - Gets the current include_path configuration option.' flags='130'/>
<tag menu='P' submenu='PHP Options/Info-->>a - get_m' inserttext='get_included_files()' hint='(PHP 4, PHP 5) array get_included_files(void) - Returns an array with the names of included or required files.' flags='130'/>
<tag menu='P' submenu='PHP Options/Info-->>a - get_m' inserttext='get_loaded_extensions(|)' hint='(PHP 4, PHP 5) array get_loaded_extensions([bool $zend_extensions=false]) - Returns an array with the names of all modules compiled and loaded.' flags='130'/>
<tag menu='P' submenu='PHP Options/Info-->>a - get_m' inserttext='get_magic_quotes_gpc()' hint='(PHP 4, PHP 5) int get_magic_quotes_gpc(void) - Gets the current configuration setting of magic_quotes_gpc.' flags='130'/>
<tag menu='P' submenu='PHP Options/Info-->>a - get_m' inserttext='get_magic_quotes_runtime()' hint='(PHP 4, PHP 5) int get_magic_quotes_runtime(void) - Gets the current active configuration setting of magic_quotes_runtime.' flags='130'/>
<tag menu='P' submenu='PHP Options/Info-->>get_r - m' inserttext='get_required_files(|)' hint='(PHP 4, PHP 5) Alias of get_included_files().' flags='130'/>
<tag menu='P' submenu='PHP Options/Info-->>get_r - m' inserttext='getenv(|)' hint='(PHP 4, PHP 5) string getenv(string $varname) - Gets the value of an environment variable.' flags='130'/>
<tag menu='P' submenu='PHP Options/Info-->>get_r - m' inserttext='getlastmod()' hint='(PHP 4, PHP 5) int getlastmod(void) - Gets time of last page modification.' flags='130'/>
<tag menu='P' submenu='PHP Options/Info-->>get_r - m' inserttext='getmygid()' hint="(PHP 4>=4.1.0, PHP 5) int getmygid(void) - Get PHP script owner's GID." flags='130'/>
<tag menu='P' submenu='PHP Options/Info-->>get_r - m' inserttext='getmyinode()' hint='(PHP 4, PHP 5) int getmyinode(void) - Gets the inode of the current script.' flags='130'/>
<tag menu='P' submenu='PHP Options/Info-->>get_r - m' inserttext='getmypid()' hint="(PHP 4, PHP 5) int getmypid(void) - Gets PHP's process ID." flags='130'/>
<tag menu='P' submenu='PHP Options/Info-->>get_r - m' inserttext='getmyuid()' hint="(PHP 4, PHP 5) int getmyuid(void) - Gets PHP script owner's UID." flags='130'/>
<tag menu='P' submenu='PHP Options/Info-->>get_r - m' inserttext='getopt(|)' hint='(PHP 4>=4.3.0, PHP 5) array getopt(string $options [, array $longopts]) - Gets options from the command line argument list.' flags='130'/>
<tag menu='P' submenu='PHP Options/Info-->>get_r - m' inserttext='getrusage(|)' hint='(PHP 4, PHP 5) array getrusage([int $who=0]) - Gets the current resource usages.' flags='130'/>
<tag menu='P' submenu='PHP Options/Info-->>get_r - m' inserttext='ini_alter(|)' hint='(PHP 4, PHP 5) Alias of ini_set().' flags='130'/>
<tag menu='P' submenu='PHP Options/Info-->>get_r - m' inserttext='ini_get(|)' hint='(PHP 4, PHP 5) string ini_get(string $varname) - Gets the value of a configuration option.' flags='130'/>
<tag menu='P' submenu='PHP Options/Info-->>get_r - m' inserttext='ini_get_all(|)' hint='(PHP 4>=4.2.0, PHP 5) array ini_get_all([string $extension [, bool $details=true ]]) - Gets all configuration options.' flags='130'/>
<tag menu='P' submenu='PHP Options/Info-->>get_r - m' inserttext='ini_restore(|)' hint='(PHP 4, PHP 5) void ini_restore(string $varname) - Restores the value of a configuration option.' flags='130'/>
<tag menu='P' submenu='PHP Options/Info-->>get_r - m' inserttext='ini_set(|)' hint='(PHP 4, PHP 5) string ini_set(string $varname, string $newvalue) - Sets the value of a configuration option.' flags='130'/>
<tag menu='P' submenu='PHP Options/Info-->>get_r - m' inserttext='magic_quotes_runtime(|)' hint='(PHP 4, PHP 5) Alias of set_magic_quotes_runtime().' flags='130'/>
<tag menu='P' submenu='PHP Options/Info-->>get_r - m' inserttext='memory_get_peak_usage(|)' hint='(PHP 5>=5.2.0) int memory_get_peak_usage([bool $real_usage=false]) - Returns the peak of memory allocated by PHP.' flags='130'/>
<tag menu='P' submenu='PHP Options/Info-->>get_r - m' inserttext='memory_get_usage(|)' hint='(PHP 4>=4.3.2, PHP 5) int memory_get_usage([bool $real_usage=false]) - Returns the amount of memory allocated to PHP.' flags='130'/>
<tag menu='P' submenu='PHP Options/Info-->>p - z' inserttext='php_ini_loaded_file()' hint='(PHP 5>=5.2.4) string php_ini_loaded_file(void) - Retrieve a path to the loaded php.ini file.' flags='130'/>
<tag menu='P' submenu='PHP Options/Info-->>p - z' inserttext='php_ini_scanned_files()' hint='(PHP 4>=4.3.0, PHP 5) string php_ini_scanned_files(void) - Return a list of .ini files parsed from the additional ini dir.' flags='130'/>
<tag menu='P' submenu='PHP Options/Info-->>p - z' inserttext='php_logo_guid()' hint='(PHP 4, PHP 5) string php_logo_guid(void) - Gets the logo guid.' flags='130'/>
<tag menu='P' submenu='PHP Options/Info-->>p - z' inserttext='php_sapi_name()' hint='(PHP 4>=4.0.1, PHP 5) string php_sapi_name(void) - Returns the type of interface between web server and PHP.' flags='130'/>
<tag menu='P' submenu='PHP Options/Info-->>p - z' inserttext='php_uname(|)' hint='(PHP 4>=4.0.2, PHP 5) string php_uname([string $mode="a"]) - Returns information about the operating system PHP is running on.' flags='130'/>
<tag menu='P' submenu='PHP Options/Info-->>p - z' inserttext='phpcredits(|)' hint='(PHP 4, PHP 5) bool phpcredits([int $flag=CREDITS_ALL]) - Prints out the credits for PHP.' flags='130'/>
<tag menu='P' submenu='PHP Options/Info-->>p - z' inserttext='phpinfo(|)' hint="(PHP 4, PHP 5) bool phpinfo([int $what=INFO_ALL]) - Outputs information about PHP's configuration." flags='130'/>
<tag menu='P' submenu='PHP Options/Info-->>p - z' inserttext='phpversion(|)' hint='(PHP 4, PHP 5) string phpversion([string $extension]) - Gets the current PHP version.' flags='130'/>
<tag menu='P' submenu='PHP Options/Info-->>p - z' inserttext='putenv(|)' hint='(PHP 4, PHP 5) bool putenv(string $setting) - Sets the value of an environment variable.' flags='130'/>
<tag menu='P' submenu='PHP Options/Info-->>p - z' inserttext='restore_include_path()' hint='(PHP 4>=4.3.0, PHP 5) void restore_include_path(void) - Restores the value of the include_path configuration option.' flags='130'/>
<tag menu='P' submenu='PHP Options/Info-->>p - z' inserttext='set_include_path(|)' hint='(PHP 4>=4.3.0, PHP 5) string set_include_path(string $new_include_path) - Sets the include_path configuration option.' flags='130'/>
<tag menu='P' submenu='PHP Options/Info-->>p - z' inserttext='set_magic_quotes_runtime(|)' hint='(PHP 4, PHP 5) bool set_magic_quotes_runtime(bool $new_setting) - Sets the current active configuration setting of magic_quotes_runtime.' flags='130'/>
<tag menu='P' submenu='PHP Options/Info-->>p - z' inserttext='set_time_limit(|)' hint='(PHP 4, PHP 5) void set_time_limit(int $seconds) - Limits the maximum execution time.' flags='130'/>
<tag menu='P' submenu='PHP Options/Info-->>p - z' inserttext='sys_get_temp_dir()' hint='(PHP 5>=5.2.1) string sys_get_temp_dir(void) - Returns directory path used for temporary files.' flags='130'/>
<tag menu='P' submenu='PHP Options/Info-->>p - z' inserttext='version_compare(|)' hint='(PHP 4>=4.1.0, PHP 5) mixed version_compare(string $version1, string $version2 [, string $operator]) - Compares two "PHP-standardized" version number strings.' flags='130'/>
<tag menu='P' submenu='PHP Options/Info-->>p - z' inserttext='zend_logo_guid()' hint='(PHP 4, PHP 5) string zend_logo_guid(void) - Gets the Zend guid.' flags='130'/>
<tag menu='P' submenu='PHP Options/Info-->>p - z' inserttext='zend_thread_id()' hint='(PHP 5) int zend_thread_id(void) - Returns a unique identifier for the current thread.' flags='130'/>
<tag menu='P' submenu='PHP Options/Info-->>p - z' inserttext='zend_version()' hint='(PHP 4, PHP 5) string zend_version(void) - Gets the version of the current Zend engine.' flags='130'/>
<tag menu='P' submenu='POSIX-->>p - posix_getp' inserttext='posix_access(|)' hint='(PHP 5>=5.1.0) bool posix_access(string $file [, int $mode=POSIX_F_OK]) - Determine accessibility of a file.' flags='130'/>
<tag menu='P' submenu='POSIX-->>p - posix_getp' inserttext='posix_ctermid()' hint='(PHP 4, PHP 5) string posix_ctermid(void) - Get path name of controlling terminal.' flags='130'/>
<tag menu='P' submenu='POSIX-->>p - posix_getp' inserttext='posix_errno(|)' hint='(PHP 4>=4.2.0, PHP 5) Alias of posix_get_last_error().' flags='130'/>
<tag menu='P' submenu='POSIX-->>p - posix_getp' inserttext='posix_get_last_error()' hint='(PHP 4>=4.2.0, PHP 5) int posix_get_last_error(void) - Retrieve the error number set by the last posix function that failed.' flags='130'/>
<tag menu='P' submenu='POSIX-->>p - posix_getp' inserttext='posix_getcwd()' hint='(PHP 4, PHP 5) string posix_getcwd(void) - Pathname of current directory.' flags='130'/>
<tag menu='P' submenu='POSIX-->>p - posix_getp' inserttext='posix_getegid()' hint='(PHP 4, PHP 5) int posix_getegid(void) - Return the effective group ID of the current process.' flags='130'/>
<tag menu='P' submenu='POSIX-->>p - posix_getp' inserttext='posix_geteuid()' hint='(PHP 4, PHP 5) int posix_geteuid(void) - Return the effective user ID of the current process.' flags='130'/>
<tag menu='P' submenu='POSIX-->>p - posix_getp' inserttext='posix_getgid()' hint='(PHP 4, PHP 5) int posix_getgid(void) - Return the real group ID of the current process.' flags='130'/>
<tag menu='P' submenu='POSIX-->>p - posix_getp' inserttext='posix_getgrgid(|)' hint='(PHP 4, PHP 5) array posix_getgrgid(int $gid) - Return info about a group by group id.' flags='130'/>
<tag menu='P' submenu='POSIX-->>p - posix_getp' inserttext='posix_getgrnam(|)' hint='(PHP 4, PHP 5) array posix_getgrnam(string $name) - Return info about a group by name.' flags='130'/>
<tag menu='P' submenu='POSIX-->>p - posix_getp' inserttext='posix_getgroups()' hint='(PHP 4, PHP 5) array posix_getgroups(void) - Return the group set of the current process.' flags='130'/>
<tag menu='P' submenu='POSIX-->>p - posix_getp' inserttext='posix_getlogin()' hint='(PHP 4, PHP 5) string posix_getlogin(void) - Return login name.' flags='130'/>
<tag menu='P' submenu='POSIX-->>p - posix_getp' inserttext='posix_getpgid(|)' hint='(PHP 4, PHP 5) int posix_getpgid(int $pid) - Get process group id for job control.' flags='130'/>
<tag menu='P' submenu='POSIX-->>p - posix_getp' inserttext='posix_getpgrp()' hint='(PHP 4, PHP 5) int posix_getpgrp(void) - Return the current process group identifier.' flags='130'/>
<tag menu='P' submenu='POSIX-->>p - posix_getp' inserttext='posix_getpid()' hint='(PHP 4, PHP 5) int posix_getpid(void) - Return the current process identifier.' flags='130'/>
<tag menu='P' submenu='POSIX-->>p - posix_getp' inserttext='posix_getppid()' hint='(PHP 4, PHP 5) int posix_getppid(void) - Return the parent process identifier.' flags='130'/>
<tag menu='P' submenu='POSIX-->>p - posix_getp' inserttext='posix_getpwnam(|)' hint='(PHP 4, PHP 5) array posix_getpwnam(string $username) - Return info about a user by username.' flags='130'/>
<tag menu='P' submenu='POSIX-->>p - posix_getp' inserttext='posix_getpwuid(|)' hint='(PHP 4, PHP 5) array posix_getpwuid(int $uid) - Return info about a user by user id.' flags='130'/>
<tag menu='P' submenu='POSIX-->>posix_getr - p' inserttext='posix_getrlimit()' hint='(PHP 4, PHP 5) array posix_getrlimit(void) - Return info about system resource limits.' flags='130'/>
<tag menu='P' submenu='POSIX-->>posix_getr - p' inserttext='posix_getsid(|)' hint='(PHP 4, PHP 5) int posix_getsid(int $pid) - Get the current sid of the process.' flags='130'/>
<tag menu='P' submenu='POSIX-->>posix_getr - p' inserttext='posix_getuid()' hint='(PHP 4, PHP 5) int posix_getuid(void) - Return the real user ID of the current process.' flags='130'/>
<tag menu='P' submenu='POSIX-->>posix_getr - p' inserttext='posix_initgroups(|)' hint='(PHP 5>=5.2.0) bool posix_initgroups(string $name, int $base_group_id) - Calculate the group access list.' flags='130'/>
<tag menu='P' submenu='POSIX-->>posix_getr - p' inserttext='posix_isatty(|)' hint='(PHP 4, PHP 5) bool posix_isatty(int $fd) - Determine if a file descriptor is an interactive terminal.' flags='130'/>
<tag menu='P' submenu='POSIX-->>posix_getr - p' inserttext='posix_kill(|)' hint='(PHP 4, PHP 5) bool posix_kill(int $pid, int $sig) - Send a signal to a process.' flags='130'/>
<tag menu='P' submenu='POSIX-->>posix_getr - p' inserttext='posix_mkfifo(|)' hint='(PHP 4, PHP 5) bool posix_mkfifo(string $pathname, int $mode) - Create a fifo special file (a named pipe).' flags='130'/>
<tag menu='P' submenu='POSIX-->>posix_getr - p' inserttext='posix_mknod(|)' hint='(PHP 5>=5.1.0) bool posix_mknod(string $pathname, int $mode [, int $major=0 [, int $minor=0 ]]) - Create a special or ordinary file (POSIX.1).' flags='130'/>
<tag menu='P' submenu='POSIX-->>posix_getr - p' inserttext='posix_setegid(|)' hint='(PHP 4>=4.0.2, PHP 5) bool posix_setegid(int $gid) - Set the effective GID of the current process.' flags='130'/>
<tag menu='P' submenu='POSIX-->>posix_getr - p' inserttext='posix_seteuid(|)' hint='(PHP 4>=4.0.2, PHP 5) bool posix_seteuid(int $uid) - Set the effective UID of the current process.' flags='130'/>
<tag menu='P' submenu='POSIX-->>posix_getr - p' inserttext='posix_setgid(|)' hint='(PHP 4, PHP 5) bool posix_setgid(int $gid) - Set the GID of the current process.' flags='130'/>
<tag menu='P' submenu='POSIX-->>posix_getr - p' inserttext='posix_setpgid(|)' hint='(PHP 4, PHP 5) bool posix_setpgid(int $pid, int $pgid) - Set process group id for job control.' flags='130'/>
<tag menu='P' submenu='POSIX-->>posix_getr - p' inserttext='posix_setsid()' hint='(PHP 4, PHP 5) int posix_setsid(void) - Make the current process a session leader.' flags='130'/>
<tag menu='P' submenu='POSIX-->>posix_getr - p' inserttext='posix_setuid(|)' hint='(PHP 4, PHP 5) bool posix_setuid(int $uid) - Set the UID of the current process.' flags='130'/>
<tag menu='P' submenu='POSIX-->>posix_getr - p' inserttext='posix_strerror(|)' hint='(PHP 4>=4.2.0, PHP 5) string posix_strerror(int $errno) - Retrieve the system error message associated with the given errno.' flags='130'/>
<tag menu='P' submenu='POSIX-->>posix_getr - p' inserttext='posix_times()' hint='(PHP 4, PHP 5) array posix_times(void) - Get process times.' flags='130'/>
<tag menu='P' submenu='POSIX-->>posix_getr - p' inserttext='posix_ttyname(|)' hint='(PHP 4, PHP 5) string posix_ttyname(int $fd) - Determine terminal device name.' flags='130'/>
<tag menu='P' submenu='POSIX-->>posix_getr - p' inserttext='posix_uname()' hint='(PHP 4, PHP 5) array posix_uname(void) - Get system name.' flags='130'/>
<tag menu='P' submenu='POSIX Regex' inserttext='ereg(|)' hint='(PHP 4, PHP 5) int ereg(string $pattern, string $string [, array &amp;$regs]) - Regular expression match.' flags='130'/>
<tag menu='P' submenu='POSIX Regex' inserttext='ereg_replace(|)' hint='(PHP 4, PHP 5) string ereg_replace(string $pattern, string $replacement, string $string) - Replace regular expression.' flags='130'/>
<tag menu='P' submenu='POSIX Regex' inserttext='eregi(|)' hint='(PHP 4, PHP 5) int eregi(string $pattern, string $string [, array &amp;$regs]) - Case insensitive regular expression match.' flags='130'/>
<tag menu='P' submenu='POSIX Regex' inserttext='eregi_replace(|)' hint='(PHP 4, PHP 5) string eregi_replace(string $pattern, string $replacement, string $string) - Replace regular expression case insensitive.' flags='130'/>
<tag menu='P' submenu='POSIX Regex' inserttext='split(|)' hint='(PHP 4, PHP 5) array split(string $pattern, string $string [, int $limit]) - Split string into array by regular expression.' flags='130'/>
<tag menu='P' submenu='POSIX Regex' inserttext='spliti(|)' hint='(PHP 4>=4.0.1, PHP 5) array spliti(string $pattern, string $string [, int $limit]) - Split string into array by regular expression case insensitive.' flags='130'/>
<tag menu='P' submenu='POSIX Regex' inserttext='sql_regcase(|)' hint='(PHP 4, PHP 5) string sql_regcase(string $string) - Make regular expression for case insensitive match.' flags='130'/>
<tag menu='P' submenu='ParentIterator class' inserttext='ParentIterator::__construct(|)' hint='(PHP 5>=5.1.0) ParentIterator::__construct(RecursiveIterator $iterator) - Constructs a ParentIterator.' flags='130'/>
<tag menu='P' submenu='ParentIterator class' inserttext='ParentIterator::accept()' hint='(PHP 5>=5.1.0) public bool ParentIterator::accept(void) - Determines acceptability.' flags='130'/>
<tag menu='P' submenu='ParentIterator class' inserttext='ParentIterator::getChildren()' hint="(PHP 5>=5.1.0) ParentIterator ParentIterator::getChildren(void) - Return the inner iterator's children contained in a ParentIterator." flags='130'/>
<tag menu='P' submenu='ParentIterator class' inserttext='ParentIterator::hasChildren()' hint="(PHP 5>=5.1.0) bool ParentIterator::hasChildren(void) - Check whether the inner iterator's current element has children." flags='130'/>
<tag menu='P' submenu='ParentIterator class' inserttext='ParentIterator::next()' hint='(PHP 5>=5.1.0) void ParentIterator::next(void) - Move the iterator forward.' flags='130'/>
<tag menu='P' submenu='ParentIterator class' inserttext='ParentIterator::rewind()' hint='(PHP 5>=5.1.0) void ParentIterator::rewind(void) - Rewind the iterator.' flags='130'/>
<tag menu='P' submenu='Phar class-->>P - Phar::getSupportedC' inserttext='Phar::__construct(|)' hint='(PHP>=5.3.0, PECL phar>=1.0.0) void Phar::__construct(string $fname [, int $flags [, string $alias ]]) - Construct a Phar archive object.' flags='130'/>
<tag menu='P' submenu='Phar class-->>P - Phar::getSupportedC' inserttext='Phar::apiVersion()' hint='(PHP>=5.3.0, PECL phar>=1.0.0) string Phar::apiVersion(void) - Returns the api version.' flags='130'/>
<tag menu='P' submenu='Phar class-->>P - Phar::getSupportedC' inserttext='Phar::buildFromDirectory(|)' hint='(PHP>=5.3.0, PECL phar>=2.0.0) array Phar::buildFromDirectory(string $base_dir [, string $regex]) - Construct a phar archive from the files within a directory.' flags='130'/>
<tag menu='P' submenu='Phar class-->>P - Phar::getSupportedC' inserttext='Phar::buildFromIterator(|)' hint='(PHP>=5.3.0, PECL phar>=2.0.0) array Phar::buildFromIterator(Iterator $iter [, string $base_directory]) - Construct a phar archive from an iterator.' flags='130'/>
<tag menu='P' submenu='Phar class-->>P - Phar::getSupportedC' inserttext='Phar::canCompress(|)' hint='(PHP>=5.3.0, PECL phar>=1.0.0) bool Phar::canCompress([int $type=0]) - Returns whether phar extension supports compression using either zlib or bzip2.' flags='130'/>
<tag menu='P' submenu='Phar class-->>P - Phar::getSupportedC' inserttext='Phar::canWrite()' hint='(PHP>=5.3.0, PECL phar>=1.0.0) bool Phar::canWrite(void) - Returns whether phar extension supports writing and creating phars.' flags='130'/>
<tag menu='P' submenu='Phar class-->>P - Phar::getSupportedC' inserttext='Phar::compress(|)' hint='(PHP>=5.3.0, PECL phar>=2.0.0) object Phar::compress(int $compression [, string $extension]) - Compresses the entire Phar archive using Gzip or Bzip2 compression.' flags='130'/>
<tag menu='P' submenu='Phar class-->>P - Phar::getSupportedC' inserttext='Phar::compressAllFilesBZIP2()' hint='(PHP>=5.3.0, PECL phar>=1.0.0) bool Phar::compressAllFilesBZIP2(void) - Compresses all files in the current Phar archive using Bzip2 compression.' flags='130'/>
<tag menu='P' submenu='Phar class-->>P - Phar::getSupportedC' inserttext='Phar::compressAllFilesGZ()' hint='(PHP>=5.3.0, PECL phar>=1.0.0) bool Phar::compressAllFilesGZ(void) - Compresses all files in the current Phar archive using Gzip compression.' flags='130'/>
<tag menu='P' submenu='Phar class-->>P - Phar::getSupportedC' inserttext='Phar::compressFiles(|)' hint='(PHP>=5.3.0, PECL phar>=2.0.0) void Phar::compressFiles(int $compression) - Compresses all files in the current Phar archive.' flags='130'/>
<tag menu='P' submenu='Phar class-->>P - Phar::getSupportedC' inserttext='Phar::convertToData(|)' hint='(PHP>=5.3.0, PECL phar>=2.0.0) PharData Phar::convertToData([int $format=9021976 [, int $compression=9021976 [, string $extension ]]]) - Convert a phar archive to a non-executable tar or zip file.' flags='130'/>
<tag menu='P' submenu='Phar class-->>P - Phar::getSupportedC' inserttext='Phar::convertToExecutable(|)' hint='(PHP>=5.3.0, PECL phar>=2.0.0) Phar Phar::convertToExecutable([int $format=9021976 [, int $compression=9021976 [, string $extension ]]]) - Convert a phar archive to another executable phar archive file format.' flags='130'/>
<tag menu='P' submenu='Phar class-->>P - Phar::getSupportedC' inserttext='Phar::copy(|)' hint='(PHP>=5.3.0, PECL phar>=2.0.0) bool Phar::copy(string $oldfile, string $newfile) - Copy a file internal to the phar archive to another new file within the phar.' flags='130'/>
<tag menu='P' submenu='Phar class-->>P - Phar::getSupportedC' inserttext='Phar::count()' hint='(PHP>=5.3.0, PECL phar>=1.0.0) int Phar::count(void) - Returns the number of entries (files) in the Phar archive.' flags='130'/>
<tag menu='P' submenu='Phar class-->>P - Phar::getSupportedC' inserttext='Phar::decompress(|)' hint='(PHP>=5.3.0, PECL phar>=2.0.0) object Phar::decompress([string $extension]) - Decompresses the entire Phar archive.' flags='130'/>
<tag menu='P' submenu='Phar class-->>P - Phar::getSupportedC' inserttext='Phar::decompressFiles()' hint='(PHP>=5.3.0, PECL phar>=2.0.0) bool Phar::decompressFiles(void) - Decompresses all files in the current Phar archive.' flags='130'/>
<tag menu='P' submenu='Phar class-->>P - Phar::getSupportedC' inserttext='Phar::delMetadata()' hint='(PHP>=5.3.0, PECL phar>=1.2.0) bool Phar::delMetadata(void) - Deletes the global metadata of the phar.' flags='130'/>
<tag menu='P' submenu='Phar class-->>P - Phar::getSupportedC' inserttext='Phar::delete(|)' hint='(PHP>=5.3.0, PECL phar>=2.0.0) bool Phar::delete(string $entry) - Delete a file within a phar archive.' flags='130'/>
<tag menu='P' submenu='Phar class-->>P - Phar::getSupportedC' inserttext='Phar::getMetaData()' hint='(PHP>=5.3.0, PECL phar>=1.0.0) mixed Phar::getMetaData(void) - Returns phar archive meta-data.' flags='130'/>
<tag menu='P' submenu='Phar class-->>P - Phar::getSupportedC' inserttext='Phar::getModified()' hint='(PHP>=5.3.0, PECL phar>=1.0.0) bool Phar::getModified(void) - Return whether phar was modified.' flags='130'/>
<tag menu='P' submenu='Phar class-->>P - Phar::getSupportedC' inserttext='Phar::getSignature()' hint='(PHP>=5.3.0, PECL phar>=1.0.0) array Phar::getSignature(void) - Return MD5/SHA1/SHA256/SHA512/OpenSSL signature of a Phar archive.' flags='130'/>
<tag menu='P' submenu='Phar class-->>P - Phar::getSupportedC' inserttext='Phar::getStub()' hint='(PHP>=5.3.0, PECL phar>=1.0.0) string Phar::getStub(void) - Return the PHP loader or bootstrap stub of a Phar archive.' flags='130'/>
<tag menu='P' submenu='Phar class-->>P - Phar::getSupportedC' inserttext='Phar::getSupportedCompression()' hint='(PHP>=5.3.0, PECL phar>=1.2.0) array Phar::getSupportedCompression(void) - Return array of supported compression algorithms.' flags='130'/>
<tag menu='P' submenu='Phar class-->>Phar::getSupportedS - P' inserttext='Phar::getSupportedSignatures()' hint='(PHP>=5.3.0, PECL phar>=1.1.0) array Phar::getSupportedSignatures(void) - Return array of supported signature types.' flags='130'/>
<tag menu='P' submenu='Phar class-->>Phar::getSupportedS - P' inserttext='Phar::getVersion()' hint='(PHP>=5.3.0, PECL phar>=1.0.0) string Phar::getVersion(void) - Return version info of Phar archive.' flags='130'/>
<tag menu='P' submenu='Phar class-->>Phar::getSupportedS - P' inserttext='Phar::hasMetaData()' hint='(PHP>=5.3.0, PECL phar>=1.2.0) bool Phar::hasMetadata(void) - Returns whether phar has global meta-data.' flags='130'/>
<tag menu='P' submenu='Phar class-->>Phar::getSupportedS - P' inserttext='Phar::interceptFileFuncs()' hint='(PHP>=5.3.0, PECL phar>=2.0.0) void Phar::interceptFileFuncs(void) - instructs phar to intercept fopen, file_get_contents, opendir, and all of the stat-related functions.' flags='130'/>
<tag menu='P' submenu='Phar class-->>Phar::getSupportedS - P' inserttext='Phar::isBuffering()' hint='(PHP>=5.3.0, PECL phar>=1.0.0) bool Phar::isBuffering(void) - Used to determine whether Phar write operations are being buffered, or are flushing directly to disk.' flags='130'/>
<tag menu='P' submenu='Phar class-->>Phar::getSupportedS - P' inserttext='Phar::isCompressed()' hint='(PHP>=5.3.0, PECL phar>=2.0.0) mixed Phar::isCompressed(void) - Returns Phar::GZ or PHAR::BZ2 if the entire phar archive is compressed (.tar.gz/tar.bz and so on).' flags='130'/>
<tag menu='P' submenu='Phar class-->>Phar::getSupportedS - P' inserttext='Phar::isFileFormat(|)' hint='(PHP>=5.3.0, PECL phar>=2.0.0) bool Phar::isFileFormat(int $format) - Returns true if the phar archive is based on the tar/phar/zip file format depending on the parameter.' flags='130'/>
<tag menu='P' submenu='Phar class-->>Phar::getSupportedS - P' inserttext='Phar::isValidPharFilename(|)' hint='(PHP>=5.3.0, PECL phar>=1.2.0) bool Phar::isValidPharFilename(string $filename [, bool $executable=true]) - Returns whether the given filename is a valid phar filename.' flags='130'/>
<tag menu='P' submenu='Phar class-->>Phar::getSupportedS - P' inserttext='Phar::loadPhar(|)' hint='(PHP>=5.3.0, PECL phar>=1.0.0) bool Phar::loadPhar(string $filename [, string $alias]) - Loads any phar archive with an alias.' flags='130'/>
<tag menu='P' submenu='Phar class-->>Phar::getSupportedS - P' inserttext='Phar::mapPhar(|)' hint='(PHP>=5.3.0, PECL phar>=1.0.0) bool Phar::mapPhar([string $alias [, int $dataoffset=0 ]]) - Reads the currently executed file (a phar) and registers its manifest.' flags='130'/>
<tag menu='P' submenu='Phar class-->>Phar::getSupportedS - P' inserttext='Phar::mount(|)' hint='(PHP>=5.3.0, PECL phar>=2.0.0) void Phar::mount(string $pharpath, string $externalpath) - Mount an external path or file to a virtual location within the phar archive.' flags='130'/>
<tag menu='P' submenu='Phar class-->>Phar::getSupportedS - P' inserttext='Phar::offsetExists(|)' hint='(PHP>=5.3.0, PECL phar>=1.0.0) bool Phar::offsetExists(string $offset) - determines whether a file exists in the phar.' flags='130'/>
<tag menu='P' submenu='Phar class-->>Phar::getSupportedS - P' inserttext='Phar::offsetGet(|)' hint='(PHP>=5.3.0, PECL phar>=1.0.0) int Phar::offsetGet(string $offset) - Gets a PharFileInfo object for a specific file.' flags='130'/>
<tag menu='P' submenu='Phar class-->>Phar::getSupportedS - P' inserttext='Phar::offsetSet(|)' hint='(PHP>=5.3.0, PECL phar>=1.0.0) void Phar::offsetSet(string $offset, string $value) - set the contents of an internal file to those of an external file.' flags='130'/>
<tag menu='P' submenu='Phar class-->>Phar::getSupportedS - P' inserttext='Phar::offsetUnset(|)' hint='(PHP>=5.3.0, PECL phar>=1.0.0) bool Phar::offsetUnset(string $offset) - remove a file from a phar.' flags='130'/>
<tag menu='P' submenu='Phar class-->>Phar::getSupportedS - P' inserttext='Phar::running(|)' hint='(PHP>=5.3.0, PECL phar>=2.0.0) string Phar::running([bool $retphar=true]) - Returns the full path on disk or full phar URL to the currently executing Phar archive.' flags='130'/>
<tag menu='P' submenu='Phar class-->>Phar::getSupportedS - P' inserttext='Phar::setAlias(|)' hint='(PHP>=5.3.0, PECL phar>=1.2.1) bool Phar::setAlias(string $alias) - Set the alias for the Phar archive.' flags='130'/>
<tag menu='P' submenu='Phar class-->>Phar::getSupportedS - P' inserttext='Phar::setMetadata(|)' hint='(PHP>=5.3.0, PECL phar>=1.0.0) void Phar::setMetadata(mixed $metadata) - Sets phar archive meta-data.' flags='130'/>
<tag menu='P' submenu='Phar class-->>Phar::getSupportedS - P' inserttext='Phar::setSignatureAlgorithm(|)' hint='(PHP>=5.3.0, PECL phar>=1.1.0) void Phar::setSignatureAlgorithm(int $sigtype [, string $privatekey]) - set the signature algorithm for a phar and apply it.' flags='130'/>
<tag menu='P' submenu='Phar class-->>Phar::getSupportedS - P' inserttext='Phar::setStub(|)' hint='(PHP>=5.3.0, PECL phar>=1.0.0) bool Phar::setStub(string $stub) - Used to set the PHP loader or bootstrap stub of a Phar archive.' flags='130'/>
<tag menu='P' submenu='Phar class-->>Phar::getSupportedS - P' inserttext='Phar::startBuffering()' hint='(PHP>=5.3.0, PECL phar>=1.0.0) void Phar::startBuffering(void) - Start buffering Phar write operations, do not modify the Phar object on disk.' flags='130'/>
<tag menu='P' submenu='Phar class-->>Phar::getSupportedS - P' inserttext='Phar::stopBuffering()' hint='(PHP>=5.3.0, PECL phar>=1.0.0) void Phar::stopBuffering(void) - Stop buffering write requests to the Phar archive, and save changes to disk.' flags='130'/>
<tag menu='P' submenu='Phar class-->>Phar::getSupportedS - P' inserttext='Phar::unlinkArchive(|)' hint='(PHP>=5.3.0, PECL phar>=2.0.0) bool Phar::unlinkArchive(string $archive) - Completely remove a phar archive from disk and from memory.' flags='130'/>
<tag menu='P' submenu='Phar class-->>Phar::getSupportedS - P' inserttext='Phar::webPhar(|)' hint='(PHP>=5.3.0, PECL phar>=2.0.0) void Phar::webPhar([string $alias [, string $index="index.php" [, string $f404 [, array $mimetypes [, array $rewrites ]]]]]) - mapPhar for web-based phars. front controller for web applications.' flags='130'/>
<tag menu='P' submenu='PharData class' inserttext='Phar::setMetadata(|)' hint='(PHP>=5.3.0, PECL phar>=1.0.0) void Phar::setMetadata(mixed $metadata) - Sets phar archive meta-data.' flags='130'/>
<tag menu='P' submenu='PharData class' inserttext='Phar::setSignatureAlgorithm(|)' hint='(PHP>=5.3.0, PECL phar>=1.1.0) void Phar::setSignatureAlgorithm(int $sigtype) - set the signature algorithm for a phar and apply it. The.' flags='130'/>
<tag menu='P' submenu='PharData class' inserttext='PharData::__construct(|)' hint='(PHP>=5.3.0, PECL phar>=2.0.0) void PharData::__construct(string $fname [, int $flags [, string $alias [, int $format=Phar::TAR ]]]) - Construct a non-executable tar or zip archive object.' flags='130'/>
<tag menu='P' submenu='PharData class' inserttext='PharData::addEmptyDir(|)' hint='(PHP>=5.3.0, PECL phar>=2.0.0) bool PharData::addEmptyDir(string $dirname) - Add an empty directory to the tar/zip archive.' flags='130'/>
<tag menu='P' submenu='PharData class' inserttext='PharData::addFile(|)' hint='(PHP>=5.3.0, PECL phar>=2.0.0) void Phar::addFile(string $file [, string $localname]) - Add a file from the filesystem to the tar/zip archive.' flags='130'/>
<tag menu='P' submenu='PharData class' inserttext='PharData::addFromString(|)' hint='(PHP>=5.3.0, PECL phar>=2.0.0) bool PharData::addFromString(string $localname, string $contents) - Add a file from the filesystem to the tar/zip archive.' flags='130'/>
<tag menu='P' submenu='PharData class' inserttext='PharData::buildFromDirectory(|)' hint='(PHP>=5.3.0, PECL phar>=2.0.0) array Phar::buildFromDirectory(string $base_dir [, string $regex]) - Construct a tar/zip archive from the files within a directory.' flags='130'/>
<tag menu='P' submenu='PharData class' inserttext='PharData::buildFromIterator(|)' hint='(PHP>=5.3.0, PECL phar>=2.0.0) array PharData::buildFromIterator(Iterator $iter [, string $base_directory]) - Construct a tar or zip archive from an iterator.' flags='130'/>
<tag menu='P' submenu='PharData class' inserttext='PharData::compress(|)' hint='(PHP>=5.3.0, PECL phar>=2.0.0) object PharData::compress(int $compression, string $extension) - Compresses the entire tar/zip archive using Gzip or Bzip2 compression.' flags='130'/>
<tag menu='P' submenu='PharData class' inserttext='PharData::compressFiles(|)' hint='(PHP>=5.3.0, PECL phar>=2.0.0) bool PharData::compressFiles(int $compression) - Compresses all files in the current tar/zip archive.' flags='130'/>
<tag menu='P' submenu='PharData class' inserttext='PharData::convertToData(|)' hint='(PHP>=5.3.0, PECL phar>=2.0.0) PharData PharData::convertToData([int $format [, int $compression [, string $extension ]]]) - Convert a phar archive to a non-executable tar or zip file.' flags='130'/>
<tag menu='P' submenu='PharData class' inserttext='PharData::convertToExecutable(|)' hint='(PHP>=5.3.0, PECL phar>=2.0.0) Phar PharData::convertToExecutable([int $format [, int $compression [, string $extension ]]]) - Convert a non-executable tar/zip archive to an executable phar archive.' flags='130'/>
<tag menu='P' submenu='PharData class' inserttext='PharData::copy(|)' hint='(PHP>=5.3.0, PECL phar>=2.0.0) bool PharData::copy(string $oldfile, string $newfile) - Copy a file internal to the phar archive to another new file within the phar.' flags='130'/>
<tag menu='P' submenu='PharData class' inserttext='PharData::decompress(|)' hint='(PHP>=5.3.0, PECL phar>=2.0.0) object PharData::decompress([string $extension]) - Decompresses the entire Phar archive.' flags='130'/>
<tag menu='P' submenu='PharData class' inserttext='PharData::decompressFiles()' hint='(PHP>=5.3.0, PECL phar>=2.0.0) bool PharData::decompressFiles(void) - Decompresses all files in the current zip archive.' flags='130'/>
<tag menu='P' submenu='PharData class' inserttext='PharData::delMetadata()' hint='(PHP>=5.3.0, PECL phar>=2.0.0) int PharData::delMetadata(void) - Deletes the global metadata of a zip archive.' flags='130'/>
<tag menu='P' submenu='PharData class' inserttext='PharData::delete(|)' hint='(PHP>=5.3.0, PECL phar>=2.0.0) int PharData::delete(string $entry) - Delete a file within a tar/zip archive.' flags='130'/>
<tag menu='P' submenu='PharData class' inserttext='PharData::extractTo(|)' hint='(PHP>=5.3.0, PECL phar>=2.0.0) int PharData::extractTo(string $pathto [, string|array $files [, bool $overwrite ]]) - Extract the contents of a tar/zip archive to a directory.' flags='130'/>
<tag menu='P' submenu='PharData class' inserttext='PharData::isWritable()' hint='(PHP>=5.3.0, PECL phar>=2.0.0) bool PharData::isWritable(void) - Returns true if the tar/zip archive can be modified.' flags='130'/>
<tag menu='P' submenu='PharData class' inserttext='PharData::offsetSet(|)' hint='(PHP>=5.3.0, PECL phar>=2.0.0) void PharData::offsetSet(string $offset, string $value) - set the contents of a file within the tar/zip to those of an external file or string.' flags='130'/>
<tag menu='P' submenu='PharData class' inserttext='PharData::offsetUnset(|)' hint='(PHP>=5.3.0, PECL phar>=2.0.0) bool PharData::offsetUnset(string $offset) - remove a file from a tar/zip archive.' flags='130'/>
<tag menu='P' submenu='PharData class' inserttext='PharData::setAlias(|)' hint='(PHP>=5.3.0, PECL phar>=2.0.0) bool PharData::setAlias(string $alias) - dummy function (Phar::setAlias is not valid for PharData).' flags='130'/>
<tag menu='P' submenu='PharData class' inserttext='PharData::setDefaultStub(|)' hint='(PHP>=5.3.0, PECL phar>=2.0.0) void PharData::setDefaultStub([string $index [, string $webindex ]]) - dummy function (Phar::setDefaultStub is not valid for PharData).' flags='130'/>
<tag menu='P' submenu='PharData class' inserttext='PharData::setStub(|)' hint='(PHP>=5.3.0, PECL phar>=2.0.0) void PharData::setStub(string $stub) - dummy function (Phar::setStub is not valid for PharData).' flags='130'/>
<tag menu='P' submenu='PharFileInfo class' inserttext='PharFileInfo::__construct(|)' hint='(PHP>=5.3.0, PECL phar>=1.0.0) void PharFileInfo::__construct(string $entry) - Construct a Phar entry object.' flags='130'/>
<tag menu='P' submenu='PharFileInfo class' inserttext='PharFileInfo::chmod(|)' hint='(PHP>=5.3.0, PECL phar>=1.0.0) void PharFileInfo::chmod(int $permissions) - Sets file-specific permission bits.' flags='130'/>
<tag menu='P' submenu='PharFileInfo class' inserttext='PharFileInfo::compress(|)' hint='(PHP>=5.3.0, PECL phar>=2.0.0) bool PharFileInfo::compress(int $compression) - Compresses the current Phar entry with either zlib or bzip2 compression.' flags='130'/>
<tag menu='P' submenu='PharFileInfo class' inserttext='PharFileInfo::decompress()' hint='(PHP>=5.3.0, PECL phar>=2.0.0) bool PharFileInfo::decompress(void) - Decompresses the current Phar entry within the phar.' flags='130'/>
<tag menu='P' submenu='PharFileInfo class' inserttext='PharFileInfo::delMetadata()' hint='(PHP>=5.3.0, PECL phar>=1.2.0) bool PharFileInfo::delMetadata(void) - Deletes the metadata of the entry.' flags='130'/>
<tag menu='P' submenu='PharFileInfo class' inserttext='PharFileInfo::getCRC32()' hint='(PHP>=5.3.0, PECL phar>=1.0.0) int PharFileInfo::getCRC32(void) - Returns CRC32 code or throws an exception if CRC has not been verified.' flags='130'/>
<tag menu='P' submenu='PharFileInfo class' inserttext='PharFileInfo::getCompressedSize()' hint='(PHP>=5.3.0, PECL phar>=1.0.0) int PharFileInfo::getCompressedSize(void) - Returns the actual size of the file (with compression) inside the Phar archive.' flags='130'/>
<tag menu='P' submenu='PharFileInfo class' inserttext='PharFileInfo::getMetaData()' hint='(PHP>=5.3.0, PECL phar>=1.0.0) mixed PharFileInfo::getMetaData(void) - Returns file-specific meta-data saved with a file.' flags='130'/>
<tag menu='P' submenu='PharFileInfo class' inserttext='PharFileInfo::getPharFlags()' hint='(PHP>=5.3.0, PECL phar>=1.0.0) int PharFileInfo::getPharFlags(void) - Returns the Phar file entry flags.' flags='130'/>
<tag menu='P' submenu='PharFileInfo class' inserttext='PharFileInfo::hasMetadata()' hint='(PHP>=5.3.0, PECL phar>=1.2.0) bool PharFileInfo::hasMetadata(void) - Returns the metadata of the entry.' flags='130'/>
<tag menu='P' submenu='PharFileInfo class' inserttext='PharFileInfo::isCRCChecked()' hint='(PHP>=5.3.0, PECL phar>=1.0.0) bool PharFileInfo::isCRCChecked(void) - Returns whether file entry has had its CRC verified.' flags='130'/>
<tag menu='P' submenu='PharFileInfo class' inserttext='PharFileInfo::isCompressed(|)' hint='(PHP>=5.3.0, PECL phar>=1.0.0) bool PharFileInfo::isCompressed([int $compression_type=9021976]) - Returns whether the entry is compressed.' flags='130'/>
<tag menu='P' submenu='PharFileInfo class' inserttext='PharFileInfo::isCompressedBZIP2()' hint='(PHP>=5.3.0, PECL phar>=1.0.0) bool PharFileInfo::isCompressedBZIP2(void) - Returns whether the entry is compressed using bzip2.' flags='130'/>
<tag menu='P' submenu='PharFileInfo class' inserttext='PharFileInfo::isCompressedGZ()' hint='(PHP>=5.3.0, PECL phar>=1.0.0) bool PharFileInfo::isCompressedGZ(void) - Returns whether the entry is compressed using gz.' flags='130'/>
<tag menu='P' submenu='PharFileInfo class' inserttext='PharFileInfo::setCompressedBZIP2()' hint='(PHP>=5.3.0, PECL phar>=1.0.0) bool PharFileInfo::setCompressedBZIP2(void) - Compresses the current Phar entry within the phar using Bzip2 compression.' flags='130'/>
<tag menu='P' submenu='PharFileInfo class' inserttext='PharFileInfo::setCompressedGZ()' hint='(PHP>=5.3.0, PECL phar>=1.0.0) bool PharFileInfo::setCompressedGZ(void) - Compresses the current Phar entry within the phar using gz compression.' flags='130'/>
<tag menu='P' submenu='PharFileInfo class' inserttext='PharFileInfo::setMetaData(|)' hint='(PHP>=5.3.0, PECL phar>=1.0.0) void PharFileInfo::setMetaData(mixed $metadata) - Sets file-specific meta-data saved with a file.' flags='130'/>
<tag menu='P' submenu='PharFileInfo class' inserttext='PharFileInfo::setUncompressed()' hint='(PHP>=5.3.0, PECL phar>=1.0.0) bool PharFileInfo::setUncompressed(void) - Uncompresses the current Phar entry within the phar, if it is compressed.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>p - pg_fetch_ar' inserttext='pg_affected_rows(|)' hint='(PHP 4>=4.2.0, PHP 5) int pg_affected_rows(resource $result) - Returns number of affected records (tuples).' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>p - pg_fetch_ar' inserttext='pg_cancel_query(|)' hint='(PHP 4>=4.2.0, PHP 5) bool pg_cancel_query(resource $connection) - Cancel an asynchronous query.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>p - pg_fetch_ar' inserttext='pg_client_encoding(|)' hint='(PHP 4>=4.0.3, PHP 5) string pg_client_encoding([resource $connection]) - Gets the client encoding.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>p - pg_fetch_ar' inserttext='pg_close(|)' hint='(PHP 4, PHP 5) bool pg_close([resource $connection]) - Closes a PostgreSQL connection.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>p - pg_fetch_ar' inserttext='pg_connect(|)' hint='(PHP 4, PHP 5) resource pg_connect(string $connection_string [, int $connect_type]) - Open a PostgreSQL connection.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>p - pg_fetch_ar' inserttext='pg_connection_busy(|)' hint='(PHP 4>=4.2.0, PHP 5) bool pg_connection_busy(resource $connection) - Get connection is busy or not.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>p - pg_fetch_ar' inserttext='pg_connection_reset(|)' hint='(PHP 4>=4.2.0, PHP 5) bool pg_connection_reset(resource $connection) - Reset connection (reconnect).' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>p - pg_fetch_ar' inserttext='pg_connection_status(|)' hint='(PHP 4>=4.2.0, PHP 5) int pg_connection_status(resource $connection) - Get connection status.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>p - pg_fetch_ar' inserttext='pg_convert(|)' hint='(PHP 4>=4.3.0, PHP 5) array pg_convert(resource $connection, string $table_name, array $assoc_array [, int $options=0]) - Convert associative array values into suitable for SQL statement.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>p - pg_fetch_ar' inserttext='pg_copy_from(|)' hint='(PHP 4>=4.2.0, PHP 5) bool pg_copy_from(resource $connection, string $table_name, array $rows [, string $delimiter [, string $null_as ]]) - Insert records into a table from an array.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>p - pg_fetch_ar' inserttext='pg_copy_to(|)' hint='(PHP 4>=4.2.0, PHP 5) array pg_copy_to(resource $connection, string $table_name [, string $delimiter [, string $null_as ]]) - Copy a table to an array.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>p - pg_fetch_ar' inserttext='pg_dbname(|)' hint='(PHP 4, PHP 5) string pg_dbname([resource $connection]) - Get the database name.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>p - pg_fetch_ar' inserttext='pg_delete(|)' hint='(PHP 4>=4.3.0, PHP 5) mixed pg_delete(resource $connection, string $table_name, array $assoc_array [, int $options=PGSQL_DML_EXEC]) - Deletes records.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>p - pg_fetch_ar' inserttext='pg_end_copy(|)' hint='(PHP 4>=4.0.3, PHP 5) bool pg_end_copy([resource $connection]) - Sync with PostgreSQL backend.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>p - pg_fetch_ar' inserttext='pg_escape_bytea(|)' hint='(PHP 4>=4.2.0, PHP 5) string pg_escape_bytea([resource $connection ], string $data) - Escape a string for insertion into a bytea field.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>p - pg_fetch_ar' inserttext='pg_escape_string(|)' hint='(PHP 4>=4.2.0, PHP 5) string pg_escape_string([resource $connection ], string $data) - Escape a string for insertion into a text field.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>p - pg_fetch_ar' inserttext='pg_execute(|)' hint='(PHP 5>=5.1.0) resource pg_execute([resource $connection ], string $stmtname, array $params) - Sends a request to execute a prepared statement with given parameters, and waits for the result.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>p - pg_fetch_ar' inserttext='pg_fetch_all(|)' hint='(PHP 4>=4.3.0, PHP 5) array pg_fetch_all(resource $result) - Fetches all rows from a result as an array.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>p - pg_fetch_ar' inserttext='pg_fetch_all_columns(|)' hint='(PHP 5>=5.1.0) array pg_fetch_all_columns(resource $result [, int $column=0]) - Fetches all rows in a particular result column as an array.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>p - pg_fetch_ar' inserttext='pg_fetch_array(|)' hint='(PHP 4, PHP 5) array pg_fetch_array(resource $result [, int $row [, int $result_type ]]) - Fetch a row as an array.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_fetch_as - pg_last_n' inserttext='pg_fetch_assoc(|)' hint='(PHP 4>=4.3.0, PHP 5) array pg_fetch_assoc(resource $result [, int $row]) - Fetch a row as an associative array.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_fetch_as - pg_last_n' inserttext='pg_fetch_object(|)' hint='(PHP 4, PHP 5) object pg_fetch_object(resource $result [, int $row [, int $result_type=PGSQL_ASSOC ]]) - Fetch a row as an object.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_fetch_as - pg_last_n' inserttext='pg_fetch_result(|)' hint='(PHP 4>=4.2.0, PHP 5) string pg_fetch_result(resource $result, int $row, mixed $field) - Returns values from a result resource.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_fetch_as - pg_last_n' inserttext='pg_fetch_row(|)' hint='(PHP 4, PHP 5) array pg_fetch_row(resource $result [, int $row]) - Get a row as an enumerated array.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_fetch_as - pg_last_n' inserttext='pg_field_is_null(|)' hint='(PHP 4>=4.2.0, PHP 5) int pg_field_is_null(resource $result, int $row, mixed $field) - Test if a field is SQL NULL.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_fetch_as - pg_last_n' inserttext='pg_field_name(|)' hint='(PHP 4>=4.2.0, PHP 5) string pg_field_name(resource $result, int $field_number) - Returns the name of a field.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_fetch_as - pg_last_n' inserttext='pg_field_num(|)' hint='(PHP 4>=4.2.0, PHP 5) int pg_field_num(resource $result, string $field_name) - Returns the field number of the named field.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_fetch_as - pg_last_n' inserttext='pg_field_prtlen(|)' hint='(PHP 4>=4.2.0, PHP 5) int pg_field_prtlen(resource $result, int $row_number, mixed $field_name_or_number) - Returns the printed length.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_fetch_as - pg_last_n' inserttext='pg_field_size(|)' hint='(PHP 4>=4.2.0, PHP 5) int pg_field_size(resource $result, int $field_number) - Returns the internal storage size of the named field.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_fetch_as - pg_last_n' inserttext='pg_field_table(|)' hint='(PHP 5>=5.2.0) mixed pg_field_table(resource $result, int $field_number [, bool $oid_only=false]) - Returns the name or oid of the tables field.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_fetch_as - pg_last_n' inserttext='pg_field_type(|)' hint='(PHP 4>=4.2.0, PHP 5) string pg_field_type(resource $result, int $field_number) - Returns the type name for the corresponding field number.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_fetch_as - pg_last_n' inserttext='pg_field_type_oid(|)' hint='(PHP 5>=5.1.0) int pg_field_type_oid(resource $result, int $field_number) - Returns the type ID (OID) for the corresponding field number.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_fetch_as - pg_last_n' inserttext='pg_free_result(|)' hint='(PHP 4>=4.2.0, PHP 5) bool pg_free_result(resource $result) - Free result memory.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_fetch_as - pg_last_n' inserttext='pg_get_notify(|)' hint='(PHP 4>=4.3.0, PHP 5) array pg_get_notify(resource $connection [, int $result_type]) - Gets SQL NOTIFY message.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_fetch_as - pg_last_n' inserttext='pg_get_pid(|)' hint="(PHP 4>=4.3.0, PHP 5) int pg_get_pid(resource $connection) - Gets the backend's process ID." flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_fetch_as - pg_last_n' inserttext='pg_get_result(|)' hint='(PHP 4>=4.2.0, PHP 5) resource pg_get_result([resource $connection]) - Get asynchronous query result.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_fetch_as - pg_last_n' inserttext='pg_host(|)' hint='(PHP 4, PHP 5) string pg_host([resource $connection]) - Returns the host name associated with the connection.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_fetch_as - pg_last_n' inserttext='pg_insert(|)' hint='(PHP 4>=4.3.0, PHP 5) mixed pg_insert(resource $connection, string $table_name, array $assoc_array [, int $options=PGSQL_DML_EXEC]) - Insert array into table.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_fetch_as - pg_last_n' inserttext='pg_last_error(|)' hint='(PHP 4>=4.2.0, PHP 5) string pg_last_error([resource $connection]) - Get the last error message string of a connection.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_fetch_as - pg_last_n' inserttext='pg_last_notice(|)' hint='(PHP 4>=4.0.6, PHP 5) string pg_last_notice(resource $connection) - Returns the last notice message from PostgreSQL server.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_last_o - pg_po' inserttext='pg_last_oid(|)' hint="(PHP 4>=4.2.0, PHP 5) string pg_last_oid(resource $result) - Returns the last row's OID." flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_last_o - pg_po' inserttext='pg_lo_close(|)' hint='(PHP 4>=4.2.0, PHP 5) bool pg_lo_close(resource $large_object) - Close a large object.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_last_o - pg_po' inserttext='pg_lo_create(|)' hint='(PHP 4>=4.2.0, PHP 5) int pg_lo_create([resource $connection [, mixed $object_id ]]) - Create a large object.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_last_o - pg_po' inserttext='pg_lo_export(|)' hint='(PHP 4>=4.2.0, PHP 5) bool pg_lo_export([resource $connection ], int $oid, string $pathname) - Export a large object to file.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_last_o - pg_po' inserttext='pg_lo_import(|)' hint='(PHP 4>=4.2.0, PHP 5) int pg_lo_import([resource $connection ], string $pathname [, mixed $object_id]) - Import a large object from file.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_last_o - pg_po' inserttext='pg_lo_open(|)' hint='(PHP 4>=4.2.0, PHP 5) resource pg_lo_open(resource $connection, int $oid, string $mode) - Open a large object.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_last_o - pg_po' inserttext='pg_lo_read(|)' hint='(PHP 4>=4.2.0, PHP 5) string pg_lo_read(resource $large_object [, int $len=8192]) - Read a large object.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_last_o - pg_po' inserttext='pg_lo_read_all(|)' hint='(PHP 4>=4.2.0, PHP 5) int pg_lo_read_all(resource $large_object) - Reads an entire large object and send straight to browser.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_last_o - pg_po' inserttext='pg_lo_seek(|)' hint='(PHP 4>=4.2.0, PHP 5) bool pg_lo_seek(resource $large_object, int $offset [, int $whence=PGSQL_SEEK_CUR]) - Seeks position within a large object.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_last_o - pg_po' inserttext='pg_lo_tell(|)' hint='(PHP 4>=4.2.0, PHP 5) int pg_lo_tell(resource $large_object) - Returns current seek position a of large object.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_last_o - pg_po' inserttext='pg_lo_unlink(|)' hint='(PHP 4>=4.2.0, PHP 5) bool pg_lo_unlink(resource $connection, int $oid) - Delete a large object.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_last_o - pg_po' inserttext='pg_lo_write(|)' hint='(PHP 4>=4.2.0, PHP 5) int pg_lo_write(resource $large_object, string $data [, int $len]) - Write to a large object.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_last_o - pg_po' inserttext='pg_meta_data(|)' hint='(PHP 4>=4.3.0, PHP 5) array pg_meta_data(resource $connection, string $table_name) - Get meta data for table.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_last_o - pg_po' inserttext='pg_num_fields(|)' hint='(PHP 4>=4.2.0, PHP 5) int pg_num_fields(resource $result) - Returns the number of fields in a result.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_last_o - pg_po' inserttext='pg_num_rows(|)' hint='(PHP 4>=4.2.0, PHP 5) int pg_num_rows(resource $result) - Returns the number of rows in a result.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_last_o - pg_po' inserttext='pg_options(|)' hint='(PHP 4, PHP 5) string pg_options([resource $connection]) - Get the options associated with the connection.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_last_o - pg_po' inserttext='pg_parameter_status(|)' hint='(PHP 5) string pg_parameter_status([resource $connection ], string $param_name) - Looks up a current parameter setting of the server.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_last_o - pg_po' inserttext='pg_pconnect(|)' hint='(PHP 4, PHP 5) resource pg_pconnect(string $connection_string [, int $connect_type]) - Open a persistent PostgreSQL connection.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_last_o - pg_po' inserttext='pg_ping(|)' hint='(PHP 4>=4.3.0, PHP 5) bool pg_ping([resource $connection]) - Ping database connection.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_last_o - pg_po' inserttext='pg_port(|)' hint='(PHP 4, PHP 5) int pg_port([resource $connection]) - Return the port number associated with the connection.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_pr - p' inserttext='pg_prepare(|)' hint='(PHP 5>=5.1.0) resource pg_prepare([resource $connection ], string $stmtname, string $query) - Submits a request to create a prepared statement with the given parameters, and waits for completion.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_pr - p' inserttext='pg_put_line(|)' hint='(PHP 4>=4.0.3, PHP 5) bool pg_put_line([resource $connection ], string $data) - Send a NULL-terminated string to PostgreSQL backend.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_pr - p' inserttext='pg_query(|)' hint='(PHP 4>=4.2.0, PHP 5) resource pg_query([resource $connection ], string $query) - Execute a query.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_pr - p' inserttext='pg_query_params(|)' hint='(PHP 5>=5.1.0) resource pg_query_params([resource $connection ], string $query, array $params) - Submits a command to the server and waits for the result, with the ability to pass parameters separately from the SQL command text.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_pr - p' inserttext='pg_result_error(|)' hint='(PHP 4>=4.2.0, PHP 5) string pg_result_error(resource $result) - Get error message associated with result.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_pr - p' inserttext='pg_result_error_field(|)' hint='(PHP 5>=5.1.0) string pg_result_error_field(resource $result, int $fieldcode) - Returns an individual field of an error report.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_pr - p' inserttext='pg_result_seek(|)' hint='(PHP 4>=4.3.0, PHP 5) bool pg_result_seek(resource $result, int $offset) - Set internal row offset in result resource.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_pr - p' inserttext='pg_result_status(|)' hint='(PHP 4>=4.2.0, PHP 5) mixed pg_result_status(resource $result [, int $type]) - Get status of query result.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_pr - p' inserttext='pg_select(|)' hint='(PHP 4>=4.3.0, PHP 5) mixed pg_select(resource $connection, string $table_name, array $assoc_array [, int $options=PGSQL_DML_EXEC]) - Select records.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_pr - p' inserttext='pg_send_execute(|)' hint='(PHP 5>=5.1.0) bool pg_send_execute(resource $connection, string $stmtname, array $params) - Sends a request to execute a prepared statement with given parameters, without waiting for the result(s).' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_pr - p' inserttext='pg_send_prepare(|)' hint='(PHP 5>=5.1.0) bool pg_send_prepare(resource $connection, string $stmtname, string $query) - Sends a request to create a prepared statement with the given parameters, without waiting for completion.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_pr - p' inserttext='pg_send_query(|)' hint='(PHP 4>=4.2.0, PHP 5) bool pg_send_query(resource $connection, string $query) - Sends asynchronous query.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_pr - p' inserttext='pg_send_query_params(|)' hint='(PHP 5>=5.1.0) bool pg_send_query_params(resource $connection, string $query, array $params) - Submits a command and separate parameters to the server without waiting for the result(s).' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_pr - p' inserttext='pg_set_client_encoding(|)' hint='(PHP 4>=4.0.3, PHP 5) int pg_set_client_encoding([resource $connection ], string $encoding) - Set the client encoding.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_pr - p' inserttext='pg_set_error_verbosity(|)' hint='(PHP 5>=5.1.0) int pg_set_error_verbosity([resource $connection ], int $verbosity) - Determines the verbosity of messages returned by pg_last_error() and pg_result_error().' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_pr - p' inserttext='pg_trace(|)' hint='(PHP 4>=4.0.1, PHP 5) bool pg_trace(string $pathname [, string $mode="w" [, resource $connection ]]) - Enable tracing a PostgreSQL connection.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_pr - p' inserttext='pg_transaction_status(|)' hint='(PHP 5>=5.1.0) int pg_transaction_status(resource $connection) - Returns the current in-transaction status of the server.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_pr - p' inserttext='pg_tty(|)' hint='(PHP 4, PHP 5) string pg_tty([resource $connection]) - Return the TTY name associated with the connection.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_pr - p' inserttext='pg_unescape_bytea(|)' hint='(PHP 4>=4.3.0, PHP 5) string pg_unescape_bytea(string $data) - Unescape binary for bytea type.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_pr - p' inserttext='pg_untrace(|)' hint='(PHP 4>=4.0.1, PHP 5) bool pg_untrace([resource $connection]) - Disable tracing of a PostgreSQL connection.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_pr - p' inserttext='pg_update(|)' hint='(PHP 4>=4.3.0, PHP 5) mixed pg_update(resource $connection, string $table_name, array $data, array $condition [, int $options=PGSQL_DML_EXEC]) - Update table.' flags='130'/>
<tag menu='P' submenu='PostgreSQL-->>pg_pr - p' inserttext='pg_version(|)' hint='(PHP 5) array pg_version([resource $connection]) - Returns an array with client, protocol and server version (when available).' flags='130'/>
<tag menu='P' submenu='Pspell' inserttext='pspell_add_to_personal(|)' hint='(PHP 4>=4.0.2, PHP 5) bool pspell_add_to_personal(int $dictionary_link, string $word) - Add the word to a personal wordlist.' flags='130'/>
<tag menu='P' submenu='Pspell' inserttext='pspell_add_to_session(|)' hint='(PHP 4>=4.0.2, PHP 5) bool pspell_add_to_session(int $dictionary_link, string $word) - Add the word to the wordlist in the current session.' flags='130'/>
<tag menu='P' submenu='Pspell' inserttext='pspell_check(|)' hint='(PHP 4>=4.0.2, PHP 5) bool pspell_check(int $dictionary_link, string $word) - Check a word.' flags='130'/>
<tag menu='P' submenu='Pspell' inserttext='pspell_clear_session(|)' hint='(PHP 4>=4.0.2, PHP 5) bool pspell_clear_session(int $dictionary_link) - Clear the current session.' flags='130'/>
<tag menu='P' submenu='Pspell' inserttext='pspell_config_create(|)' hint='(PHP 4>=4.0.2, PHP 5) int pspell_config_create(string $language [, string $spelling [, string $jargon [, string $encoding ]]]) - Create a config used to open a dictionary.' flags='130'/>
<tag menu='P' submenu='Pspell' inserttext='pspell_config_data_dir(|)' hint='(PHP 5) bool pspell_config_data_dir(int $conf, string $directory) - location of language data files.' flags='130'/>
<tag menu='P' submenu='Pspell' inserttext='pspell_config_dict_dir(|)' hint='(PHP 5) bool pspell_config_dict_dir(int $conf, string $directory) - Location of the main word list.' flags='130'/>
<tag menu='P' submenu='Pspell' inserttext='pspell_config_ignore(|)' hint='(PHP 4>=4.0.2, PHP 5) bool pspell_config_ignore(int $dictionary_link, int $n) - Ignore words less than N characters long.' flags='130'/>
<tag menu='P' submenu='Pspell' inserttext='pspell_config_mode(|)' hint='(PHP 4>=4.0.2, PHP 5) bool pspell_config_mode(int $dictionary_link, int $mode) - Change the mode number of suggestions returned.' flags='130'/>
<tag menu='P' submenu='Pspell' inserttext='pspell_config_personal(|)' hint='(PHP 4>=4.0.2, PHP 5) bool pspell_config_personal(int $dictionary_link, string $file) - Set a file that contains personal wordlist.' flags='130'/>
<tag menu='P' submenu='Pspell' inserttext='pspell_config_repl(|)' hint='(PHP 4>=4.0.2, PHP 5) bool pspell_config_repl(int $dictionary_link, string $file) - Set a file that contains replacement pairs.' flags='130'/>
<tag menu='P' submenu='Pspell' inserttext='pspell_config_runtogether(|)' hint='(PHP 4>=4.0.2, PHP 5) bool pspell_config_runtogether(int $dictionary_link, bool $flag) - Consider run-together words as valid compounds.' flags='130'/>
<tag menu='P' submenu='Pspell' inserttext='pspell_config_save_repl(|)' hint='(PHP 4>=4.0.2, PHP 5) bool pspell_config_save_repl(int $dictionary_link, bool $flag) - Determine whether to save a replacement pairs list along with the wordlist.' flags='130'/>
<tag menu='P' submenu='Pspell' inserttext='pspell_new(|)' hint='(PHP 4>=4.0.2, PHP 5) int pspell_new(string $language [, string $spelling [, string $jargon [, string $encoding [, int $mode=0 ]]]]) - Load a new dictionary.' flags='130'/>
<tag menu='P' submenu='Pspell' inserttext='pspell_new_config(|)' hint='(PHP 4>=4.0.2, PHP 5) int pspell_new_config(int $config) - Load a new dictionary with settings based on a given config.' flags='130'/>
<tag menu='P' submenu='Pspell' inserttext='pspell_new_personal(|)' hint='(PHP 4>=4.0.2, PHP 5) int pspell_new_personal(string $personal, string $language [, string $spelling [, string $jargon [, string $encoding [, int $mode=0 ]]]]) - Load a new dictionary with personal wordlist.' flags='130'/>
<tag menu='P' submenu='Pspell' inserttext='pspell_save_wordlist(|)' hint='(PHP 4>=4.0.2, PHP 5) bool pspell_save_wordlist(int $dictionary_link) - Save the personal wordlist to a file.' flags='130'/>
<tag menu='P' submenu='Pspell' inserttext='pspell_store_replacement(|)' hint='(PHP 4>=4.0.2, PHP 5) bool pspell_store_replacement(int $dictionary_link, string $misspelled, string $correct) - Store a replacement pair for a word.' flags='130'/>
<tag menu='P' submenu='Pspell' inserttext='pspell_suggest(|)' hint='(PHP 4>=4.0.2, PHP 5) array pspell_suggest(int $dictionary_link, string $word) - Suggest spellings of a word.' flags='130'/>
<tag menu='Q' submenu='qtdom' inserttext='qdom_error()' hint='(PHP 4>=4.0.5) string qdom_error(void) - Returns the error string from the last QDOM operation or FALSE if no errors occurred.' flags='130'/>
<tag menu='Q' submenu='qtdom' inserttext='qdom_tree(|)' hint='(PHP 4>=4.0.4) QDomDocument qdom_tree(string $doc) - Creates a tree of an XML string.' flags='130'/>
<tag menu='R' submenu='Readline' inserttext='readline(|)' hint='(PHP 4, PHP 5) string readline([string $prompt]) - Reads a line.' flags='130'/>
<tag menu='R' submenu='Readline' inserttext='readline_add_history(|)' hint='(PHP 4, PHP 5) bool readline_add_history(string $line) - Adds a line to the history.' flags='130'/>
<tag menu='R' submenu='Readline' inserttext='readline_callback_handler_install(|)' hint='(PHP 5>=5.1.0) bool readline_callback_handler_install(string $prompt, callback $callback) - Initializes the readline callback interface and terminal, prints the prompt and returns immediately.' flags='130'/>
<tag menu='R' submenu='Readline' inserttext='readline_callback_handler_remove()' hint='(PHP 5>=5.1.0) bool readline_callback_handler_remove(void) - Removes a previously installed callback handler and restores terminal settings.' flags='130'/>
<tag menu='R' submenu='Readline' inserttext='readline_callback_read_char()' hint='(PHP 5>=5.1.0) void readline_callback_read_char(void) - Reads a character and informs the readline callback interface when a line is received.' flags='130'/>
<tag menu='R' submenu='Readline' inserttext='readline_clear_history()' hint='(PHP 4, PHP 5) bool readline_clear_history(void) - Clears the history.' flags='130'/>
<tag menu='R' submenu='Readline' inserttext='readline_completion_function(|)' hint='(PHP 4, PHP 5) bool readline_completion_function(callback $function) - Registers a completion function.' flags='130'/>
<tag menu='R' submenu='Readline' inserttext='readline_info(|)' hint='(PHP 4, PHP 5) mixed readline_info([string $varname [, string $newvalue ]]) - Gets/sets various internal readline variables.' flags='130'/>
<tag menu='R' submenu='Readline' inserttext='readline_list_history()' hint='(PHP 4, PHP 5) array readline_list_history(void) - Lists the history.' flags='130'/>
<tag menu='R' submenu='Readline' inserttext='readline_on_new_line()' hint='(PHP 5>=5.1.0) void readline_on_new_line(void) - Inform readline that the cursor has moved to a new line.' flags='130'/>
<tag menu='R' submenu='Readline' inserttext='readline_read_history(|)' hint='(PHP 4, PHP 5) bool readline_read_history([string $filename]) - Reads the history.' flags='130'/>
<tag menu='R' submenu='Readline' inserttext='readline_redisplay()' hint='(PHP 5>=5.1.0) void readline_redisplay(void) - Redraws the display.' flags='130'/>
<tag menu='R' submenu='Readline' inserttext='readline_write_history(|)' hint='(PHP 4, PHP 5) bool readline_write_history([string $filename]) - Writes the history.' flags='130'/>
<tag menu='R' submenu='Recode' inserttext='recode(|)' hint='(PHP 4, PHP 5) Alias of recode_string().' flags='130'/>
<tag menu='R' submenu='Recode' inserttext='recode_file(|)' hint='(PHP 4, PHP 5) bool recode_file(string $request, resource $input, resource $output) - Recode from file to file according to recode request.' flags='130'/>
<tag menu='R' submenu='Recode' inserttext='recode_string(|)' hint='(PHP 4, PHP 5) string recode_string(string $request, string $string) - Recode a string according to a recode request.' flags='130'/>
<tag menu='R' submenu='RecursiveArrayIterator class' inserttext='RecursiveArrayIterator::getChildren()' hint='(PHP 5>=5.1.0) public RecursiveArrayIterator RecursiveArrayIterator::getChildren(void) - Returns an iterator for the current entry if it is an array or an object.' flags='130'/>
<tag menu='R' submenu='RecursiveArrayIterator class' inserttext='RecursiveArrayIterator::hasChildren()' hint='(PHP 5>=5.1.0) public bool RecursiveArrayIterator::hasChildren(void) - Returns whether current entry is an array or an object.' flags='130'/>
<tag menu='R' submenu='RecursiveCachingIterator class' inserttext='RecursiveCachingIterator::__construct(|)' hint='(PHP 5>=5.1.0) RecursiveCachingIterator::__construct(Iterator $iterator [, string $flags=self::CALL_TOSTRING]) - Construct.' flags='130'/>
<tag menu='R' submenu='RecursiveCachingIterator class' inserttext='RecursiveCachingIterator::getChildren()' hint="(PHP 5>=5.1.0) RecursiveCachingIterator RecursiveCachingIterator::getChildren(void) - Return the inner iterator's children as a RecursiveCachingIterator." flags='130'/>
<tag menu='R' submenu='RecursiveCachingIterator class' inserttext='RecursiveCachingIterator::hasChildren()' hint='(PHP 5>=5.1.0) bool RecursiveCachingIterator::hasChildren(void) - Check whether the current element of the inner iterator has children.' flags='130'/>
<tag menu='R' submenu='RecursiveDirectoryIterator class' inserttext='RecursiveDirectoryIterator::__construct(|)' hint='(PHP 5>=5.1.2) RecursiveDirectoryIterator::__construct(string $path [, int $flags=FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO]) - Constructs a RecursiveDirectoryIterator.' flags='130'/>
<tag menu='R' submenu='RecursiveDirectoryIterator class' inserttext='RecursiveDirectoryIterator::getChildren()' hint='(PHP 5>=5.1.0) object RecursiveDirectoryIterator::getChildren(void) - Returns an iterator for the current entry if it is a directory.' flags='130'/>
<tag menu='R' submenu='RecursiveDirectoryIterator class' inserttext='RecursiveDirectoryIterator::getSubPath()' hint='(PHP 5>=5.1.0) public string RecursiveDirectoryIterator::getSubPath(void) - Get sub path.' flags='130'/>
<tag menu='R' submenu='RecursiveDirectoryIterator class' inserttext='RecursiveDirectoryIterator::getSubPathname()' hint='(PHP 5>=5.1.0) public string RecursiveDirectoryIterator::getSubPathname(void) - Get sub path and name.' flags='130'/>
<tag menu='R' submenu='RecursiveDirectoryIterator class' inserttext='RecursiveDirectoryIterator::hasChildren(|)' hint="(PHP 5) bool RecursiveDirectoryIterator::hasChildren([bool $allow_links]) - Returns whether current entry is a directory and not '.' or '..'." flags='130'/>
<tag menu='R' submenu='RecursiveDirectoryIterator class' inserttext='RecursiveDirectoryIterator::key()' hint='(PHP 5) string RecursiveDirectoryIterator::key(void) - Return path and filename of current dir entry.' flags='130'/>
<tag menu='R' submenu='RecursiveDirectoryIterator class' inserttext='RecursiveDirectoryIterator::next()' hint='(PHP 5) void RecursiveDirectoryIterator::next(void) - Move to next entry.' flags='130'/>
<tag menu='R' submenu='RecursiveDirectoryIterator class' inserttext='RecursiveDirectoryIterator::rewind()' hint='(PHP 5) void RecursiveDirectoryIterator::rewind(void) - Rewind dir back to the start.' flags='130'/>
<tag menu='R' submenu='RecursiveFilterIterator class' inserttext='RecursiveFilterIterator::__construct(|)' hint='(PHP 5>=5.1.0) RecursiveFilterIterator::__construct(RecursiveIterator $iterator) - Create a RecursiveFilterIterator from a RecursiveIterator.' flags='130'/>
<tag menu='R' submenu='RecursiveFilterIterator class' inserttext='RecursiveFilterIterator::getChildren()' hint="(PHP 5>=5.1.0) public void RecursiveFilterIterator::getChildren(void) - Return the inner iterator's children contained in a RecursiveFilterIterator." flags='130'/>
<tag menu='R' submenu='RecursiveFilterIterator class' inserttext='RecursiveFilterIterator::hasChildren()' hint="(PHP 5>=5.1.0) public void RecursiveFilterIterator::hasChildren(void) - Check whether the inner iterator's current element has children." flags='130'/>
<tag menu='R' submenu='RecursiveIterator interface' inserttext='RecursiveIterator::getChildren()' hint='(PHP 5>=5.1.0) public RecursiveIterator RecursiveIterator::getChildren(void) - Returns an iterator for the current entry.' flags='130'/>
<tag menu='R' submenu='RecursiveIterator interface' inserttext='RecursiveIterator::hasChildren()' hint='(PHP 5>=5.1.0) public bool RecursiveIterator::hasChildren(void) - Returns if an iterator can be created fot the current entry.' flags='130'/>
<tag menu='R' submenu='RecursiveIteratorIterator class' inserttext='RecursiveIteratorIterator::__construct(|)' hint='(PHP 5>=5.1.3) RecursiveIteratorIterator::__construct(Traversable $iterator [, int $mode=LEAVES_ONLY [, int $flags=0 ]]) - Construct a RecursiveIteratorIterator.' flags='130'/>
<tag menu='R' submenu='RecursiveIteratorIterator class' inserttext='RecursiveIteratorIterator::beginChildren()' hint='(PHP 5>=5.1.0) public void RecursiveIteratorIterator::beginChildren(void) - Begin children.' flags='130'/>
<tag menu='R' submenu='RecursiveIteratorIterator class' inserttext='RecursiveIteratorIterator::beginIteration()' hint='(PHP 5>=5.1.0) public void RecursiveIteratorIterator::beginIteration(void) - Begin Iteration.' flags='130'/>
<tag menu='R' submenu='RecursiveIteratorIterator class' inserttext='RecursiveIteratorIterator::callGetChildren()' hint='(PHP 5>=5.1.0) public RecursiveIterator RecursiveIteratorIterator::callGetChildren(void) - Get children.' flags='130'/>
<tag menu='R' submenu='RecursiveIteratorIterator class' inserttext='RecursiveIteratorIterator::callHasChildren()' hint='(PHP 5>=5.1.0) public bool RecursiveIteratorIterator::callHasChildren(void) - Has children.' flags='130'/>
<tag menu='R' submenu='RecursiveIteratorIterator class' inserttext='RecursiveIteratorIterator::current()' hint='(PHP 5) mixed RecursiveIteratorIterator::current(void) - Access the current element value.' flags='130'/>
<tag menu='R' submenu='RecursiveIteratorIterator class' inserttext='RecursiveIteratorIterator::endChildren()' hint='(PHP 5>=5.1.0) public void RecursiveIteratorIterator::endChildren(void) - End children.' flags='130'/>
<tag menu='R' submenu='RecursiveIteratorIterator class' inserttext='RecursiveIteratorIterator::endIteration()' hint='(PHP 5>=5.1.0) public void RecursiveIteratorIterator::endIteration(void) - End Iteration.' flags='130'/>
<tag menu='R' submenu='RecursiveIteratorIterator class' inserttext='RecursiveIteratorIterator::getDepth()' hint='(PHP 5) int RecursiveIteratorIterator::getDepth(void) - Get the current depth of the recursive iteration.' flags='130'/>
<tag menu='R' submenu='RecursiveIteratorIterator class' inserttext='RecursiveIteratorIterator::getInnerIterator()' hint='(PHP 5>=5.1.0) public iterator RecursiveIteratorIterator::getInnerIterator(void) - Get inner iterator.' flags='130'/>
<tag menu='R' submenu='RecursiveIteratorIterator class' inserttext='RecursiveIteratorIterator::getMaxDepth()' hint='(PHP 5>=5.1.0) public mixed RecursiveIteratorIterator::getMaxDepth(void) - Get max depth.' flags='130'/>
<tag menu='R' submenu='RecursiveIteratorIterator class' inserttext='RecursiveIteratorIterator::getSubIterator()' hint='(PHP 5) RecursiveIterator RecursiveIteratorIterator::getSubIterator(void) - The current active sub iterator.' flags='130'/>
<tag menu='R' submenu='RecursiveIteratorIterator class' inserttext='RecursiveIteratorIterator::key()' hint='(PHP 5) mixed RecursiveIteratorIterator::key(void) - Access the current key.' flags='130'/>
<tag menu='R' submenu='RecursiveIteratorIterator class' inserttext='RecursiveIteratorIterator::next()' hint='(PHP 5) void RecursiveIteratorIterator::next(void) - Move forward to the next element.' flags='130'/>
<tag menu='R' submenu='RecursiveIteratorIterator class' inserttext='RecursiveIteratorIterator::nextElement()' hint='(PHP 5>=5.1.0) public void RecursiveIteratorIterator::nextElement(void) - Next element.' flags='130'/>
<tag menu='R' submenu='RecursiveIteratorIterator class' inserttext='RecursiveIteratorIterator::rewind()' hint='(PHP 5) void RecursiveIteratorIterator::rewind(void) - Rewind the iterator to the first element of the top level inner iterator.' flags='130'/>
<tag menu='R' submenu='RecursiveIteratorIterator class' inserttext='RecursiveIteratorIterator::setMaxDepth(|)' hint='(PHP 5>=5.1.0) public void RecursiveIteratorIterator::setMaxDepth([string $max_depth=-1]) - Set max depth.' flags='130'/>
<tag menu='R' submenu='RecursiveIteratorIterator class' inserttext='RecursiveIteratorIterator::valid()' hint='(PHP 5) bool RecursiveIteratorIterator::valid(void) - Check whether the current position is valid.' flags='130'/>
<tag menu='R' submenu='RecursiveRegexIterator class' inserttext='RecursiveRegexIterator::__construct(|)' hint='(PHP 5>=5.2.0) Creates a new RecursiveRegexIterator.' flags='130'/>
<tag menu='R' submenu='RecursiveRegexIterator class' inserttext='RecursiveRegexIterator::getChildren()' hint='(PHP 5>=5.2.0) public RecursiveRegexIterator RecursiveRegexIterator::getChildren(void) - Returns an iterator for the current entry.' flags='130'/>
<tag menu='R' submenu='RecursiveRegexIterator class' inserttext='RecursiveRegexIterator::hasChildren()' hint='(PHP 5>=5.2.0) public bool RecursiveRegexIterator::hasChildren(void) - Returns whether an iterator can be obtained for the current entry.' flags='130'/>
<tag menu='R' submenu='RecursiveTreeIterator class' inserttext='RecursiveTreeIterator::__construct(|)' hint='(PHP 5>=5.3.0) RecursiveTreeIterator::__construct(RecursiveIterator|IteratorAggregate $it [, int $flags=RecursiveTreeIterator::BYPASS_KEY [, int $cit_flags=CachingIterator::CATCH_GET_CHILD [, int $mode=RecursiveIteratorIterator::SELF_FIRST ]]]) - Construct a RecursiveTreeIterator.' flags='130'/>
<tag menu='R' submenu='RecursiveTreeIterator class' inserttext='RecursiveTreeIterator::beginChildren()' hint='(PHP 5>=5.3.0) public void RecursiveTreeIterator::beginChildren(void) - Begin children.' flags='130'/>
<tag menu='R' submenu='RecursiveTreeIterator class' inserttext='RecursiveTreeIterator::beginIteration()' hint='(PHP 5>=5.3.0) public RecursiveIterator RecursiveTreeIterator::beginIteration(void) - Begin iteration.' flags='130'/>
<tag menu='R' submenu='RecursiveTreeIterator class' inserttext='RecursiveTreeIterator::callGetChildren()' hint='(PHP 5>=5.3.0) public RecursiveIterator RecursiveTreeIterator::callGetChildren(void) - Get children.' flags='130'/>
<tag menu='R' submenu='RecursiveTreeIterator class' inserttext='RecursiveTreeIterator::callHasChildren()' hint='(PHP 5>=5.3.0) public bool RecursiveTreeIterator::callHasChildren(void) - Has children.' flags='130'/>
<tag menu='R' submenu='RecursiveTreeIterator class' inserttext='RecursiveTreeIterator::current()' hint='(PHP 5>=5.3.0) public string RecursiveTreeIterator::current(void) - Get current element.' flags='130'/>
<tag menu='R' submenu='RecursiveTreeIterator class' inserttext='RecursiveTreeIterator::endChildren()' hint='(PHP 5>=5.3.0) public void RecursiveTreeIterator::endChildren(void) - End children.' flags='130'/>
<tag menu='R' submenu='RecursiveTreeIterator class' inserttext='RecursiveTreeIterator::endIteration()' hint='(PHP 5>=5.3.0) public void RecursiveTreeIterator::endIteration(void) - End iteration.' flags='130'/>
<tag menu='R' submenu='RecursiveTreeIterator class' inserttext='RecursiveTreeIterator::getEntry()' hint='(PHP 5>=5.3.0) public string RecursiveTreeIterator::getEntry(void) - Get current entry.' flags='130'/>
<tag menu='R' submenu='RecursiveTreeIterator class' inserttext='RecursiveTreeIterator::getPostfix()' hint='(PHP 5>=5.3.0) public void RecursiveTreeIterator::getPostfix(void) - Get the postfix.' flags='130'/>
<tag menu='R' submenu='RecursiveTreeIterator class' inserttext='RecursiveTreeIterator::getPrefix()' hint='(PHP 5>=5.3.0) public string RecursiveTreeIterator::getPrefix(void) - Get the prefix.' flags='130'/>
<tag menu='R' submenu='RecursiveTreeIterator class' inserttext='RecursiveTreeIterator::key()' hint='(PHP 5>=5.3.0) public string RecursiveTreeIterator::key(void) - Get the key of the current element.' flags='130'/>
<tag menu='R' submenu='RecursiveTreeIterator class' inserttext='RecursiveTreeIterator::next()' hint='(PHP 5>=5.3.0) public void RecursiveTreeIterator::next(void) - Move to next element.' flags='130'/>
<tag menu='R' submenu='RecursiveTreeIterator class' inserttext='RecursiveTreeIterator::nextElement()' hint='(PHP 5>=5.3.0) public void RecursiveTreeIterator::nextElement(void) - Next element.' flags='130'/>
<tag menu='R' submenu='RecursiveTreeIterator class' inserttext='RecursiveTreeIterator::rewind()' hint='(PHP 5>=5.3.0) public void RecursiveTreeIterator::rewind(void) - Rewind iterator.' flags='130'/>
<tag menu='R' submenu='RecursiveTreeIterator class' inserttext='RecursiveTreeIterator::setPrefixPart(|)' hint='(PHP 5>=5.3.0) public void RecursiveTreeIterator::setPrefixPart(int $part, string $value) - Set a part of the prefix.' flags='130'/>
<tag menu='R' submenu='RecursiveTreeIterator class' inserttext='RecursiveTreeIterator::valid()' hint='(PHP 5>=5.3.0) public bool RecursiveTreeIterator::valid(void) - Check validity.' flags='130'/>
<tag menu='R' submenu='Reflection class' inserttext='Reflection::export(|)' hint='(PHP 5) public static void Reflection::export(Reflector $reflector [, string $return=false]) - Exports.' flags='130'/>
<tag menu='R' submenu='Reflection class' inserttext='Reflection::getModifierNames(|)' hint='(PHP 5) public static array Reflection::getModifierNames(int $modifiers) - Gets modifier names.' flags='130'/>
<tag menu='R' submenu='ReflectionClass class-->>R - ReflectionClass::getProperti' inserttext='ReflectionClass::__clone()' hint='(PHP 5) final private void ReflectionClass::__clone(void) - Clones object.' flags='130'/>
<tag menu='R' submenu='ReflectionClass class-->>R - ReflectionClass::getProperti' inserttext='ReflectionClass::__construct(|)' hint='(PHP 5) ReflectionClass::__construct(string $argument) - Constructs a ReflectionClass.' flags='130'/>
<tag menu='R' submenu='ReflectionClass class-->>R - ReflectionClass::getProperti' inserttext='ReflectionClass::__toString()' hint='(PHP 5) public string ReflectionClass::__toString(void) - Returns the string representation of the ReflectionClass object.' flags='130'/>
<tag menu='R' submenu='ReflectionClass class-->>R - ReflectionClass::getProperti' inserttext='ReflectionClass::export(|)' hint='(PHP 5) public static string ReflectionClass::export(mixed $argument [, bool $return=false]) - Exports a class.' flags='130'/>
<tag menu='R' submenu='ReflectionClass class-->>R - ReflectionClass::getProperti' inserttext='ReflectionClass::getConstant(|)' hint='(PHP 5) public mixed ReflectionClass::getConstant(string $name) - Gets defined constants.' flags='130'/>
<tag menu='R' submenu='ReflectionClass class-->>R - ReflectionClass::getProperti' inserttext='ReflectionClass::getConstants()' hint='(PHP 5) public array ReflectionClass::getConstants(void) - Gets constants.' flags='130'/>
<tag menu='R' submenu='ReflectionClass class-->>R - ReflectionClass::getProperti' inserttext='ReflectionClass::getConstructor()' hint='(PHP 5) public object ReflectionClass::getConstructor(void) - Gets constructor.' flags='130'/>
<tag menu='R' submenu='ReflectionClass class-->>R - ReflectionClass::getProperti' inserttext='ReflectionClass::getDefaultProperties()' hint='(PHP 5) public array ReflectionClass::getDefaultProperties(void) - Gets default properties.' flags='130'/>
<tag menu='R' submenu='ReflectionClass class-->>R - ReflectionClass::getProperti' inserttext='ReflectionClass::getDocComment()' hint='(PHP 5>=5.1.0) public string ReflectionClass::getDocComment(void) - Gets doc comments.' flags='130'/>
<tag menu='R' submenu='ReflectionClass class-->>R - ReflectionClass::getProperti' inserttext='ReflectionClass::getEndLine()' hint='(PHP 5) public int ReflectionClass::getEndLine(void) - Gets end line.' flags='130'/>
<tag menu='R' submenu='ReflectionClass class-->>R - ReflectionClass::getProperti' inserttext='ReflectionClass::getExtension()' hint='(PHP 5) public ReflectionExtension ReflectionClass::getExtension(void) - Gets extension info.' flags='130'/>
<tag menu='R' submenu='ReflectionClass class-->>R - ReflectionClass::getProperti' inserttext='ReflectionClass::getExtensionName()' hint='(PHP 5) public string ReflectionClass::getExtensionName(void) - Gets an extensions name.' flags='130'/>
<tag menu='R' submenu='ReflectionClass class-->>R - ReflectionClass::getProperti' inserttext='ReflectionClass::getFileName()' hint='(PHP 5) public string ReflectionClass::getFileName(void) - Gets the filename of the file in which the class has been defined.' flags='130'/>
<tag menu='R' submenu='ReflectionClass class-->>R - ReflectionClass::getProperti' inserttext='ReflectionClass::getInterfaceNames()' hint='(PHP 5) public array ReflectionClass::getInterfaceNames(void) - Gets the interface names.' flags='130'/>
<tag menu='R' submenu='ReflectionClass class-->>R - ReflectionClass::getProperti' inserttext='ReflectionClass::getInterfaces()' hint='(PHP 5) public array ReflectionClass::getInterfaces(void) - Gets the interfaces.' flags='130'/>
<tag menu='R' submenu='ReflectionClass class-->>R - ReflectionClass::getProperti' inserttext='ReflectionClass::getMethod(|)' hint='(PHP 5) public object ReflectionClass::getMethod(string $name) - Gets a ReflectionMethod.' flags='130'/>
<tag menu='R' submenu='ReflectionClass class-->>R - ReflectionClass::getProperti' inserttext='ReflectionClass::getMethods(|)' hint='(PHP 5) public array ReflectionClass::getMethods([string $filter]) - Gets a list of methods.' flags='130'/>
<tag menu='R' submenu='ReflectionClass class-->>R - ReflectionClass::getProperti' inserttext='ReflectionClass::getModifiers()' hint='(PHP 5) public int ReflectionClass::getModifiers(void) - Gets modifiers.' flags='130'/>
<tag menu='R' submenu='ReflectionClass class-->>R - ReflectionClass::getProperti' inserttext='ReflectionClass::getName()' hint='(PHP 5) public string ReflectionClass::getName(void) - Gets class name.' flags='130'/>
<tag menu='R' submenu='ReflectionClass class-->>R - ReflectionClass::getProperti' inserttext='ReflectionClass::getNamespaceName()' hint='(PHP 5>=5.3.0) public string ReflectionClass::getNamespaceName(void) - Gets namespace name.' flags='130'/>
<tag menu='R' submenu='ReflectionClass class-->>R - ReflectionClass::getProperti' inserttext='ReflectionClass::getParentClass()' hint='(PHP 5) public object ReflectionClass::getParentClass(void) - Gets parent class.' flags='130'/>
<tag menu='R' submenu='ReflectionClass class-->>R - ReflectionClass::getProperti' inserttext='ReflectionClass::getProperties(|)' hint='(PHP 5) public array ReflectionClass::getProperties([int $filter]) - Gets properties.' flags='130'/>
<tag menu='R' submenu='ReflectionClass class-->>ReflectionClass::getProperty - R' inserttext='ReflectionClass::getProperty(|)' hint='(PHP 5) public ReflectionProperty ReflectionClass::getProperty(string $name) - Gets property.' flags='130'/>
<tag menu='R' submenu='ReflectionClass class-->>ReflectionClass::getProperty - R' inserttext='ReflectionClass::getShortName()' hint='(PHP 5>=5.3.0) public string ReflectionClass::getShortName(void) - Gets short name.' flags='130'/>
<tag menu='R' submenu='ReflectionClass class-->>ReflectionClass::getProperty - R' inserttext='ReflectionClass::getStartLine()' hint='(PHP 5) public int ReflectionClass::getStartLine(void) - Gets starting line number.' flags='130'/>
<tag menu='R' submenu='ReflectionClass class-->>ReflectionClass::getProperty - R' inserttext='ReflectionClass::getStaticProperties()' hint='(PHP 5) public array ReflectionClass::getStaticProperties(void) - Gets static properties.' flags='130'/>
<tag menu='R' submenu='ReflectionClass class-->>ReflectionClass::getProperty - R' inserttext='ReflectionClass::getStaticPropertyValue(|)' hint='(PHP 5>=5.1.0) public mixed ReflectionClass::getStaticPropertyValue(string $name [, string $default]) - Gets static property value.' flags='130'/>
<tag menu='R' submenu='ReflectionClass class-->>ReflectionClass::getProperty - R' inserttext='ReflectionClass::hasConstant(|)' hint='(PHP 5>=5.1.0) public bool ReflectionClass::hasConstant(string $name) - Checks if constant is defined.' flags='130'/>
<tag menu='R' submenu='ReflectionClass class-->>ReflectionClass::getProperty - R' inserttext='ReflectionClass::hasMethod(|)' hint='(PHP 5>=5.1.0) public bool ReflectionClass::hasMethod(string $name) - Checks if method is defined.' flags='130'/>
<tag menu='R' submenu='ReflectionClass class-->>ReflectionClass::getProperty - R' inserttext='ReflectionClass::hasProperty(|)' hint='(PHP 5>=5.1.0) public bool ReflectionClass::hasProperty(string $name) - Checks if property is defined.' flags='130'/>
<tag menu='R' submenu='ReflectionClass class-->>ReflectionClass::getProperty - R' inserttext='ReflectionClass::implementsInterface(|)' hint='(PHP 5) public bool ReflectionClass::implementsInterface(string $interface) - Implements interface.' flags='130'/>
<tag menu='R' submenu='ReflectionClass class-->>ReflectionClass::getProperty - R' inserttext='ReflectionClass::inNamespace()' hint='(PHP 5>=5.3.0) public bool ReflectionClass::inNamespace(void) - Checks if in namespace.' flags='130'/>
<tag menu='R' submenu='ReflectionClass class-->>ReflectionClass::getProperty - R' inserttext='ReflectionClass::isAbstract()' hint='(PHP 5) public bool ReflectionClass::isAbstract(void) - Checks if class is abstract.' flags='130'/>
<tag menu='R' submenu='ReflectionClass class-->>ReflectionClass::getProperty - R' inserttext='ReflectionClass::isFinal()' hint='(PHP 5) public bool ReflectionClass::isFinal(void) - Checks if class is final.' flags='130'/>
<tag menu='R' submenu='ReflectionClass class-->>ReflectionClass::getProperty - R' inserttext='ReflectionClass::isInstance(|)' hint='(PHP 5) public bool ReflectionClass::isInstance(object $object) - Checks class for instance.' flags='130'/>
<tag menu='R' submenu='ReflectionClass class-->>ReflectionClass::getProperty - R' inserttext='ReflectionClass::isInstantiable()' hint='(PHP 5) public bool ReflectionClass::isInstantiable(void) - Checks if instantiable.' flags='130'/>
<tag menu='R' submenu='ReflectionClass class-->>ReflectionClass::getProperty - R' inserttext='ReflectionClass::isInterface()' hint='(PHP 5) public bool ReflectionClass::isInterface(void) - Checks if interface.' flags='130'/>
<tag menu='R' submenu='ReflectionClass class-->>ReflectionClass::getProperty - R' inserttext='ReflectionClass::isInternal()' hint='(PHP 5) public bool ReflectionClass::isInternal(void) - Checks if internal.' flags='130'/>
<tag menu='R' submenu='ReflectionClass class-->>ReflectionClass::getProperty - R' inserttext='ReflectionClass::isIterateable()' hint='(PHP 5) public bool ReflectionClass::isIterateable(void) - Checks if iterateable.' flags='130'/>
<tag menu='R' submenu='ReflectionClass class-->>ReflectionClass::getProperty - R' inserttext='ReflectionClass::isSubclassOf(|)' hint='(PHP 5) public bool ReflectionClass::isSubclassOf(string $class) - Checks if a subclass.' flags='130'/>
<tag menu='R' submenu='ReflectionClass class-->>ReflectionClass::getProperty - R' inserttext='ReflectionClass::isUserDefined()' hint='(PHP 5) public bool ReflectionClass::isUserDefined(void) - Checks if user defined.' flags='130'/>
<tag menu='R' submenu='ReflectionClass class-->>ReflectionClass::getProperty - R' inserttext='ReflectionClass::newInstance(|)' hint='(PHP 5) public object ReflectionClass::newInstance(mixed $args [, mixed $...]) - Creates a new cass instance from given arguments.' flags='130'/>
<tag menu='R' submenu='ReflectionClass class-->>ReflectionClass::getProperty - R' inserttext='ReflectionClass::newInstanceArgs(|)' hint='(PHP 5>=5.1.3) public object ReflectionClass::newInstanceArgs([array $args]) - Creates a new cass instance from given arguments.' flags='130'/>
<tag menu='R' submenu='ReflectionClass class-->>ReflectionClass::getProperty - R' inserttext='ReflectionClass::setStaticPropertyValue(|)' hint='(PHP 5>=5.1.0) public void ReflectionClass::setStaticPropertyValue(string $name, string $value) - Sets static property value.' flags='130'/>
<tag menu='R' submenu='ReflectionExtension class' inserttext='ReflectionExtension::__clone()' hint='(PHP 5) final private void ReflectionExtension::__clone(void) - Clones.' flags='130'/>
<tag menu='R' submenu='ReflectionExtension class' inserttext='ReflectionExtension::__construct(|)' hint='(PHP 5) ReflectionExtension::__construct(string $name) - Constructs a ReflectionExtension.' flags='130'/>
<tag menu='R' submenu='ReflectionExtension class' inserttext='ReflectionExtension::__toString()' hint='(PHP 5) public string ReflectionExtension::__toString(void) - To string.' flags='130'/>
<tag menu='R' submenu='ReflectionExtension class' inserttext='ReflectionExtension::export(|)' hint='(PHP 5) public static string ReflectionExtension::export(string $name [, string $return=false]) - Export.' flags='130'/>
<tag menu='R' submenu='ReflectionExtension class' inserttext='ReflectionExtension::getClassNames()' hint='(PHP 5) public array ReflectionExtension::getClassNames(void) - Gets class names.' flags='130'/>
<tag menu='R' submenu='ReflectionExtension class' inserttext='ReflectionExtension::getClasses()' hint='(PHP 5) public array ReflectionExtension::getClasses(void) - Gets classes.' flags='130'/>
<tag menu='R' submenu='ReflectionExtension class' inserttext='ReflectionExtension::getConstants()' hint='(PHP 5) public array ReflectionExtension::getConstants(void) - Gets constants.' flags='130'/>
<tag menu='R' submenu='ReflectionExtension class' inserttext='ReflectionExtension::getDependencies()' hint='(PHP 5) public array ReflectionExtension::getDependencies(void) - Gets dependencies.' flags='130'/>
<tag menu='R' submenu='ReflectionExtension class' inserttext='ReflectionExtension::getFunctions()' hint='(PHP 5) public array ReflectionExtension::getFunctions(void) - Gets extension functions.' flags='130'/>
<tag menu='R' submenu='ReflectionExtension class' inserttext='ReflectionExtension::getINIEntries()' hint='(PHP 5) public array ReflectionExtension::getINIEntries(void) - Gets extension ini entries.' flags='130'/>
<tag menu='R' submenu='ReflectionExtension class' inserttext='ReflectionExtension::getName()' hint='(PHP 5) public string ReflectionExtension::getName(void) - Gets extension name.' flags='130'/>
<tag menu='R' submenu='ReflectionExtension class' inserttext='ReflectionExtension::getVersion()' hint='(PHP 5) public string ReflectionExtension::getVersion(void) - Gets extension version.' flags='130'/>
<tag menu='R' submenu='ReflectionExtension class' inserttext='ReflectionExtension::info()' hint='(PHP 5) public string ReflectionExtension::info(void) - Gets extension info.' flags='130'/>
<tag menu='R' submenu='ReflectionFunction class' inserttext='ReflectionFunction::__construct(|)' hint='(PHP 5) ReflectionFunction::__construct(mixed $name) - Constructs a ReflectionFunction object.' flags='130'/>
<tag menu='R' submenu='ReflectionFunction class' inserttext='ReflectionFunction::__toString()' hint='(PHP 5) public string ReflectionFunction::__toString(void) - To string.' flags='130'/>
<tag menu='R' submenu='ReflectionFunction class' inserttext='ReflectionFunction::export(|)' hint='(PHP 5) public static string ReflectionFunction::export(string $name [, string $return]) - Exports function.' flags='130'/>
<tag menu='R' submenu='ReflectionFunction class' inserttext='ReflectionFunction::invoke(|)' hint='(PHP 5) public mixed ReflectionFunction::invoke([mixed $parameter [, mixed $... ]]) - Invokes function.' flags='130'/>
<tag menu='R' submenu='ReflectionFunction class' inserttext='ReflectionFunction::invokeArgs(|)' hint='(PHP 5>=5.1.0) public mixed ReflectionFunction::invokeArgs(array $args) - Invokes function args.' flags='130'/>
<tag menu='R' submenu='ReflectionFunction class' inserttext='ReflectionFunction::isDisabled()' hint='(PHP 5) public bool ReflectionFunction::isDisabled(void) - Checks if function is disabled.' flags='130'/>
<tag menu='R' submenu='ReflectionFunctionAbstract class' inserttext='ReflectionFunctionAbstract::__clone()' hint='(PHP 5) final private void ReflectionFunctionAbstract::__clone(void) - Clones function.' flags='130'/>
<tag menu='R' submenu='ReflectionFunctionAbstract class' inserttext='ReflectionFunctionAbstract::__toString()' hint='(PHP 5) abstract public void ReflectionFunctionAbstract::__toString(void) - To string.' flags='130'/>
<tag menu='R' submenu='ReflectionFunctionAbstract class' inserttext='ReflectionFunctionAbstract::getDocComment()' hint='(PHP 5>=5.1.0) public string ReflectionFunctionAbstract::getDocComment(void) - Gets doc comment.' flags='130'/>
<tag menu='R' submenu='ReflectionFunctionAbstract class' inserttext='ReflectionFunctionAbstract::getEndLine()' hint='(PHP 5) public int ReflectionFunctionAbstract::getEndLine(void) - Gets end line number.' flags='130'/>
<tag menu='R' submenu='ReflectionFunctionAbstract class' inserttext='ReflectionFunctionAbstract::getExtension()' hint='(PHP 5) public ReflectionExtension ReflectionFunctionAbstract::getExtension(void) - Gets extension info.' flags='130'/>
<tag menu='R' submenu='ReflectionFunctionAbstract class' inserttext='ReflectionFunctionAbstract::getExtensionName()' hint='(PHP 5) public string ReflectionFunctionAbstract::getExtensionName(void) - Gets extension name.' flags='130'/>
<tag menu='R' submenu='ReflectionFunctionAbstract class' inserttext='ReflectionFunctionAbstract::getFileName()' hint='(PHP 5) public string ReflectionFunctionAbstract::getFileName(void) - Gets file name.' flags='130'/>
<tag menu='R' submenu='ReflectionFunctionAbstract class' inserttext='ReflectionFunctionAbstract::getName()' hint='(PHP 5) public string ReflectionFunctionAbstract::getName(void) - Gets function name.' flags='130'/>
<tag menu='R' submenu='ReflectionFunctionAbstract class' inserttext='ReflectionFunctionAbstract::getNamespaceName()' hint='(PHP 5>=5.3.0) public string ReflectionFunctionAbstract::getNamespaceName(void) - Gets namespace name.' flags='130'/>
<tag menu='R' submenu='ReflectionFunctionAbstract class' inserttext='ReflectionFunctionAbstract::getNumberOfParameters()' hint='(PHP 5>=5.0.3) public int ReflectionFunctionAbstract::getNumberOfParameters(void) - Gets number of parameters.' flags='130'/>
<tag menu='R' submenu='ReflectionFunctionAbstract class' inserttext='ReflectionFunctionAbstract::getNumberOfRequiredParameters()' hint='(PHP 5>=5.0.3) public int ReflectionFunctionAbstract::getNumberOfRequiredParameters(void) - Gets number of required parameters.' flags='130'/>
<tag menu='R' submenu='ReflectionFunctionAbstract class' inserttext='ReflectionFunctionAbstract::getParameters()' hint='(PHP 5) public array ReflectionFunctionAbstract::getParameters(void) - Gets parameters.' flags='130'/>
<tag menu='R' submenu='ReflectionFunctionAbstract class' inserttext='ReflectionFunctionAbstract::getShortName()' hint='(PHP 5>=5.3.0) public string ReflectionFunctionAbstract::getShortName(void) - Gets function short name.' flags='130'/>
<tag menu='R' submenu='ReflectionFunctionAbstract class' inserttext='ReflectionFunctionAbstract::getStartLine()' hint='(PHP 5) public int ReflectionFunctionAbstract::getStartLine(void) - Gets starting line number.' flags='130'/>
<tag menu='R' submenu='ReflectionFunctionAbstract class' inserttext='ReflectionFunctionAbstract::getStaticVariables()' hint='(PHP 5) public array ReflectionFunctionAbstract::getStaticVariables(void) - Gets static variables.' flags='130'/>
<tag menu='R' submenu='ReflectionFunctionAbstract class' inserttext='ReflectionFunctionAbstract::inNamespace()' hint='(PHP 5>=5.3.0) public bool ReflectionFunctionAbstract::inNamespace(void) - Checks if function in namespace.' flags='130'/>
<tag menu='R' submenu='ReflectionFunctionAbstract class' inserttext='ReflectionFunctionAbstract::isClosure()' hint='(PHP 5>=5.3.0) public bool ReflectionFunctionAbstract::isClosure(void) - Checks if closure.' flags='130'/>
<tag menu='R' submenu='ReflectionFunctionAbstract class' inserttext='ReflectionFunctionAbstract::isDeprecated()' hint='(PHP 5) public bool ReflectionFunctionAbstract::isDeprecated(void) - Checks if deprecated.' flags='130'/>
<tag menu='R' submenu='ReflectionFunctionAbstract class' inserttext='ReflectionFunctionAbstract::isInternal()' hint='(PHP 5) public bool ReflectionFunctionAbstract::isInternal(void) - Checks if is internal.' flags='130'/>
<tag menu='R' submenu='ReflectionFunctionAbstract class' inserttext='ReflectionFunctionAbstract::isUserDefined()' hint='(PHP 5) public bool ReflectionFunctionAbstract::isUserDefined(void) - Checks if user defined.' flags='130'/>
<tag menu='R' submenu='ReflectionFunctionAbstract class' inserttext='ReflectionFunctionAbstract::returnsReference()' hint='(PHP 5) public bool ReflectionFunctionAbstract::returnsReference(void) - Checks if returns reference.' flags='130'/>
<tag menu='R' submenu='ReflectionMethod class' inserttext='ReflectionMethod::__construct(|)' hint='(PHP 5) ReflectionMethod::__construct(mixed $class, string $name) - Constructs a ReflectionMethod.' flags='130'/>
<tag menu='R' submenu='ReflectionMethod class' inserttext='ReflectionMethod::__toString()' hint='(PHP 5) public string ReflectionMethod::__toString(void) - Returns the string representation of the Reflection method object.' flags='130'/>
<tag menu='R' submenu='ReflectionMethod class' inserttext='ReflectionMethod::export(|)' hint='(PHP 5) public static string ReflectionMethod::export(string $class, string $name [, bool $return=false]) - Export a reflection method.' flags='130'/>
<tag menu='R' submenu='ReflectionMethod class' inserttext='ReflectionMethod::getDeclaringClass()' hint='(PHP 5) public ReflectionClass ReflectionMethod::getDeclaringClass(void) - Gets declaring class for the reflected method.' flags='130'/>
<tag menu='R' submenu='ReflectionMethod class' inserttext='ReflectionMethod::getModifiers()' hint='(PHP 5) public int ReflectionMethod::getModifiers(void) - Gets the method modifiers.' flags='130'/>
<tag menu='R' submenu='ReflectionMethod class' inserttext='ReflectionMethod::getPrototype()' hint='(PHP 5) public ReflectionMethod ReflectionMethod::getPrototype(void) - Gets the method prototype (if there is one).' flags='130'/>
<tag menu='R' submenu='ReflectionMethod class' inserttext='ReflectionMethod::invoke(|)' hint='(PHP 5) public mixed ReflectionMethod::invoke(object $object [, mixed $parameter [, mixed $... ]]) - Invoke.' flags='130'/>
<tag menu='R' submenu='ReflectionMethod class' inserttext='ReflectionMethod::invokeArgs(|)' hint='(PHP 5>=5.1.0) public mixed ReflectionMethod::invokeArgs(object $object, array $args) - Invoke args.' flags='130'/>
<tag menu='R' submenu='ReflectionMethod class' inserttext='ReflectionMethod::isAbstract()' hint='(PHP 5) public bool ReflectionMethod::isAbstract(void) - Checks if method is abstract.' flags='130'/>
<tag menu='R' submenu='ReflectionMethod class' inserttext='ReflectionMethod::isConstructor()' hint='(PHP 5) public bool ReflectionMethod::isConstructor(void) - Checks if method is a constructor.' flags='130'/>
<tag menu='R' submenu='ReflectionMethod class' inserttext='ReflectionMethod::isDestructor()' hint='(PHP 5) public bool ReflectionMethod::isDestructor(void) - Checks if method is a destructor.' flags='130'/>
<tag menu='R' submenu='ReflectionMethod class' inserttext='ReflectionMethod::isFinal()' hint='(PHP 5) public bool ReflectionMethod::isFinal(void) - Checks if method is final.' flags='130'/>
<tag menu='R' submenu='ReflectionMethod class' inserttext='ReflectionMethod::isPrivate()' hint='(PHP 5) public bool ReflectionMethod::isPrivate(void) - Checks if method is private.' flags='130'/>
<tag menu='R' submenu='ReflectionMethod class' inserttext='ReflectionMethod::isProtected()' hint='(PHP 5) public bool ReflectionMethod::isProtected(void) - Checks if method is protected.' flags='130'/>
<tag menu='R' submenu='ReflectionMethod class' inserttext='ReflectionMethod::isPublic()' hint='(PHP 5) public bool ReflectionMethod::isPublic(void) - Checks if method is public.' flags='130'/>
<tag menu='R' submenu='ReflectionMethod class' inserttext='ReflectionMethod::isStatic()' hint='(PHP 5) public bool ReflectionMethod::isStatic(void) - Checks if method is static.' flags='130'/>
<tag menu='R' submenu='ReflectionMethod class' inserttext='ReflectionMethod::setAccessible(|)' hint='(PHP 5>=5.3.2) public void ReflectionMethod::setAccessible(bool $accessible) - Set method accessibility.' flags='130'/>
<tag menu='R' submenu='ReflectionObject class' inserttext='ReflectionObject::__construct(|)' hint='(PHP 5) ReflectionObject::__construct(object $argument) - Constructs a ReflectionObject.' flags='130'/>
<tag menu='R' submenu='ReflectionObject class' inserttext='ReflectionObject::export(|)' hint='(PHP 5) public static string ReflectionObject::export(string $argument [, bool $return]) - Export.' flags='130'/>
<tag menu='R' submenu='ReflectionParameter class' inserttext='ReflectionParameter::__clone()' hint='(PHP 5) final private void ReflectionParameter::__clone(void) - Clone.' flags='130'/>
<tag menu='R' submenu='ReflectionParameter class' inserttext='ReflectionParameter::__construct(|)' hint='(PHP 5) ReflectionParameter::__construct(string $function, string $parameter) - Construct.' flags='130'/>
<tag menu='R' submenu='ReflectionParameter class' inserttext='ReflectionParameter::__toString()' hint='(PHP 5) public string ReflectionParameter::__toString(void) - To string.' flags='130'/>
<tag menu='R' submenu='ReflectionParameter class' inserttext='ReflectionParameter::allowsNull()' hint='(PHP 5) public bool ReflectionParameter::allowsNull(void) - Checks if null is allowed.' flags='130'/>
<tag menu='R' submenu='ReflectionParameter class' inserttext='ReflectionParameter::export(|)' hint='(PHP 5) public static string ReflectionParameter::export(string $function, string $parameter [, bool $return]) - Exports.' flags='130'/>
<tag menu='R' submenu='ReflectionParameter class' inserttext='ReflectionParameter::getClass()' hint='(PHP 5) public ReflectionClass ReflectionParameter::getClass(void) - Get class.' flags='130'/>
<tag menu='R' submenu='ReflectionParameter class' inserttext='ReflectionParameter::getDeclaringClass()' hint='(PHP 5) public ReflectionClass ReflectionParameter::getDeclaringClass(void) - Gets declaring class.' flags='130'/>
<tag menu='R' submenu='ReflectionParameter class' inserttext='ReflectionParameter::getDeclaringFunction()' hint='(PHP 5>=5.2.3) public ReflectionFunction ReflectionParameter::getDeclaringFunction(void) - Gets declaring function.' flags='130'/>
<tag menu='R' submenu='ReflectionParameter class' inserttext='ReflectionParameter::getDefaultValue()' hint='(PHP 5>=5.0.3) public mixed ReflectionParameter::getDefaultValue(void) - Gets default parameter value.' flags='130'/>
<tag menu='R' submenu='ReflectionParameter class' inserttext='ReflectionParameter::getName()' hint='(PHP 5) public string ReflectionParameter::getName(void) - Gets parameter name.' flags='130'/>
<tag menu='R' submenu='ReflectionParameter class' inserttext='ReflectionParameter::getPosition()' hint='(PHP 5>=5.2.3) public int ReflectionParameter::getPosition(void) - Gets parameter position.' flags='130'/>
<tag menu='R' submenu='ReflectionParameter class' inserttext='ReflectionParameter::isArray()' hint='(PHP 5>=5.1.0) public bool ReflectionParameter::isArray(void) - Checks if parameter expects an array.' flags='130'/>
<tag menu='R' submenu='ReflectionParameter class' inserttext='ReflectionParameter::isDefaultValueAvailable()' hint='(PHP 5>=5.0.3) public bool ReflectionParameter::isDefaultValueAvailable(void) - Checks if a default value is available.' flags='130'/>
<tag menu='R' submenu='ReflectionParameter class' inserttext='ReflectionParameter::isOptional()' hint='(PHP 5>=5.0.3) public bool ReflectionParameter::isOptional(void) - Checks if optional.' flags='130'/>
<tag menu='R' submenu='ReflectionParameter class' inserttext='ReflectionParameter::isPassedByReference()' hint='(PHP 5) public bool ReflectionParameter::isPassedByReference(void) - Checks if passed by reference.' flags='130'/>
<tag menu='R' submenu='ReflectionProperty class' inserttext='ReflectionProperty::__clone()' hint='(PHP 5) final private void ReflectionProperty::__clone(void) - Clone.' flags='130'/>
<tag menu='R' submenu='ReflectionProperty class' inserttext='ReflectionProperty::__construct(|)' hint='(PHP 5) ReflectionProperty::__construct(mixed $class, string $name) - Construct a ReflectionProperty object.' flags='130'/>
<tag menu='R' submenu='ReflectionProperty class' inserttext='ReflectionProperty::__toString()' hint='(PHP 5) public string ReflectionProperty::__toString(void) - To string.' flags='130'/>
<tag menu='R' submenu='ReflectionProperty class' inserttext='ReflectionProperty::export(|)' hint='(PHP 5) public static string ReflectionProperty::export(mixed $class, string $name [, bool $return]) - Export.' flags='130'/>
<tag menu='R' submenu='ReflectionProperty class' inserttext='ReflectionProperty::getDeclaringClass()' hint='(PHP 5) public ReflectionClass ReflectionProperty::getDeclaringClass(void) - Gets declaring class.' flags='130'/>
<tag menu='R' submenu='ReflectionProperty class' inserttext='ReflectionProperty::getDocComment()' hint='(PHP 5>=5.1.0) public string ReflectionProperty::getDocComment(void) - Gets doc comment.' flags='130'/>
<tag menu='R' submenu='ReflectionProperty class' inserttext='ReflectionProperty::getModifiers()' hint='(PHP 5) public int ReflectionProperty::getModifiers(void) - Gets modifiers.' flags='130'/>
<tag menu='R' submenu='ReflectionProperty class' inserttext='ReflectionProperty::getName()' hint='(PHP 5) public string ReflectionProperty::getName(void) - Gets property name.' flags='130'/>
<tag menu='R' submenu='ReflectionProperty class' inserttext='ReflectionProperty::getValue(|)' hint='(PHP 5) public mixed ReflectionProperty::getValue([string $object]) - Gets value.' flags='130'/>
<tag menu='R' submenu='ReflectionProperty class' inserttext='ReflectionProperty::isDefault()' hint='(PHP 5) public bool ReflectionProperty::isDefault(void) - Checks if default value.' flags='130'/>
<tag menu='R' submenu='ReflectionProperty class' inserttext='ReflectionProperty::isPrivate()' hint='(PHP 5) public bool ReflectionProperty::isPrivate(void) - Checks if property is private.' flags='130'/>
<tag menu='R' submenu='ReflectionProperty class' inserttext='ReflectionProperty::isProtected()' hint='(PHP 5) public bool ReflectionProperty::isProtected(void) - Checks if property is protected.' flags='130'/>
<tag menu='R' submenu='ReflectionProperty class' inserttext='ReflectionProperty::isPublic()' hint='(PHP 5) public bool ReflectionProperty::isPublic(void) - Checks if property is public.' flags='130'/>
<tag menu='R' submenu='ReflectionProperty class' inserttext='ReflectionProperty::isStatic()' hint='(PHP 5) public bool ReflectionProperty::isStatic(void) - Checks if property is static.' flags='130'/>
<tag menu='R' submenu='ReflectionProperty class' inserttext='ReflectionProperty::setAccessible(|)' hint='(PHP 5>=5.3.0) public void ReflectionProperty::setAccessible(bool $accessible) - Set property accessibility.' flags='130'/>
<tag menu='R' submenu='ReflectionProperty class' inserttext='ReflectionProperty::setValue(|)' hint='(PHP 5) public void ReflectionProperty::setValue(object $object, mixed $value) - Set property value.' flags='130'/>
<tag menu='R' submenu='Reflector interface' inserttext='Reflector::__toString()' hint='(PHP 5) abstract public string Reflector::__toString(void) - To string.' flags='130'/>
<tag menu='R' submenu='Reflector interface' inserttext='Reflector::export()' hint='(PHP 5) abstract public static string Reflector::export(void) - Exports.' flags='130'/>
<tag menu='R' submenu='RegexIterator class' inserttext='RegexIterator::__construct(|)' hint='(PHP 5>=5.2.0) Create a new RegexIterator.' flags='130'/>
<tag menu='R' submenu='RegexIterator class' inserttext='RegexIterator::accept()' hint='(PHP 5>=5.2.0) public bool RegexIterator::accept(void) - Get accept status.' flags='130'/>
<tag menu='R' submenu='RegexIterator class' inserttext='RegexIterator::getFlags()' hint='(PHP 5>=5.2.0) public int RegexIterator::getFlags(void) - Get flags.' flags='130'/>
<tag menu='R' submenu='RegexIterator class' inserttext='RegexIterator::getMode()' hint='(PHP 5>=5.2.0) public int RegexIterator::getMode(void) - Returns operation mode.' flags='130'/>
<tag menu='R' submenu='RegexIterator class' inserttext='RegexIterator::getPregFlags()' hint='(PHP 5>=5.2.0) public int RegexIterator::getPregFlags(void) - Returns the regular expression flags.' flags='130'/>
<tag menu='R' submenu='RegexIterator class' inserttext='RegexIterator::setFlags(|)' hint='(PHP 5>=5.2.0) public void RegexIterator::setFlags(int $flags) - Sets the flags.' flags='130'/>
<tag menu='R' submenu='RegexIterator class' inserttext='RegexIterator::setMode(|)' hint='(PHP 5>=5.2.0) public void RegexIterator::setMode(int $mode) - Sets the operation mode.' flags='130'/>
<tag menu='R' submenu='RegexIterator class' inserttext='RegexIterator::setPregFlags(|)' hint='(PHP 5>=5.2.0) public void RegexIterator::setPregFlags(int $preg_flags) - Sets the regular expression flags.' flags='130'/>
<tag menu='S' submenu='SNMP' inserttext='snmp_get_quick_print()' hint="(PHP 4, PHP 5) bool snmp_get_quick_print(void) - Fetches the current value of the UCD library's quick_print setting." flags='130'/>
<tag menu='S' submenu='SNMP' inserttext='snmp_get_valueretrieval()' hint='(PHP 4>=4.3.3, PHP 5) int snmp_get_valueretrieval(void) - Return the method how the SNMP values will be returned.' flags='130'/>
<tag menu='S' submenu='SNMP' inserttext='snmp_read_mib(|)' hint='(PHP 5) bool snmp_read_mib(string $filename) - Reads and parses a MIB file into the active MIB tree.' flags='130'/>
<tag menu='S' submenu='SNMP' inserttext='snmp_set_enum_print(|)' hint='(PHP 4>=4.3.0, PHP 5) void snmp_set_enum_print(int $enum_print) - Return all values that are enums with their enum value instead of the raw integer.' flags='130'/>
<tag menu='S' submenu='SNMP' inserttext='snmp_set_oid_numeric_print(|)' hint='(PHP 4>=4.3.0, PHP 5) void snmp_set_oid_numeric_print(int $oid_numeric_print) - Return all objects including their respective object id within the specified one.' flags='130'/>
<tag menu='S' submenu='SNMP' inserttext='snmp_set_oid_output_format(|)' hint='(PHP 5>=5.2.0) void snmp_set_oid_output_format(int $oid_format) - Set the OID output format.' flags='130'/>
<tag menu='S' submenu='SNMP' inserttext='snmp_set_quick_print(|)' hint='(PHP 4, PHP 5) void snmp_set_quick_print(bool $quick_print) - Set the value of quick_print within the UCD SNMP library.' flags='130'/>
<tag menu='S' submenu='SNMP' inserttext='snmp_set_valueretrieval(|)' hint='(PHP 4>=4.3.3, PHP 5) void snmp_set_valueretrieval(int $method) - Specify the method how the SNMP values will be returned.' flags='130'/>
<tag menu='S' submenu='SNMP' inserttext='snmpget(|)' hint='(PHP 4, PHP 5) string snmpget(string $hostname, string $community, string $object_id [, int $timeout [, int $retries ]]) - Fetch an SNMP object.' flags='130'/>
<tag menu='S' submenu='SNMP' inserttext='snmpgetnext(|)' hint='(PHP 5) string snmpgetnext(string $host, string $community, string $object_id [, int $timeout [, int $retries ]]) - Fetch a SNMP object.' flags='130'/>
<tag menu='S' submenu='SNMP' inserttext='snmprealwalk(|)' hint='(PHP 4, PHP 5) array snmprealwalk(string $host, string $community, string $object_id [, int $timeout [, int $retries ]]) - Return all objects including their respective object ID within the specified one.' flags='130'/>
<tag menu='S' submenu='SNMP' inserttext='snmpset(|)' hint='(PHP 4, PHP 5) bool snmpset(string $hostname, string $community, string $object_id, string $type, mixed $value [, int $timeout [, int $retries ]]) - Set an SNMP object.' flags='130'/>
<tag menu='S' submenu='SNMP' inserttext='snmpwalk(|)' hint='(PHP 4, PHP 5) array snmpwalk(string $hostname, string $community, string $object_id [, int $timeout [, int $retries ]]) - Fetch all the SNMP objects from an agent.' flags='130'/>
<tag menu='S' submenu='SNMP' inserttext='snmpwalkoid(|)' hint='(PHP 4, PHP 5) array snmpwalkoid(string $hostname, string $community, string $object_id [, int $timeout [, int $retries ]]) - Query for a tree of information about a network entity.' flags='130'/>
<tag menu='S' submenu='SPL' inserttext='class_implements(|)' hint='(PHP 5>=5.1.0) array class_implements(mixed $class [, bool $autoload=true]) - Return the interfaces which are implemented by the given class.' flags='130'/>
<tag menu='S' submenu='SPL' inserttext='class_parents(|)' hint='(PHP 5>=5.1.0) array class_parents(mixed $class [, bool $autoload=true]) - Return the parent classes of the given class.' flags='130'/>
<tag menu='S' submenu='SPL' inserttext='iterator_apply(|)' hint='(PHP 5>=5.1.0) int iterator_apply(Traversable $iterator, callback $function [, array $args]) - Call a function for every element in an iterator.' flags='130'/>
<tag menu='S' submenu='SPL' inserttext='iterator_count(|)' hint='(PHP 5>=5.1.0) int iterator_count(Traversable $iterator) - Count the elements in an iterator.' flags='130'/>
<tag menu='S' submenu='SPL' inserttext='iterator_to_array(|)' hint='(PHP 5>=5.1.0) array iterator_to_array(Traversable $iterator [, bool $use_keys=true]) - Copy the iterator into an array.' flags='130'/>
<tag menu='S' submenu='SPL' inserttext='spl_autoload(|)' hint='(PHP 5>=5.1.2) void spl_autoload(string $class_name [, string $file_extensions=spl_autoload_extensions()]) - Default implementation for __autoload().' flags='130'/>
<tag menu='S' submenu='SPL' inserttext='spl_autoload_call(|)' hint='(PHP 5>=5.1.2) void spl_autoload_call(string $class_name) - Try all registered __autoload() function to load the requested class.' flags='130'/>
<tag menu='S' submenu='SPL' inserttext='spl_autoload_extensions(|)' hint='(PHP 5>=5.1.2) string spl_autoload_extensions([string $file_extensions]) - Register and return default file extensions for spl_autoload.' flags='130'/>
<tag menu='S' submenu='SPL' inserttext='spl_autoload_functions()' hint='(PHP 5>=5.1.2) array spl_autoload_functions(void) - Return all registered __autoload() functions.' flags='130'/>
<tag menu='S' submenu='SPL' inserttext='spl_autoload_register(|)' hint='(PHP 5>=5.1.2) bool spl_autoload_register([callback $autoload_function [, bool $throw=true [, bool $prepend=false ]]]) - Register given function as __autoload() implementation.' flags='130'/>
<tag menu='S' submenu='SPL' inserttext='spl_autoload_unregister(|)' hint='(PHP 5>=5.1.2) bool spl_autoload_unregister(mixed $autoload_function) - Unregister given function as __autoload() implementation.' flags='130'/>
<tag menu='S' submenu='SPL' inserttext='spl_classes()' hint='(PHP 5) array spl_classes(void) - Return available SPL classes.' flags='130'/>
<tag menu='S' submenu='SPL' inserttext='spl_object_hash(|)' hint='(PHP 5>=5.2.0) string spl_object_hash(object $obj) - Return hash id for given object.' flags='130'/>
<tag menu='S' submenu='SQLite-->>s - sqlite_has_m' inserttext='sqlite_array_query(|)' hint='(PHP 5, PECL sqlite>=1.0.0) array sqlite_array_query(resource $dbhandle, string $query [, int $result_type [, bool $decode_binary ]]) - Execute a query against a given database and returns an array.' flags='130'/>
<tag menu='S' submenu='SQLite-->>s - sqlite_has_m' inserttext='sqlite_busy_timeout(|)' hint='(PHP 5, PECL sqlite>=1.0.0) void sqlite_busy_timeout(resource $dbhandle, int $milliseconds) - Set busy timeout duration, or disable busy handlers.' flags='130'/>
<tag menu='S' submenu='SQLite-->>s - sqlite_has_m' inserttext='sqlite_changes(|)' hint='(PHP 5, PECL sqlite>=1.0.0) int sqlite_changes(resource $dbhandle) - Returns the number of rows that were changed by the most recent SQL statement.' flags='130'/>
<tag menu='S' submenu='SQLite-->>s - sqlite_has_m' inserttext='sqlite_close(|)' hint='(PHP 5, PECL sqlite>=1.0.0) void sqlite_close(resource $dbhandle) - Closes an open SQLite database.' flags='130'/>
<tag menu='S' submenu='SQLite-->>s - sqlite_has_m' inserttext='sqlite_column(|)' hint='(PHP 5, PECL sqlite>=1.0.0) mixed sqlite_column(resource $result, mixed $index_or_name [, bool $decode_binary=true]) - Fetches a column from the current row of a result set.' flags='130'/>
<tag menu='S' submenu='SQLite-->>s - sqlite_has_m' inserttext='sqlite_create_aggregate(|)' hint='(PHP 5, PECL sqlite>=1.0.0) void sqlite_create_aggregate(resource $dbhandle, string $function_name, callback $step_func, callback $finalize_func [, int $num_args=-1]) - Register an aggregating UDF for use in SQL statements.' flags='130'/>
<tag menu='S' submenu='SQLite-->>s - sqlite_has_m' inserttext='sqlite_create_function(|)' hint='(PHP 5, sqlite>=1.0.0) void sqlite_create_function(resource $dbhandle, string $function_name, callback $callback [, int $num_args=-1]) - Registers a "regular" User Defined Function for use in SQL statements.' flags='130'/>
<tag menu='S' submenu='SQLite-->>s - sqlite_has_m' inserttext='sqlite_current(|)' hint='(PHP 5, PECL sqlite>=1.0.0) array sqlite_current(resource $result [, int $result_type=SQLITE_BOTH [, bool $decode_binary=true ]]) - Fetches the current row from a result set as an array.' flags='130'/>
<tag menu='S' submenu='SQLite-->>s - sqlite_has_m' inserttext='sqlite_error_string(|)' hint='(PHP 5, PECL sqlite>=1.0.0) string sqlite_error_string(int $error_code) - Returns the textual description of an error code.' flags='130'/>
<tag menu='S' submenu='SQLite-->>s - sqlite_has_m' inserttext='sqlite_escape_string(|)' hint='(PHP 5, PECL sqlite>=1.0.0) string sqlite_escape_string(string $item) - Escapes a string for use as a query parameter.' flags='130'/>
<tag menu='S' submenu='SQLite-->>s - sqlite_has_m' inserttext='sqlite_exec(|)' hint='(PHP 5, PECL sqlite>=1.0.3) bool sqlite_exec(resource $dbhandle, string $query [, string &amp;$error_msg]) - Executes a result-less query against a given database.' flags='130'/>
<tag menu='S' submenu='SQLite-->>s - sqlite_has_m' inserttext='sqlite_factory(|)' hint='(PHP 5) SQLiteDatabase sqlite_factory(string $filename [, int $mode=0666 [, string &amp;$error_message ]]) - Opens an SQLite database and returns an SQLiteDatabase object.' flags='130'/>
<tag menu='S' submenu='SQLite-->>s - sqlite_has_m' inserttext='sqlite_fetch_all(|)' hint='(PHP 5, PECL sqlite>=1.0.0) array sqlite_fetch_all(resource $result [, int $result_type=SQLITE_BOTH [, bool $decode_binary=true ]]) - Fetches all rows from a result set as an array of arrays.' flags='130'/>
<tag menu='S' submenu='SQLite-->>s - sqlite_has_m' inserttext='sqlite_fetch_array(|)' hint='(PHP 5, PECL sqlite>=1.0.0) array sqlite_fetch_array(resource $result [, int $result_type=SQLITE_BOTH [, bool $decode_binary=true ]]) - Fetches the next row from a result set as an array.' flags='130'/>
<tag menu='S' submenu='SQLite-->>s - sqlite_has_m' inserttext='sqlite_fetch_column_types(|)' hint='(PHP 5) array sqlite_fetch_column_types(string $table_name, resource $dbhandle [, int $result_type]) - Return an array of column types from a particular table.' flags='130'/>
<tag menu='S' submenu='SQLite-->>s - sqlite_has_m' inserttext='sqlite_fetch_object(|)' hint='(PHP 5) object sqlite_fetch_object(resource $result [, string $class_name [, array $ctor_params [, bool $decode_binary=true ]]]) - Fetches the next row from a result set as an object.' flags='130'/>
<tag menu='S' submenu='SQLite-->>s - sqlite_has_m' inserttext='sqlite_fetch_single(|)' hint='(PHP 5, PECL sqlite>=1.0.1) string sqlite_fetch_single(resource $result [, bool $decode_binary=true]) - Fetches the first column of a result set as a string.' flags='130'/>
<tag menu='S' submenu='SQLite-->>s - sqlite_has_m' inserttext='sqlite_fetch_string(|)' hint='(PHP 5, PECL sqlite>=1.0.0) Alias of sqlite_fetch_single().' flags='130'/>
<tag menu='S' submenu='SQLite-->>s - sqlite_has_m' inserttext='sqlite_field_name(|)' hint='(PHP 5, PECL sqlite>=1.0.0) string sqlite_field_name(resource $result, int $field_index) - Returns the name of a particular field.' flags='130'/>
<tag menu='S' submenu='SQLite-->>s - sqlite_has_m' inserttext='sqlite_has_more(|)' hint='(PHP 5, PECL sqlite>=1.0.0) bool sqlite_has_more(resource $result) - Finds whether or not more rows are available.' flags='130'/>
<tag menu='S' submenu='SQLite-->>sqlite_has_p - s' inserttext='sqlite_has_prev(|)' hint='(PHP 5) bool sqlite_has_prev(resource $result) - Returns whether or not a previous row is available.' flags='130'/>
<tag menu='S' submenu='SQLite-->>sqlite_has_p - s' inserttext='sqlite_key(|)' hint='(PHP 5>=5.1.0) int sqlite_key(resource $result) - Returns the current row index.' flags='130'/>
<tag menu='S' submenu='SQLite-->>sqlite_has_p - s' inserttext='sqlite_last_error(|)' hint='(PHP 5, PECL sqlite>=1.0.0) int sqlite_last_error(resource $dbhandle) - Returns the error code of the last error for a database.' flags='130'/>
<tag menu='S' submenu='SQLite-->>sqlite_has_p - s' inserttext='sqlite_last_insert_rowid(|)' hint='(PHP 5, PECL sqlite>=1.0.0) int sqlite_last_insert_rowid(resource $dbhandle) - Returns the rowid of the most recently inserted row.' flags='130'/>
<tag menu='S' submenu='SQLite-->>sqlite_has_p - s' inserttext='sqlite_libencoding()' hint='(PHP 5, PECL sqlite>=1.0.0) string sqlite_libencoding(void) - Returns the encoding of the linked SQLite library.' flags='130'/>
<tag menu='S' submenu='SQLite-->>sqlite_has_p - s' inserttext='sqlite_libversion()' hint='(PHP 5, PECL sqlite>=1.0.0) string sqlite_libversion(void) - Returns the version of the linked SQLite library.' flags='130'/>
<tag menu='S' submenu='SQLite-->>sqlite_has_p - s' inserttext='sqlite_next(|)' hint='(PHP 5, PECL sqlite>=1.0.0) bool sqlite_next(resource $result) - Seek to the next row number.' flags='130'/>
<tag menu='S' submenu='SQLite-->>sqlite_has_p - s' inserttext='sqlite_num_fields(|)' hint='(PHP 5, PECL sqlite>=1.0.0) int sqlite_num_fields(resource $result) - Returns the number of fields in a result set.' flags='130'/>
<tag menu='S' submenu='SQLite-->>sqlite_has_p - s' inserttext='sqlite_num_rows(|)' hint='(PHP 5, PECL sqlite>=1.0.0) int sqlite_num_rows(resource $result) - Returns the number of rows in a buffered result set.' flags='130'/>
<tag menu='S' submenu='SQLite-->>sqlite_has_p - s' inserttext='sqlite_open(|)' hint='(PHP 5, PECL sqlite>=1.0.0) resource sqlite_open(string $filename [, int $mode=0666 [, string &amp;$error_message ]]) - Opens an SQLite database and create the database if it does not exist.' flags='130'/>
<tag menu='S' submenu='SQLite-->>sqlite_has_p - s' inserttext='sqlite_popen(|)' hint='(PHP 5, PECL sqlite>=1.0.0) resource sqlite_popen(string $filename [, int $mode=0666 [, string &amp;$error_message ]]) - Opens a persistent handle to an SQLite database and create the database if it does not exist.' flags='130'/>
<tag menu='S' submenu='SQLite-->>sqlite_has_p - s' inserttext='sqlite_prev(|)' hint='(PHP 5) bool sqlite_prev(resource $result) - Seek to the previous row number of a result set.' flags='130'/>
<tag menu='S' submenu='SQLite-->>sqlite_has_p - s' inserttext='sqlite_query(|)' hint='(PHP 5, PECL sqlite>=1.0.0) resource sqlite_query(resource $dbhandle, string $query [, int $result_type [, string &amp;$error_msg ]]) - Executes a query against a given database and returns a result handle.' flags='130'/>
<tag menu='S' submenu='SQLite-->>sqlite_has_p - s' inserttext='sqlite_rewind(|)' hint='(PHP 5, PECL sqlite>=1.0.0) bool sqlite_rewind(resource $result) - Seek to the first row number.' flags='130'/>
<tag menu='S' submenu='SQLite-->>sqlite_has_p - s' inserttext='sqlite_seek(|)' hint='(PHP 5, PECL sqlite>=1.0.0) bool sqlite_seek(resource $result, int $rownum) - Seek to a particular row number of a buffered result set.' flags='130'/>
<tag menu='S' submenu='SQLite-->>sqlite_has_p - s' inserttext='sqlite_single_query(|)' hint='(PHP 5, PECL sqlite>=1.0.1) array sqlite_single_query(resource $db, string $query [, bool $first_row_only [, bool $decode_binary ]]) - Executes a query and returns either an array for one single column or the value of the first row.' flags='130'/>
<tag menu='S' submenu='SQLite-->>sqlite_has_p - s' inserttext='sqlite_udf_decode_binary(|)' hint='(PHP 5, PECL sqlite>=1.0.0) string sqlite_udf_decode_binary(string $data) - Decode binary data passed as parameters to an UDF.' flags='130'/>
<tag menu='S' submenu='SQLite-->>sqlite_has_p - s' inserttext='sqlite_udf_encode_binary(|)' hint='(PHP 5, PECL sqlite>=1.0.0) string sqlite_udf_encode_binary(string $data) - Encode binary data before returning it from an UDF.' flags='130'/>
<tag menu='S' submenu='SQLite-->>sqlite_has_p - s' inserttext='sqlite_unbuffered_query(|)' hint='(PHP 5, PECL sqlite>=1.0.0) resource sqlite_unbuffered_query(resource $dbhandle, string $query [, int $result_type [, string &amp;$error_msg ]]) - Execute a query that does not prefetch and buffer all data.' flags='130'/>
<tag menu='S' submenu='SQLite-->>sqlite_has_p - s' inserttext='sqlite_valid(|)' hint='(PHP 5) bool sqlite_valid(resource $result) - Returns whether more rows are available.' flags='130'/>
<tag menu='S' submenu='SQLite3 class' inserttext='SQLite3::__construct(|)' hint='(PHP 5>=5.3.0) SQLite3::__construct(string $filename [, int $flags [, string $encryption_key ]]) - Instantiates an SQLite3 object and opens an SQLite 3 database.' flags='130'/>
<tag menu='S' submenu='SQLite3 class' inserttext='SQLite3::busyTimeout(|)' hint='(PHP 5>=5.3.3) public bool SQLite3::busyTimeout(integer $msecs) - Sets the busy connection handler.' flags='130'/>
<tag menu='S' submenu='SQLite3 class' inserttext='SQLite3::changes()' hint='(PHP 5>=5.3.0) public int SQLite3::changes(void) - Returns the number of database rows that were changed (or inserted or deleted) by the most recent SQL statement.' flags='130'/>
<tag menu='S' submenu='SQLite3 class' inserttext='SQLite3::close()' hint='(PHP 5>=5.3.0) public bool SQLite3::close(void) - Closes the database connection.' flags='130'/>
<tag menu='S' submenu='SQLite3 class' inserttext='SQLite3::createAggregate(|)' hint='(PHP 5>=5.3.0) public bool SQLite3::createAggregate(string $name, mixed $step_callback, mixed $final_callback [, int $argument_count=-1]) - Registers a PHP function for use as an SQL aggregate function.' flags='130'/>
<tag menu='S' submenu='SQLite3 class' inserttext='SQLite3::createFunction(|)' hint='(PHP 5>=5.3.0) public bool SQLite3::createFunction(string $name, mixed $callback [, int $argument_count=-1]) - Registers a PHP function for use as an SQL scalar function.' flags='130'/>
<tag menu='S' submenu='SQLite3 class' inserttext='SQLite3::escapeString(|)' hint='(PHP 5>=5.3.0) public string SQLite3::escapeString(string $value) - Returns a string that has been properly escaped.' flags='130'/>
<tag menu='S' submenu='SQLite3 class' inserttext='SQLite3::exec(|)' hint='(PHP 5>=5.3.0) public bool SQLite3::exec(string $query) - Executes a result-less query against a given database.' flags='130'/>
<tag menu='S' submenu='SQLite3 class' inserttext='SQLite3::lastErrorCode()' hint='(PHP 5>=5.3.0) public int SQLite3::lastErrorCode(void) - Returns the numeric result code of the most recent failed SQLite request.' flags='130'/>
<tag menu='S' submenu='SQLite3 class' inserttext='SQLite3::lastErrorMsg()' hint='(PHP 5>=5.3.0) public string SQLite3::lastErrorMsg(void) - Returns English text describing the most recent failed SQLite request.' flags='130'/>
<tag menu='S' submenu='SQLite3 class' inserttext='SQLite3::lastInsertRowID()' hint='(PHP 5>=5.3.0) public int SQLite3::lastInsertRowID(void) - Returns the row ID of the most recent INSERT into the database.' flags='130'/>
<tag menu='S' submenu='SQLite3 class' inserttext='SQLite3::loadExtension(|)' hint='(PHP 5>=5.3.0) public bool SQLite3::loadExtension(string $shared_library) - Attempts to load an SQLite extension library.' flags='130'/>
<tag menu='S' submenu='SQLite3 class' inserttext='SQLite3::open(|)' hint='(PHP 5>=5.3.0) public bool SQLite3::open(string $filename [, int $flags=SQLITE3_OPEN_READWRITE | SQLITE3_OPEN_CREATE [, string $encryption_key ]]) - Opens an SQLite database.' flags='130'/>
<tag menu='S' submenu='SQLite3 class' inserttext='SQLite3::prepare(|)' hint='(PHP 5>=5.3.0) public SQLite3Stmt SQLite3::prepare(string $query) - Prepares an SQL statement for execution.' flags='130'/>
<tag menu='S' submenu='SQLite3 class' inserttext='SQLite3::query(|)' hint='(PHP 5>=5.3.0) public SQLite3Result SQLite3::query(string $query) - Executes an SQL query.' flags='130'/>
<tag menu='S' submenu='SQLite3 class' inserttext='SQLite3::querySingle(|)' hint='(PHP 5>=5.3.0) public mixed SQLite3::querySingle(string $query [, bool $entire_row=false]) - Executes a query and returns a single result.' flags='130'/>
<tag menu='S' submenu='SQLite3 class' inserttext='SQLite3::version()' hint='(PHP 5>=5.3.0) public array SQLite3::version(void) - Returns the SQLite3 library version as a string constant and as a number.' flags='130'/>
<tag menu='S' submenu='SQLite3Result class' inserttext='SQLite3Result::columnName(|)' hint='(PHP 5>=5.3.0) public string SQLite3Result::columnName(int $column_number) - Returns the name of the nth column.' flags='130'/>
<tag menu='S' submenu='SQLite3Result class' inserttext='SQLite3Result::columnType(|)' hint='(PHP 5>=5.3.0) public int SQLite3Result::columnType(int $column_number) - Returns the type of the nth column.' flags='130'/>
<tag menu='S' submenu='SQLite3Result class' inserttext='SQLite3Result::fetchArray(|)' hint='(PHP 5>=5.3.0) public array SQLite3Result::fetchArray([int $mode=SQLITE3_BOTH]) - Fetches a result row as an associative or numerically indexed array or both.' flags='130'/>
<tag menu='S' submenu='SQLite3Result class' inserttext='SQLite3Result::finalize()' hint='(PHP 5>=5.3.0) public bool SQLite3Result::finalize(void) - Closes the result set.' flags='130'/>
<tag menu='S' submenu='SQLite3Result class' inserttext='SQLite3Result::numColumns()' hint='(PHP 5>=5.3.0) public int SQLite3Result::numColumns(void) - Returns the number of columns in the result set.' flags='130'/>
<tag menu='S' submenu='SQLite3Result class' inserttext='SQLite3Result::reset()' hint='(PHP 5>=5.3.0) public bool SQLite3Result::reset(void) - Resets the result set back to the first row.' flags='130'/>
<tag menu='S' submenu='SQLite3Stmt class' inserttext='SQLite3Stmt::bindParam(|)' hint='(PHP 5>=5.3.0) public bool SQLite3Stmt::bindParam(string $sql_param, mixed &amp;$param [, int $type]) - Binds a parameter to a statement variable.' flags='130'/>
<tag menu='S' submenu='SQLite3Stmt class' inserttext='SQLite3Stmt::bindValue(|)' hint='(PHP 5>=5.3.0) public bool SQLite3Stmt::bindValue(string $sql_param, mixed $value [, int $type]) - Binds the value of a parameter to a statement variable.' flags='130'/>
<tag menu='S' submenu='SQLite3Stmt class' inserttext='SQLite3Stmt::clear()' hint='(PHP 5>=5.3.0) public bool SQLite3Stmt::clear(void) - Clears all current bound parameters.' flags='130'/>
<tag menu='S' submenu='SQLite3Stmt class' inserttext='SQLite3Stmt::close()' hint='(PHP 5>=5.3.0) public bool SQLite3Stmt::close(void) - Closes the prepared statement.' flags='130'/>
<tag menu='S' submenu='SQLite3Stmt class' inserttext='SQLite3Stmt::execute()' hint='(PHP 5>=5.3.0) public SQLite3Result SQLite3Stmt::execute(void) - Executes a prepared statement and returns a result set object.' flags='130'/>
<tag menu='S' submenu='SQLite3Stmt class' inserttext='SQLite3Stmt::paramCount()' hint='(PHP 5>=5.3.0) public int SQLite3Stmt::paramCount(void) - Returns the number of parameters within the prepared statement.' flags='130'/>
<tag menu='S' submenu='SQLite3Stmt class' inserttext='SQLite3Stmt::reset()' hint='(PHP 5>=5.3.0) public bool SQLite3Stmt::reset(void) - Resets the prepared statement.' flags='130'/>
<tag menu='S' submenu='SeekableIterator interface' inserttext='SeekableIterator::seek(|)' hint='(PHP 5>=5.1.0) abstract public void SeekableIterator::seek(int $position) - Seeks to a position.' flags='130'/>
<tag menu='S' submenu='Semaphore' inserttext='ftok(|)' hint='(PHP 4>=4.2.0, PHP 5) int ftok(string $pathname, string $proj) - Convert a pathname and a project identifier to a System V IPC key.' flags='130'/>
<tag menu='S' submenu='Semaphore' inserttext='msg_get_queue(|)' hint='(PHP 4>=4.3.0, PHP 5) resource msg_get_queue(int $key [, int $perms]) - Create or attach to a message queue.' flags='130'/>
<tag menu='S' submenu='Semaphore' inserttext='msg_queue_exists(|)' hint='(PHP 5>=5.3.0) bool msg_queue_exists(int $key) - Check whether a message queue exists.' flags='130'/>
<tag menu='S' submenu='Semaphore' inserttext='msg_receive(|)' hint='(PHP 4>=4.3.0, PHP 5) bool msg_receive(resource $queue, int $desiredmsgtype, int &amp;$msgtype, int $maxsize, mixed &amp;$message [, bool $unserialize=true [, int $flags [, int &amp;$errorcode ]]]) - Receive a message from a message queue.' flags='130'/>
<tag menu='S' submenu='Semaphore' inserttext='msg_remove_queue(|)' hint='(PHP 4>=4.3.0, PHP 5) bool msg_remove_queue(resource $queue) - Destroy a message queue.' flags='130'/>
<tag menu='S' submenu='Semaphore' inserttext='msg_send(|)' hint='(PHP 4>=4.3.0, PHP 5) bool msg_send(resource $queue, int $msgtype, mixed $message [, bool $serialize [, bool $blocking [, int &amp;$errorcode ]]]) - Send a message to a message queue.' flags='130'/>
<tag menu='S' submenu='Semaphore' inserttext='msg_set_queue(|)' hint='(PHP 4>=4.3.0, PHP 5) bool msg_set_queue(resource $queue, array $data) - Set information in the message queue data structure.' flags='130'/>
<tag menu='S' submenu='Semaphore' inserttext='msg_stat_queue(|)' hint='(PHP 4>=4.3.0, PHP 5) array msg_stat_queue(resource $queue) - Returns information from the message queue data structure.' flags='130'/>
<tag menu='S' submenu='Semaphore' inserttext='sem_acquire(|)' hint='(PHP 4, PHP 5) bool sem_acquire(resource $sem_identifier) - Acquire a semaphore.' flags='130'/>
<tag menu='S' submenu='Semaphore' inserttext='sem_get(|)' hint='(PHP 4, PHP 5) resource sem_get(int $key [, int $max_acquire=1 [, int $perm=0666 [, int $auto_release=1 ]]]) - Get a semaphore id.' flags='130'/>
<tag menu='S' submenu='Semaphore' inserttext='sem_release(|)' hint='(PHP 4, PHP 5) bool sem_release(resource $sem_identifier) - Release a semaphore.' flags='130'/>
<tag menu='S' submenu='Semaphore' inserttext='sem_remove(|)' hint='(PHP 4>=4.1.0, PHP 5) bool sem_remove(resource $sem_identifier) - Remove a semaphore.' flags='130'/>
<tag menu='S' submenu='Semaphore' inserttext='shm_attach(|)' hint='(PHP 4, PHP 5) resource shm_attach(int $key [, int $memsize [, int $perm ]]) - Creates or open a shared memory segment.' flags='130'/>
<tag menu='S' submenu='Semaphore' inserttext='shm_detach(|)' hint='(PHP 4, PHP 5) bool shm_detach(resource $shm_identifier) - Disconnects from shared memory segment.' flags='130'/>
<tag menu='S' submenu='Semaphore' inserttext='shm_get_var(|)' hint='(PHP 4, PHP 5) mixed shm_get_var(resource $shm_identifier, int $variable_key) - Returns a variable from shared memory.' flags='130'/>
<tag menu='S' submenu='Semaphore' inserttext='shm_has_var(|)' hint='(PHP 5>=5.3.0) bool shm_has_var(resource $shm_identifier, int $variable_key) - Check whether a specific entry exists.' flags='130'/>
<tag menu='S' submenu='Semaphore' inserttext='shm_put_var(|)' hint='(PHP 4, PHP 5) bool shm_put_var(resource $shm_identifier, int $variable_key, mixed $variable) - Inserts or updates a variable in shared memory.' flags='130'/>
<tag menu='S' submenu='Semaphore' inserttext='shm_remove(|)' hint='(PHP 4, PHP 5) bool shm_remove(resource $shm_identifier) - Removes shared memory from Unix systems.' flags='130'/>
<tag menu='S' submenu='Semaphore' inserttext='shm_remove_var(|)' hint='(PHP 4, PHP 5) bool shm_remove_var(resource $shm_identifier, int $variable_key) - Removes a variable from shared memory.' flags='130'/>
<tag menu='S' submenu='Serializable interface' inserttext='Serializable::serialize()' hint='(PHP 5>=5.1.0) abstract public string Serializable::serialize(void) - String representation of object.' flags='130'/>
<tag menu='S' submenu='Serializable interface' inserttext='Serializable::unserialize(|)' hint='(PHP 5>=5.1.0) abstract public mixed Serializable::unserialize(string $serialized) - Constructs the object.' flags='130'/>
<tag menu='S' submenu='Session' inserttext='session_cache_expire(|)' hint='(PHP 4>=4.2.0, PHP 5) int session_cache_expire([string $new_cache_expire]) - Return current cache expire.' flags='130'/>
<tag menu='S' submenu='Session' inserttext='session_cache_limiter(|)' hint='(PHP 4>=4.0.3, PHP 5) string session_cache_limiter([string $cache_limiter]) - Get and/or set the current cache limiter.' flags='130'/>
<tag menu='S' submenu='Session' inserttext='session_commit(|)' hint='(PHP 4>=4.4.0, PHP 5) Alias of session_write_close().' flags='130'/>
<tag menu='S' submenu='Session' inserttext='session_decode(|)' hint='(PHP 4, PHP 5) bool session_decode(string $data) - Decodes session data from a string.' flags='130'/>
<tag menu='S' submenu='Session' inserttext='session_destroy()' hint='(PHP 4, PHP 5) bool session_destroy(void) - Destroys all data registered to a session.' flags='130'/>
<tag menu='S' submenu='Session' inserttext='session_encode()' hint='(PHP 4, PHP 5) string session_encode(void) - Encodes the current session data as a string.' flags='130'/>
<tag menu='S' submenu='Session' inserttext='session_get_cookie_params()' hint='(PHP 4, PHP 5) array session_get_cookie_params(void) - Get the session cookie parameters.' flags='130'/>
<tag menu='S' submenu='Session' inserttext='session_id(|)' hint='(PHP 4, PHP 5) string session_id([string $id]) - Get and/or set the current session id.' flags='130'/>
<tag menu='S' submenu='Session' inserttext='session_is_registered(|)' hint='(PHP 4, PHP 5) bool session_is_registered(string $name) - Find out whether a global variable is registered in a session.' flags='130'/>
<tag menu='S' submenu='Session' inserttext='session_module_name(|)' hint='(PHP 4, PHP 5) string session_module_name([string $module]) - Get and/or set the current session module.' flags='130'/>
<tag menu='S' submenu='Session' inserttext='session_name(|)' hint='(PHP 4, PHP 5) string session_name([string $name]) - Get and/or set the current session name.' flags='130'/>
<tag menu='S' submenu='Session' inserttext='session_regenerate_id(|)' hint='(PHP 4>=4.3.2, PHP 5) bool session_regenerate_id([bool $delete_old_session=false]) - Update the current session id with a newly generated one.' flags='130'/>
<tag menu='S' submenu='Session' inserttext='session_register(|)' hint='(PHP 4, PHP 5) bool session_register(mixed $name [, mixed $...]) - Register one or more global variables with the current session.' flags='130'/>
<tag menu='S' submenu='Session' inserttext='session_save_path(|)' hint='(PHP 4, PHP 5) string session_save_path([string $path]) - Get and/or set the current session save path.' flags='130'/>
<tag menu='S' submenu='Session' inserttext='session_set_cookie_params(|)' hint='(PHP 4, PHP 5) void session_set_cookie_params(int $lifetime [, string $path [, string $domain [, bool $secure=false [, bool $httponly=false ]]]]) - Set the session cookie parameters.' flags='130'/>
<tag menu='S' submenu='Session' inserttext='session_set_save_handler(|)' hint='(PHP 4, PHP 5) bool session_set_save_handler(callback $open, callback $close, callback $read, callback $write, callback $destroy, callback $gc) - Sets user-level session storage functions.' flags='130'/>
<tag menu='S' submenu='Session' inserttext='session_start()' hint='(PHP 4, PHP 5) bool session_start(void) - Initialize session data.' flags='130'/>
<tag menu='S' submenu='Session' inserttext='session_unregister(|)' hint='(PHP 4, PHP 5) bool session_unregister(string $name) - Unregister a global variable from the current session.' flags='130'/>
<tag menu='S' submenu='Session' inserttext='session_unset()' hint='(PHP 4, PHP 5) void session_unset(void) - Free all session variables.' flags='130'/>
<tag menu='S' submenu='Session' inserttext='session_write_close()' hint='(PHP 4>=4.0.4, PHP 5) void session_write_close(void) - Write session data and end session.' flags='130'/>
<tag menu='S' submenu='Shared Memory' inserttext='shmop_close(|)' hint='(PHP 4>=4.0.4, PHP 5) void shmop_close(int $shmid) - Close shared memory block.' flags='130'/>
<tag menu='S' submenu='Shared Memory' inserttext='shmop_delete(|)' hint='(PHP 4>=4.0.4, PHP 5) bool shmop_delete(int $shmid) - Delete shared memory block.' flags='130'/>
<tag menu='S' submenu='Shared Memory' inserttext='shmop_open(|)' hint='(PHP 4>=4.0.4, PHP 5) int shmop_open(int $key, string $flags, int $mode, int $size) - Create or open shared memory block.' flags='130'/>
<tag menu='S' submenu='Shared Memory' inserttext='shmop_read(|)' hint='(PHP 4>=4.0.4, PHP 5) string shmop_read(int $shmid, int $start, int $count) - Read data from shared memory block.' flags='130'/>
<tag menu='S' submenu='Shared Memory' inserttext='shmop_write(|)' hint='(PHP 4>=4.0.4, PHP 5) int shmop_write(int $shmid, string $data, int $offset) - Write data into shared memory block.' flags='130'/>
<tag menu='S' submenu='SimpleXML' inserttext='simplexml_import_dom(|)' hint='(PHP 5) SimpleXMLElement simplexml_import_dom(DOMNode $node [, string $class_name="SimpleXMLElement"]) - Get a SimpleXMLElement object from a DOM node.' flags='130'/>
<tag menu='S' submenu='SimpleXML' inserttext='simplexml_load_file(|)' hint='(PHP 5) object simplexml_load_file(string $filename [, string $class_name="SimpleXMLElement" [, int $options=0 [, string $ns [, bool $is_prefix=false ]]]]) - Interprets an XML file into an object.' flags='130'/>
<tag menu='S' submenu='SimpleXML' inserttext='simplexml_load_string(|)' hint='(PHP 5) object simplexml_load_string(string $data [, string $class_name="SimpleXMLElement" [, int $options=0 [, string $ns [, bool $is_prefix=false ]]]]) - Interprets a string of XML into an object.' flags='130'/>
<tag menu='S' submenu='SimpleXMLElement class' inserttext='SimpleXMLElement::__construct(|)' hint='(PHP 5>=5.0.1) Creates a new SimpleXMLElement object.' flags='130'/>
<tag menu='S' submenu='SimpleXMLElement class' inserttext='SimpleXMLElement::addAttribute(|)' hint='(PHP 5>=5.1.3) void SimpleXMLElement::addAttribute(string $name, string $value [, string $namespace]) - Adds an attribute to the SimpleXML element.' flags='130'/>
<tag menu='S' submenu='SimpleXMLElement class' inserttext='SimpleXMLElement::addChild(|)' hint='(PHP 5>=5.1.3) SimpleXMLElement SimpleXMLElement::addChild(string $name [, string $value [, string $namespace ]]) - Adds a child element to the XML node.' flags='130'/>
<tag menu='S' submenu='SimpleXMLElement class' inserttext='SimpleXMLElement::asXML(|)' hint='(PHP 5>=5.0.1) mixed SimpleXMLElement::asXML([string $filename]) - Return a well-formed XML string based on SimpleXML element.' flags='130'/>
<tag menu='S' submenu='SimpleXMLElement class' inserttext='SimpleXMLElement::attributes(|)' hint="(PHP 5>=5.0.1) SimpleXMLElement SimpleXMLElement::attributes([string $ns [, bool $is_prefix ]]) - Identifies an element's attributes." flags='130'/>
<tag menu='S' submenu='SimpleXMLElement class' inserttext='SimpleXMLElement::children(|)' hint='(PHP 5>=5.0.1) SimpleXMLElement SimpleXMLElement::children([string $ns [, bool $is_prefix=false ]]) - Finds children of given node.' flags='130'/>
<tag menu='S' submenu='SimpleXMLElement class' inserttext='SimpleXMLElement::count()' hint='(PHP 5>=5.3.0) integer SimpleXMLElement::count(void) - Counts the children of an element.' flags='130'/>
<tag menu='S' submenu='SimpleXMLElement class' inserttext='SimpleXMLElement::getDocNamespaces(|)' hint='(PHP 5>=5.1.2) array SimpleXMLElement::getDocNamespaces([bool $recursive]) - Returns namespaces declared in document.' flags='130'/>
<tag menu='S' submenu='SimpleXMLElement class' inserttext='SimpleXMLElement::getName()' hint='(PHP 5>=5.1.3) string SimpleXMLElement::getName(void) - Gets the name of the XML element.' flags='130'/>
<tag menu='S' submenu='SimpleXMLElement class' inserttext='SimpleXMLElement::getNamespaces(|)' hint='(PHP 5>=5.1.2) array SimpleXMLElement::getNamespaces([bool $recursive]) - Returns namespaces used in document.' flags='130'/>
<tag menu='S' submenu='SimpleXMLElement class' inserttext='SimpleXMLElement::registerXPathNamespace(|)' hint='(PHP 5>=5.2.0) bool SimpleXMLElement::registerXPathNamespace(string $prefix, string $ns) - Creates a prefix/ns context for the next XPath query.' flags='130'/>
<tag menu='S' submenu='SimpleXMLElement class' inserttext='SimpleXMLElement::xpath(|)' hint='(PHP 5>=5.2.0) array SimpleXMLElement::xpath(string $path) - Runs XPath query on XML data.' flags='130'/>
<tag menu='S' submenu='SimpleXMLIterator class' inserttext='SimpleXMLIterator::current()' hint='(PHP 5>=5.1.0) public mixed SimpleXMLIterator::current(void) - Returns the current element.' flags='130'/>
<tag menu='S' submenu='SimpleXMLIterator class' inserttext='SimpleXMLIterator::getChildren()' hint='(PHP 5>=5.1.0) object SimpleXMLIterator::getChildren(void) - Returns the sub-elements of the current element.' flags='130'/>
<tag menu='S' submenu='SimpleXMLIterator class' inserttext='SimpleXMLIterator::hasChildren()' hint='(PHP 5>=5.1.0) bool SimpleXMLIterator::hasChildren(void) - Checks whether the current element has sub elements.' flags='130'/>
<tag menu='S' submenu='SimpleXMLIterator class' inserttext='SimpleXMLIterator::key()' hint='(PHP 5>=5.1.0) mixed SimpleXMLIterator::key(void) - Return current key.' flags='130'/>
<tag menu='S' submenu='SimpleXMLIterator class' inserttext='SimpleXMLIterator::next()' hint='(PHP 5>=5.1.0) void SimpleXMLIterator::next(void) - Move to next element.' flags='130'/>
<tag menu='S' submenu='SimpleXMLIterator class' inserttext='SimpleXMLIterator::rewind()' hint='(PHP 5>=5.1.0) void SimpleXMLIterator::rewind(void) - Rewind to the first element.' flags='130'/>
<tag menu='S' submenu='SimpleXMLIterator class' inserttext='SimpleXMLIterator::valid()' hint='(PHP 5>=5.1.0) bool SimpleXMLIterator::valid(void) - Check whether the current element is valid.' flags='130'/>
<tag menu='S' submenu='SoapClient class' inserttext='SoapClient::SoapClient(|)' hint='(PHP 5>=5.0.1) SoapClient::SoapClient(mixed $wsdl [, array $options]) - SoapClient constructor.' flags='130'/>
<tag menu='S' submenu='SoapClient class' inserttext='SoapClient::__call(|)' hint='(PHP 5>=5.0.1) public mixed SoapClient::__call(string $function_name, string $arguments) - Calls a SOAP function (deprecated).' flags='130'/>
<tag menu='S' submenu='SoapClient class' inserttext='SoapClient::__construct(|)' hint='(PHP 5>=5.0.1) SoapClient::SoapClient(mixed $wsdl [, array $options]) - SoapClient constructor.' flags='130'/>
<tag menu='S' submenu='SoapClient class' inserttext='SoapClient::__doRequest(|)' hint='(PHP 5>=5.0.1) public string SoapClient::__doRequest(string $request, string $location, string $action, int $version [, int $one_way=0]) - Performs a SOAP request.' flags='130'/>
<tag menu='S' submenu='SoapClient class' inserttext='SoapClient::__getFunctions()' hint='(PHP 5>=5.0.1) public array SoapClient::__getFunctions(void) - Returns list of available SOAP functions.' flags='130'/>
<tag menu='S' submenu='SoapClient class' inserttext='SoapClient::__getLastRequest()' hint='(PHP 5>=5.0.1) public string SoapClient::__getLastRequest(void) - Returns last SOAP request.' flags='130'/>
<tag menu='S' submenu='SoapClient class' inserttext='SoapClient::__getLastRequestHeaders()' hint='(PHP 5>=5.0.1) public string SoapClient::__getLastRequestHeaders(void) - Returns the SOAP headers from the last request.' flags='130'/>
<tag menu='S' submenu='SoapClient class' inserttext='SoapClient::__getLastResponse()' hint='(PHP 5>=5.0.1) public string SoapClient::__getLastResponse(void) - Returns last SOAP response.' flags='130'/>
<tag menu='S' submenu='SoapClient class' inserttext='SoapClient::__getLastResponseHeaders()' hint='(PHP 5>=5.0.1) public string SoapClient::__getLastResponseHeaders(void) - Returns the SOAP headers from the last response.' flags='130'/>
<tag menu='S' submenu='SoapClient class' inserttext='SoapClient::__getTypes()' hint='(PHP 5>=5.0.1) public array SoapClient::__getTypes(void) - Returns a list of SOAP types.' flags='130'/>
<tag menu='S' submenu='SoapClient class' inserttext='SoapClient::__setCookie(|)' hint='(PHP 5>=5.0.4) public void SoapClient::__setCookie(string $name [, string $value]) - The __setCookie purpose.' flags='130'/>
<tag menu='S' submenu='SoapClient class' inserttext='SoapClient::__setLocation(|)' hint='(PHP 5>=5.0.1) public string SoapClient::__setLocation([string $new_location]) - Sets the location of the Web service to use.' flags='130'/>
<tag menu='S' submenu='SoapClient class' inserttext='SoapClient::__setSoapHeaders(|)' hint='(PHP 5>=5.0.5) public bool SoapClient::__setSoapHeaders([mixed $soapheaders]) - Sets SOAP headers for subsequent calls.' flags='130'/>
<tag menu='S' submenu='SoapClient class' inserttext='SoapClient::__soapCall(|)' hint='(PHP 5>=5.0.1) public mixed SoapClient::__soapCall(string $function_name, array $arguments [, array $options [, mixed $input_headers [, array &amp;$output_headers ]]]) - Calls a SOAP function.' flags='130'/>
<tag menu='S' submenu='SoapFault class' inserttext='SoapFault::SoapFault(|)' hint='(PHP 5>=5.0.1) SoapFault::SoapFault(string $faultcode, string $faultstring [, string $faultactor [, string $detail [, string $faultname [, string $headerfault ]]]]) - SoapFault constructor.' flags='130'/>
<tag menu='S' submenu='SoapFault class' inserttext='SoapFault::__construct(|)' hint='(PHP 5>=5.0.1) SoapFault::__construct(string $faultcode, string $faultstring [, string $faultactor [, string $detail [, string $faultname [, string $headerfault ]]]]) - SoapFault constructor.' flags='130'/>
<tag menu='S' submenu='SoapFault class' inserttext='SoapFault::__toString()' hint='(PHP 5>=5.0.1) public string SoapFault::__toString(void) - Obtain a string representation of a SoapFault.' flags='130'/>
<tag menu='S' submenu='SoapHeader class' inserttext='SoapHeader::SoapHeader(|)' hint='(PHP 5>=5.0.1) SoapHeader::SoapHeader(string $namespace, string $name [, mixed $data [, bool $mustunderstand [, string $actor ]]]) - SoapHeader constructor.' flags='130'/>
<tag menu='S' submenu='SoapHeader class' inserttext='SoapHeader::__construct(|)' hint='(PHP 5>=5.0.1) SoapHeader::__construct(string $namespace, string $name [, mixed $data [, bool $mustunderstand [, string $actor ]]]) - SoapHeader constructor.' flags='130'/>
<tag menu='S' submenu='SoapParam class' inserttext='SoapParam::SoapParam(|)' hint='(PHP 5>=5.0.1) SoapParam::SoapParam(mixed $data, string $name) - SoapParam constructor.' flags='130'/>
<tag menu='S' submenu='SoapParam class' inserttext='SoapParam::__construct(|)' hint='(PHP 5>=5.0.1) SoapParam::__construct(mixed $data, string $name) - SoapParam constructor.' flags='130'/>
<tag menu='S' submenu='SoapServer class' inserttext='SoapServer::SoapServer(|)' hint='(PHP 5>=5.0.1) SoapServer::SoapServer(mixed $wsdl [, array $options]) - SoapServer constructor.' flags='130'/>
<tag menu='S' submenu='SoapServer class' inserttext='SoapServer::__construct(|)' hint='(PHP 5>=5.0.1) SoapServer::__construct(mixed $wsdl [, array $options]) - SoapServer constructor.' flags='130'/>
<tag menu='S' submenu='SoapServer class' inserttext='SoapServer::addFunction(|)' hint='(PHP 5>=5.0.1) public void SoapServer::addFunction(mixed $functions) - Adds one or more functions to handle SOAP requests.' flags='130'/>
<tag menu='S' submenu='SoapServer class' inserttext='SoapServer::addSoapHeader(|)' hint='(PHP 5>=5.0.1) public void SoapServer::addSoapHeader(SoapHeader $object) - Add a SOAP header to the response.' flags='130'/>
<tag menu='S' submenu='SoapServer class' inserttext='SoapServer::fault(|)' hint='(PHP 5>=5.0.1) public void SoapServer::fault(string $code, string $string [, string $actor [, string $details [, string $name ]]]) - Issue SoapServer fault indicating an error.' flags='130'/>
<tag menu='S' submenu='SoapServer class' inserttext='SoapServer::getFunctions()' hint='(PHP 5>=5.0.1) public array SoapServer::getFunctions(void) - Returns list of defined functions.' flags='130'/>
<tag menu='S' submenu='SoapServer class' inserttext='SoapServer::handle(|)' hint='(PHP 5>=5.0.1) public void SoapServer::handle([string $soap_request]) - Handles a SOAP request.' flags='130'/>
<tag menu='S' submenu='SoapServer class' inserttext='SoapServer::setClass(|)' hint='(PHP 5>=5.0.1) public void SoapServer::setClass(string $class_name [, string $args]) - Sets the class which handles SOAP requests.' flags='130'/>
<tag menu='S' submenu='SoapServer class' inserttext='SoapServer::setObject(|)' hint='(PHP 5>=5.2.0) public void SoapServer::setObject(string $object) - Sets the object which will be used to handle SOAP requests.' flags='130'/>
<tag menu='S' submenu='SoapServer class' inserttext='SoapServer::setPersistence(|)' hint='(PHP 5>=5.1.2) public void SoapServer::setPersistence(string $mode) - Sets SoapServer persistence mode.' flags='130'/>
<tag menu='S' submenu='SoapVar class' inserttext='SoapVar::SoapVar(|)' hint='(PHP 5>=5.0.1) SoapVar::SoapVar(string $data, string $encoding [, string $type_name [, string $type_namespace [, string $node_name [, string $node_namespace ]]]]) - SoapVar constructor.' flags='130'/>
<tag menu='S' submenu='SoapVar class' inserttext='SoapVar::__construct(|)' hint='(PHP 5>=5.0.1) SoapVar::__construct(string $data, string $encoding [, string $type_name [, string $type_namespace [, string $node_name [, string $node_namespace ]]]]) - SoapVar constructor.' flags='130'/>
<tag menu='S' submenu='Socket' inserttext='socket_accept(|)' hint='(PHP 4>=4.1.0, PHP 5) resource socket_accept(resource $socket) - Accepts a connection on a socket.' flags='130'/>
<tag menu='S' submenu='Socket' inserttext='socket_bind(|)' hint='(PHP 4>=4.1.0, PHP 5) bool socket_bind(resource $socket, string $address [, int $port=0]) - Binds a name to a socket.' flags='130'/>
<tag menu='S' submenu='Socket' inserttext='socket_clear_error(|)' hint='(PHP 4>=4.2.0, PHP 5) void socket_clear_error([resource $socket]) - Clears the error on the socket or the last error code.' flags='130'/>
<tag menu='S' submenu='Socket' inserttext='socket_close(|)' hint='(PHP 4>=4.1.0, PHP 5) void socket_close(resource $socket) - Closes a socket resource.' flags='130'/>
<tag menu='S' submenu='Socket' inserttext='socket_connect(|)' hint='(PHP 4>=4.1.0, PHP 5) bool socket_connect(resource $socket, string $address [, int $port=0]) - Initiates a connection on a socket.' flags='130'/>
<tag menu='S' submenu='Socket' inserttext='socket_create(|)' hint='(PHP 4>=4.1.0, PHP 5) resource socket_create(int $domain, int $type, int $protocol) - Create a socket (endpoint for communication).' flags='130'/>
<tag menu='S' submenu='Socket' inserttext='socket_create_listen(|)' hint='(PHP 4>=4.1.0, PHP 5) resource socket_create_listen(int $port [, int $backlog=128]) - Opens a socket on port to accept connections.' flags='130'/>
<tag menu='S' submenu='Socket' inserttext='socket_create_pair(|)' hint='(PHP 4>=4.1.0, PHP 5) bool socket_create_pair(int $domain, int $type, int $protocol, array &amp;$fd) - Creates a pair of indistinguishable sockets and stores them in an array.' flags='130'/>
<tag menu='S' submenu='Socket' inserttext='socket_get_option(|)' hint='(PHP 4>=4.3.0, PHP 5) mixed socket_get_option(resource $socket, int $level, int $optname) - Gets socket options for the socket.' flags='130'/>
<tag menu='S' submenu='Socket' inserttext='socket_getpeername(|)' hint='(PHP 4>=4.1.0, PHP 5) bool socket_getpeername(resource $socket, string &amp;$address [, int &amp;$port]) - Queries the remote side of the given socket which may either result in host/port or in a Unix filesystem path, dependent on its type.' flags='130'/>
<tag menu='S' submenu='Socket' inserttext='socket_getsockname(|)' hint='(PHP 4>=4.1.0, PHP 5) bool socket_getsockname(resource $socket, string &amp;$addr [, int &amp;$port]) - Queries the local side of the given socket which may either result in host/port or in a Unix filesystem path, dependent on its type.' flags='130'/>
<tag menu='S' submenu='Socket' inserttext='socket_last_error(|)' hint='(PHP 4>=4.1.0, PHP 5) int socket_last_error([resource $socket]) - Returns the last error on the socket.' flags='130'/>
<tag menu='S' submenu='Socket' inserttext='socket_listen(|)' hint='(PHP 4>=4.1.0, PHP 5) bool socket_listen(resource $socket [, int $backlog=0]) - Listens for a connection on a socket.' flags='130'/>
<tag menu='S' submenu='Socket' inserttext='socket_read(|)' hint='(PHP 4>=4.1.0, PHP 5) string socket_read(resource $socket, int $length [, int $type=PHP_BINARY_READ]) - Reads a maximum of length bytes from a socket.' flags='130'/>
<tag menu='S' submenu='Socket' inserttext='socket_recv(|)' hint='(PHP 4>=4.1.0, PHP 5) int socket_recv(resource $socket, string &amp;$buf, int $len, int $flags) - Receives data from a connected socket.' flags='130'/>
<tag menu='S' submenu='Socket' inserttext='socket_recvfrom(|)' hint='(PHP 4>=4.1.0, PHP 5) int socket_recvfrom(resource $socket, string &amp;$buf, int $len, int $flags, string &amp;$name [, int &amp;$port]) - Receives data from a socket whether or not it is connection-oriented.' flags='130'/>
<tag menu='S' submenu='Socket' inserttext='socket_select(|)' hint='(PHP 4>=4.1.0, PHP 5) int socket_select(array &amp;$read, array &amp;$write, array &amp;$except, int $tv_sec [, int $tv_usec=0]) - Runs the select() system call on the given arrays of sockets with a specified timeout.' flags='130'/>
<tag menu='S' submenu='Socket' inserttext='socket_send(|)' hint='(PHP 4>=4.1.0, PHP 5) int socket_send(resource $socket, string $buf, int $len, int $flags) - Sends data to a connected socket.' flags='130'/>
<tag menu='S' submenu='Socket' inserttext='socket_sendto(|)' hint='(PHP 4>=4.1.0, PHP 5) int socket_sendto(resource $socket, string $buf, int $len, int $flags, string $addr [, int $port=0]) - Sends a message to a socket, whether it is connected or not.' flags='130'/>
<tag menu='S' submenu='Socket' inserttext='socket_set_block(|)' hint='(PHP 4>=4.2.0, PHP 5) bool socket_set_block(resource $socket) - Sets blocking mode on a socket resource.' flags='130'/>
<tag menu='S' submenu='Socket' inserttext='socket_set_nonblock(|)' hint='(PHP 4>=4.1.0, PHP 5) bool socket_set_nonblock(resource $socket) - Sets nonblocking mode for file descriptor fd.' flags='130'/>
<tag menu='S' submenu='Socket' inserttext='socket_set_option(|)' hint='(PHP 4>=4.3.0, PHP 5) bool socket_set_option(resource $socket, int $level, int $optname, mixed $optval) - Sets socket options for the socket.' flags='130'/>
<tag menu='S' submenu='Socket' inserttext='socket_shutdown(|)' hint='(PHP 4>=4.1.0, PHP 5) bool socket_shutdown(resource $socket [, int $how=2]) - Shuts down a socket for receiving, sending, or both.' flags='130'/>
<tag menu='S' submenu='Socket' inserttext='socket_strerror(|)' hint='(PHP 4>=4.1.0, PHP 5) string socket_strerror(int $errno) - Return a string describing a socket error.' flags='130'/>
<tag menu='S' submenu='Socket' inserttext='socket_write(|)' hint='(PHP 4>=4.1.0, PHP 5) int socket_write(resource $socket, string $buffer [, int $length=0]) - Write to a socket.' flags='130'/>
<tag menu='S' submenu='Stream-->>s - stream_get_t' inserttext='set_socket_blocking(|)' hint='(PHP 4, PHP 5) Alias of stream_set_blocking().' flags='130'/>
<tag menu='S' submenu='Stream-->>s - stream_get_t' inserttext='stream_bucket_append(|)' hint='(PHP 5) void stream_bucket_append(resource $brigade, resource $bucket) - Append bucket to brigade.' flags='130'/>
<tag menu='S' submenu='Stream-->>s - stream_get_t' inserttext='stream_bucket_make_writeable(|)' hint='(PHP 5) object stream_bucket_make_writeable(resource $brigade) - Return a bucket object from the brigade for operating on.' flags='130'/>
<tag menu='S' submenu='Stream-->>s - stream_get_t' inserttext='stream_bucket_new(|)' hint='(PHP 5) object stream_bucket_new(resource $stream, string $buffer) - Create a new bucket for use on the current stream.' flags='130'/>
<tag menu='S' submenu='Stream-->>s - stream_get_t' inserttext='stream_bucket_prepend(|)' hint='(PHP 5) void stream_bucket_prepend(resource $brigade, resource $bucket) - Prepend bucket to brigade.' flags='130'/>
<tag menu='S' submenu='Stream-->>s - stream_get_t' inserttext='stream_context_create(|)' hint='(PHP 4>=4.3.0, PHP 5) resource stream_context_create([array $options [, array $params ]]) - Create a streams context.' flags='130'/>
<tag menu='S' submenu='Stream-->>s - stream_get_t' inserttext='stream_context_get_default(|)' hint='(PHP 5>=5.1.0) resource stream_context_get_default([array $options]) - Retreive the default streams context.' flags='130'/>
<tag menu='S' submenu='Stream-->>s - stream_get_t' inserttext='stream_context_get_options(|)' hint='(PHP 4>=4.3.0, PHP 5) array stream_context_get_options(resource $stream_or_context) - Retrieve options for a stream/wrapper/context.' flags='130'/>
<tag menu='S' submenu='Stream-->>s - stream_get_t' inserttext='stream_context_get_params(|)' hint='(PHP 5>=5.3.0) array stream_context_get_params(resource $stream_or_context) - Retrieves parameters from a context.' flags='130'/>
<tag menu='S' submenu='Stream-->>s - stream_get_t' inserttext='stream_context_set_default(|)' hint='(PHP 5>=5.3.0) resource stream_context_set_default(array $options) - Set the default streams context.' flags='130'/>
<tag menu='S' submenu='Stream-->>s - stream_get_t' inserttext='stream_context_set_option(|)' hint='(PHP 4>=4.3.0, PHP 5) bool stream_context_set_option(resource $stream_or_context, string $wrapper, string $option, mixed $value) - Sets an option for a stream/wrapper/context.' flags='130'/>
<tag menu='S' submenu='Stream-->>s - stream_get_t' inserttext='stream_context_set_params(|)' hint='(PHP 4>=4.3.0, PHP 5) bool stream_context_set_params(resource $stream_or_context, array $params) - Set parameters for a stream/wrapper/context.' flags='130'/>
<tag menu='S' submenu='Stream-->>s - stream_get_t' inserttext='stream_copy_to_stream(|)' hint='(PHP 5) int stream_copy_to_stream(resource $source, resource $dest [, int $maxlength=-1 [, int $offset=0 ]]) - Copies data from one stream to another.' flags='130'/>
<tag menu='S' submenu='Stream-->>s - stream_get_t' inserttext='stream_filter_append(|)' hint='(PHP 4>=4.3.0, PHP 5) resource stream_filter_append(resource $stream, string $filtername [, int $read_write [, mixed $params ]]) - Attach a filter to a stream.' flags='130'/>
<tag menu='S' submenu='Stream-->>s - stream_get_t' inserttext='stream_filter_prepend(|)' hint='(PHP 4>=4.3.0, PHP 5) resource stream_filter_prepend(resource $stream, string $filtername [, int $read_write [, mixed $params ]]) - Attach a filter to a stream.' flags='130'/>
<tag menu='S' submenu='Stream-->>s - stream_get_t' inserttext='stream_filter_register(|)' hint='(PHP 5) bool stream_filter_register(string $filtername, string $classname) - Register a user defined stream filter.' flags='130'/>
<tag menu='S' submenu='Stream-->>s - stream_get_t' inserttext='stream_filter_remove(|)' hint='(PHP 5>=5.1.0) bool stream_filter_remove(resource $stream_filter) - Remove a filter from a stream.' flags='130'/>
<tag menu='S' submenu='Stream-->>s - stream_get_t' inserttext='stream_get_contents(|)' hint='(PHP 5) string stream_get_contents(resource $handle [, int $maxlength=-1 [, int $offset=-1 ]]) - Reads remainder of a stream into a string.' flags='130'/>
<tag menu='S' submenu='Stream-->>s - stream_get_t' inserttext='stream_get_filters()' hint='(PHP 5) array stream_get_filters(void) - Retrieve list of registered filters.' flags='130'/>
<tag menu='S' submenu='Stream-->>s - stream_get_t' inserttext='stream_get_line(|)' hint='(PHP 5) string stream_get_line(resource $handle, int $length [, string $ending]) - Gets line from stream resource up to a given delimiter.' flags='130'/>
<tag menu='S' submenu='Stream-->>s - stream_get_t' inserttext='stream_get_meta_data(|)' hint='(PHP 4>=4.3.0, PHP 5) array stream_get_meta_data(resource $stream) - Retrieves header/meta data from streams/file pointers.' flags='130'/>
<tag menu='S' submenu='Stream-->>s - stream_get_t' inserttext='stream_get_transports()' hint='(PHP 5) array stream_get_transports(void) - Retrieve list of registered socket transports.' flags='130'/>
<tag menu='S' submenu='Stream-->>stream_get_w - s' inserttext='stream_get_wrappers()' hint='(PHP 5) array stream_get_wrappers(void) - Retrieve list of registered streams.' flags='130'/>
<tag menu='S' submenu='Stream-->>stream_get_w - s' inserttext='stream_is_local(|)' hint='(PHP 5>=5.2.4) bool stream_is_local(mixed $stream_or_url) - Checks if a stream is a local stream.' flags='130'/>
<tag menu='S' submenu='Stream-->>stream_get_w - s' inserttext='stream_notification_callback(|)' hint='(PHP 5>=5.2.0) void stream_notification_callback(int $notification_code, int $severity, string $message, int $message_code, int $bytes_transferred, int $bytes_max) - A callback function for the notification context paramater.' flags='130'/>
<tag menu='S' submenu='Stream-->>stream_get_w - s' inserttext='stream_register_wrapper(|)' hint='(PHP 4>=4.3.0, PHP 5) Alias of stream_wrapper_register().' flags='130'/>
<tag menu='S' submenu='Stream-->>stream_get_w - s' inserttext='stream_resolve_include_path(|)' hint='(PHP 5>=5.3.2) string stream_resolve_include_path(string $filename [, resource $context]) - Resolve filename against the include path.' flags='130'/>
<tag menu='S' submenu='Stream-->>stream_get_w - s' inserttext='stream_select(|)' hint='(PHP 4>=4.3.0, PHP 5) int stream_select(array &amp;$read, array &amp;$write, array &amp;$except, int $tv_sec [, int $tv_usec=0]) - Runs the equivalent of the select() system call on the given arrays of streams with a timeout specified by tv_sec and tv_usec.' flags='130'/>
<tag menu='S' submenu='Stream-->>stream_get_w - s' inserttext='stream_set_blocking(|)' hint='(PHP 4>=4.3.0, PHP 5) bool stream_set_blocking(resource $stream, int $mode) - Set blocking/non-blocking mode on a stream.' flags='130'/>
<tag menu='S' submenu='Stream-->>stream_get_w - s' inserttext='stream_set_read_buffer(|)' hint='(PHP 5>=5.3.3) int stream_set_read_buffer(resource $stream, int $buffer) - Set read file buffering on the given stream.' flags='130'/>
<tag menu='S' submenu='Stream-->>stream_get_w - s' inserttext='stream_set_timeout(|)' hint='(PHP 4>=4.3.0, PHP 5) bool stream_set_timeout(resource $stream, int $seconds [, int $microseconds=0]) - Set timeout period on a stream.' flags='130'/>
<tag menu='S' submenu='Stream-->>stream_get_w - s' inserttext='stream_set_write_buffer(|)' hint='(PHP 4>=4.3.0, PHP 5) int stream_set_write_buffer(resource $stream, int $buffer) - Sets write file buffering on the given stream.' flags='130'/>
<tag menu='S' submenu='Stream-->>stream_get_w - s' inserttext='stream_socket_accept(|)' hint='(PHP 5) resource stream_socket_accept(resource $server_socket [, float $timeout=ini_get("default_socket_timeout") [, string &amp;$peername ]]) - Accept a connection on a socket created by stream_socket_server().' flags='130'/>
<tag menu='S' submenu='Stream-->>stream_get_w - s' inserttext='stream_socket_client(|)' hint='(PHP 5) resource stream_socket_client(string $remote_socket [, int &amp;$errno [, string &amp;$errstr [, float $timeout=ini_get("default_socket_timeout") [, int $flags=STREAM_CLIENT_CONNECT [, resource $context ]]]]]) - Open Internet or Unix domain socket connection.' flags='130'/>
<tag menu='S' submenu='Stream-->>stream_get_w - s' inserttext='stream_socket_enable_crypto(|)' hint='(PHP 5>=5.1.0) mixed stream_socket_enable_crypto(resource $stream, bool $enable [, int $crypto_type [, resource $session_stream ]]) - Turns encryption on/off on an already connected socket.' flags='130'/>
<tag menu='S' submenu='Stream-->>stream_get_w - s' inserttext='stream_socket_get_name(|)' hint='(PHP 5) string stream_socket_get_name(resource $handle, bool $want_peer) - Retrieve the name of the local or remote sockets.' flags='130'/>
<tag menu='S' submenu='Stream-->>stream_get_w - s' inserttext='stream_socket_pair(|)' hint='(PHP 5>=5.1.0) array stream_socket_pair(int $domain, int $type, int $protocol) - Creates a pair of connected, indistinguishable socket streams.' flags='130'/>
<tag menu='S' submenu='Stream-->>stream_get_w - s' inserttext='stream_socket_recvfrom(|)' hint='(PHP 5) string stream_socket_recvfrom(resource $socket, int $length [, int $flags=0 [, string &amp;$address ]]) - Receives data from a socket, connected or not.' flags='130'/>
<tag menu='S' submenu='Stream-->>stream_get_w - s' inserttext='stream_socket_sendto(|)' hint='(PHP 5) int stream_socket_sendto(resource $socket, string $data [, int $flags=0 [, string $address ]]) - Sends a message to a socket, whether it is connected or not.' flags='130'/>
<tag menu='S' submenu='Stream-->>stream_get_w - s' inserttext='stream_socket_server(|)' hint='(PHP 5) resource stream_socket_server(string $local_socket [, int &amp;$errno [, string &amp;$errstr [, int $flags=STREAM_SERVER_BIND | STREAM_SERVER_LISTEN [, resource $context ]]]]) - Create an Internet or Unix domain server socket.' flags='130'/>
<tag menu='S' submenu='Stream-->>stream_get_w - s' inserttext='stream_socket_shutdown(|)' hint='(PHP 5>=5.2.1) bool stream_socket_shutdown(resource $stream, int $how) - Shutdown a full-duplex connection.' flags='130'/>
<tag menu='S' submenu='Stream-->>stream_get_w - s' inserttext='stream_supports_lock(|)' hint='(PHP 5>=5.3.0) bool stream_supports_lock(resource $stream) - Tells whether the stream supports locking.' flags='130'/>
<tag menu='S' submenu='Stream-->>stream_get_w - s' inserttext='stream_wrapper_register(|)' hint='(PHP 4>=4.3.2, PHP 5) bool stream_wrapper_register(string $protocol, string $classname [, int $flags=0]) - Register a URL wrapper implemented as a PHP class.' flags='130'/>
<tag menu='S' submenu='Stream-->>stream_get_w - s' inserttext='stream_wrapper_restore(|)' hint='(PHP 5>=5.1.0) bool stream_wrapper_restore(string $protocol) - Restores a previously unregistered built-in wrapper.' flags='130'/>
<tag menu='S' submenu='Stream-->>stream_get_w - s' inserttext='stream_wrapper_unregister(|)' hint='(PHP 5>=5.1.0) bool stream_wrapper_unregister(string $protocol) - Unregister a URL wrapper.' flags='130'/>
<tag menu='S' submenu='String-->>a - html_' inserttext='addcslashes(|)' hint='(PHP 4, PHP 5) string addcslashes(string $str, string $charlist) - Quote string with slashes in a C style.' flags='130'/>
<tag menu='S' submenu='String-->>a - html_' inserttext='addslashes(|)' hint='(PHP 4, PHP 5) string addslashes(string $str) - Quote string with slashes.' flags='130'/>
<tag menu='S' submenu='String-->>a - html_' inserttext='bin2hex(|)' hint='(PHP 4, PHP 5) string bin2hex(string $str) - Convert binary data into hexadecimal representation.' flags='130'/>
<tag menu='S' submenu='String-->>a - html_' inserttext='chop(|)' hint='(PHP 4, PHP 5) Alias of rtrim().' flags='130'/>
<tag menu='S' submenu='String-->>a - html_' inserttext='chr(|)' hint='(PHP 4, PHP 5) string chr(int $ascii) - Return a specific character.' flags='130'/>
<tag menu='S' submenu='String-->>a - html_' inserttext='chunk_split(|)' hint='(PHP 4, PHP 5) string chunk_split(string $body [, int $chunklen=76 [, string $end="\r\n" ]]) - Split a string into smaller chunks.' flags='130'/>
<tag menu='S' submenu='String-->>a - html_' inserttext='convert_cyr_string(|)' hint='(PHP 4, PHP 5) string convert_cyr_string(string $str, string $from, string $to) - Convert from one Cyrillic character set to another.' flags='130'/>
<tag menu='S' submenu='String-->>a - html_' inserttext='convert_uudecode(|)' hint='(PHP 5) string convert_uudecode(string $data) - Decode a uuencoded string.' flags='130'/>
<tag menu='S' submenu='String-->>a - html_' inserttext='convert_uuencode(|)' hint='(PHP 5) string convert_uuencode(string $data) - Uuencode a string.' flags='130'/>
<tag menu='S' submenu='String-->>a - html_' inserttext='count_chars(|)' hint='(PHP 4, PHP 5) mixed count_chars(string $string [, int $mode=0]) - Return information about characters used in a string.' flags='130'/>
<tag menu='S' submenu='String-->>a - html_' inserttext='crc32(|)' hint='(PHP 4>=4.0.1, PHP 5) int crc32(string $str) - Calculates the crc32 polynomial of a string.' flags='130'/>
<tag menu='S' submenu='String-->>a - html_' inserttext='crypt(|)' hint='(PHP 4, PHP 5) string crypt(string $str [, string $salt]) - One-way string hashing.' flags='130'/>
<tag menu='S' submenu='String-->>a - html_' inserttext='echo(|)' hint='(PHP 4, PHP 5) void echo(string $arg1 [, string $...]) - Output one or more strings.' flags='130'/>
<tag menu='S' submenu='String-->>a - html_' inserttext='explode(|)' hint='(PHP 4, PHP 5) array explode(string $delimiter, string $string [, int $limit]) - Split a string by string.' flags='130'/>
<tag menu='S' submenu='String-->>a - html_' inserttext='fprintf(|)' hint='(PHP 5) int fprintf(resource $handle, string $format [, mixed $args [, mixed $... ]]) - Write a formatted string to a stream.' flags='130'/>
<tag menu='S' submenu='String-->>a - html_' inserttext='get_html_translation_table(|)' hint='(PHP 4, PHP 5) array get_html_translation_table([int $table=HTML_SPECIALCHARS [, int $quote_style=ENT_COMPAT ]]) - Returns the translation table used by htmlspecialchars() and htmlentities().' flags='130'/>
<tag menu='S' submenu='String-->>a - html_' inserttext='hebrev(|)' hint='(PHP 4, PHP 5) string hebrev(string $hebrew_text [, int $max_chars_per_line=0]) - Convert logical Hebrew text to visual text.' flags='130'/>
<tag menu='S' submenu='String-->>a - html_' inserttext='hebrevc(|)' hint='(PHP 4, PHP 5) string hebrevc(string $hebrew_text [, int $max_chars_per_line=0]) - Convert logical Hebrew text to visual text with newline conversion.' flags='130'/>
<tag menu='S' submenu='String-->>a - html_' inserttext='html_entity_decode(|)' hint='(PHP 4>=4.3.0, PHP 5) string html_entity_decode(string $string [, int $quote_style=ENT_COMPAT [, string $charset ]]) - Convert all HTML entities to their applicable characters.' flags='130'/>
<tag menu='S' submenu='String-->>htmle - print' inserttext='htmlentities(|)' hint='(PHP 4, PHP 5) string htmlentities(string $string [, int $flags=ENT_COMPAT [, string $charset [, bool $double_encode=true ]]]) - Convert all applicable characters to HTML entities.' flags='130'/>
<tag menu='S' submenu='String-->>htmle - print' inserttext='htmlspecialchars(|)' hint='(PHP 4, PHP 5) string htmlspecialchars(string $string [, int $flags=ENT_COMPAT [, string $charset [, bool $double_encode=true ]]]) - Convert special characters to HTML entities.' flags='130'/>
<tag menu='S' submenu='String-->>htmle - print' inserttext='htmlspecialchars_decode(|)' hint='(PHP 5>=5.1.0) string htmlspecialchars_decode(string $string [, int $quote_style=ENT_COMPAT]) - Convert special HTML entities back to characters.' flags='130'/>
<tag menu='S' submenu='String-->>htmle - print' inserttext='implode(|)' hint='(PHP 4, PHP 5) string implode(string $glue, array $pieces) - Join array elements with a string.' flags='130'/>
<tag menu='S' submenu='String-->>htmle - print' inserttext='join(|)' hint='(PHP 4, PHP 5) Alias of implode().' flags='130'/>
<tag menu='S' submenu='String-->>htmle - print' inserttext='lcfirst(|)' hint="(PHP 5>=5.3.0) string lcfirst(string $str) - Make a string's first character lowercase." flags='130'/>
<tag menu='S' submenu='String-->>htmle - print' inserttext='levenshtein(|)' hint='(PHP 4>=4.0.1, PHP 5) int levenshtein(string $str1, string $str2) - Calculate Levenshtein distance between two strings.' flags='130'/>
<tag menu='S' submenu='String-->>htmle - print' inserttext='localeconv()' hint='(PHP 4>=4.0.5, PHP 5) array localeconv(void) - Get numeric formatting information.' flags='130'/>
<tag menu='S' submenu='String-->>htmle - print' inserttext='ltrim(|)' hint='(PHP 4, PHP 5) string ltrim(string $str [, string $charlist]) - Strip whitespace (or other characters) from the beginning of a string.' flags='130'/>
<tag menu='S' submenu='String-->>htmle - print' inserttext='md5(|)' hint='(PHP 4, PHP 5) string md5(string $str [, bool $raw_output=false]) - Calculate the md5 hash of a string.' flags='130'/>
<tag menu='S' submenu='String-->>htmle - print' inserttext='md5_file(|)' hint='(PHP 4>=4.2.0, PHP 5) string md5_file(string $filename [, bool $raw_output=false]) - Calculates the md5 hash of a given file.' flags='130'/>
<tag menu='S' submenu='String-->>htmle - print' inserttext='metaphone(|)' hint='(PHP 4, PHP 5) string metaphone(string $str [, int $phonemes=0]) - Calculate the metaphone key of a string.' flags='130'/>
<tag menu='S' submenu='String-->>htmle - print' inserttext='money_format(|)' hint='(PHP 4>=4.3.0, PHP 5) string money_format(string $format, float $number) - Formats a number as a currency string.' flags='130'/>
<tag menu='S' submenu='String-->>htmle - print' inserttext='nl2br(|)' hint='(PHP 4, PHP 5) string nl2br(string $string [, bool $is_xhtml=true]) - Inserts HTML line breaks before all newlines in a string.' flags='130'/>
<tag menu='S' submenu='String-->>htmle - print' inserttext='nl_langinfo(|)' hint='(PHP 4>=4.1.0, PHP 5) string nl_langinfo(int $item) - Query language and locale information.' flags='130'/>
<tag menu='S' submenu='String-->>htmle - print' inserttext='number_format(|)' hint='(PHP 4, PHP 5) string number_format(float $number [, int $decimals=0]) - Format a number with grouped thousands.' flags='130'/>
<tag menu='S' submenu='String-->>htmle - print' inserttext='ord(|)' hint='(PHP 4, PHP 5) int ord(string $string) - Return ASCII value of character.' flags='130'/>
<tag menu='S' submenu='String-->>htmle - print' inserttext='parse_str(|)' hint='(PHP 4, PHP 5) void parse_str(string $str [, array &amp;$arr]) - Parses the string into variables.' flags='130'/>
<tag menu='S' submenu='String-->>htmle - print' inserttext='print(|)' hint='(PHP 4, PHP 5) int print(string $arg) - Output a string.' flags='130'/>
<tag menu='S' submenu='String-->>printf - str_sh' inserttext='printf(|)' hint='(PHP 4, PHP 5) int printf(string $format [, mixed $args [, mixed $... ]]) - Output a formatted string.' flags='130'/>
<tag menu='S' submenu='String-->>printf - str_sh' inserttext='quoted_printable_decode(|)' hint='(PHP 4, PHP 5) string quoted_printable_decode(string $str) - Convert a quoted-printable string to an 8 bit string.' flags='130'/>
<tag menu='S' submenu='String-->>printf - str_sh' inserttext='quoted_printable_encode(|)' hint='(PHP 5>=5.3.0) string quoted_printable_encode(string $str) - Convert a 8 bit string to a quoted-printable string.' flags='130'/>
<tag menu='S' submenu='String-->>printf - str_sh' inserttext='quotemeta(|)' hint='(PHP 4, PHP 5) string quotemeta(string $str) - Quote meta characters.' flags='130'/>
<tag menu='S' submenu='String-->>printf - str_sh' inserttext='rtrim(|)' hint='(PHP 4, PHP 5) string rtrim(string $str [, string $charlist]) - Strip whitespace (or other characters) from the end of a string.' flags='130'/>
<tag menu='S' submenu='String-->>printf - str_sh' inserttext='setlocale(|)' hint='(PHP 4, PHP 5) string setlocale(int $category, string $locale [, string $...]) - Set locale information.' flags='130'/>
<tag menu='S' submenu='String-->>printf - str_sh' inserttext='sha1(|)' hint='(PHP 4>=4.3.0, PHP 5) string sha1(string $str [, bool $raw_output=false]) - Calculate the sha1 hash of a string.' flags='130'/>
<tag menu='S' submenu='String-->>printf - str_sh' inserttext='sha1_file(|)' hint='(PHP 4>=4.3.0, PHP 5) string sha1_file(string $filename [, bool $raw_output=false]) - Calculate the sha1 hash of a file.' flags='130'/>
<tag menu='S' submenu='String-->>printf - str_sh' inserttext='similar_text(|)' hint='(PHP 4, PHP 5) int similar_text(string $first, string $second [, float &amp;$percent]) - Calculate the similarity between two strings.' flags='130'/>
<tag menu='S' submenu='String-->>printf - str_sh' inserttext='soundex(|)' hint='(PHP 4, PHP 5) string soundex(string $str) - Calculate the soundex key of a string.' flags='130'/>
<tag menu='S' submenu='String-->>printf - str_sh' inserttext='sprintf(|)' hint='(PHP 4, PHP 5) string sprintf(string $format [, mixed $args [, mixed $... ]]) - Return a formatted string.' flags='130'/>
<tag menu='S' submenu='String-->>printf - str_sh' inserttext='sscanf(|)' hint='(PHP 4>=4.0.1, PHP 5) mixed sscanf(string $str, string $format [, mixed &amp;$...]) - Parses input from a string according to a format.' flags='130'/>
<tag menu='S' submenu='String-->>printf - str_sh' inserttext='str_getcsv(|)' hint="(PHP 5>=5.3.0) array str_getcsv(string $input [, string $delimiter=',' [, string $enclosure='&quot;' [, string $escape='\\' ]]]) - Parse a CSV string into an array." flags='130'/>
<tag menu='S' submenu='String-->>printf - str_sh' inserttext='str_ireplace(|)' hint='(PHP 5) mixed str_ireplace(mixed $search, mixed $replace, mixed $subject [, int &amp;$count]) - Case-insensitive version of str_replace().' flags='130'/>
<tag menu='S' submenu='String-->>printf - str_sh' inserttext='str_pad(|)' hint='(PHP 4>=4.0.1, PHP 5) string str_pad(string $input, int $pad_length [, string $pad_string=" " [, int $pad_type=STR_PAD_RIGHT ]]) - Pad a string to a certain length with another string.' flags='130'/>
<tag menu='S' submenu='String-->>printf - str_sh' inserttext='str_repeat(|)' hint='(PHP 4, PHP 5) string str_repeat(string $input, int $multiplier) - Repeat a string.' flags='130'/>
<tag menu='S' submenu='String-->>printf - str_sh' inserttext='str_replace(|)' hint='(PHP 4, PHP 5) mixed str_replace(mixed $search, mixed $replace, mixed $subject [, int &amp;$count]) - Replace all occurrences of the search string with the replacement string.' flags='130'/>
<tag menu='S' submenu='String-->>printf - str_sh' inserttext='str_rot13(|)' hint='(PHP 4>=4.2.0, PHP 5) string str_rot13(string $str) - Perform the rot13 transform on a string.' flags='130'/>
<tag menu='S' submenu='String-->>printf - str_sh' inserttext='str_shuffle(|)' hint='(PHP 4>=4.3.0, PHP 5) string str_shuffle(string $str) - Randomly shuffles a string.' flags='130'/>
<tag menu='S' submenu='String-->>str_sp - strp' inserttext='str_split(|)' hint='(PHP 5) array str_split(string $string [, int $split_length=1]) - Convert a string to an array.' flags='130'/>
<tag menu='S' submenu='String-->>str_sp - strp' inserttext='str_word_count(|)' hint='(PHP 4>=4.3.0, PHP 5) mixed str_word_count(string $string [, int $format=0 [, string $charlist ]]) - Return information about words used in a string.' flags='130'/>
<tag menu='S' submenu='String-->>str_sp - strp' inserttext='strcasecmp(|)' hint='(PHP 4, PHP 5) int strcasecmp(string $str1, string $str2) - Binary safe case-insensitive string comparison.' flags='130'/>
<tag menu='S' submenu='String-->>str_sp - strp' inserttext='strchr(|)' hint='(PHP 4, PHP 5) Alias of strstr().' flags='130'/>
<tag menu='S' submenu='String-->>str_sp - strp' inserttext='strcmp(|)' hint='(PHP 4, PHP 5) int strcmp(string $str1, string $str2) - Binary safe string comparison.' flags='130'/>
<tag menu='S' submenu='String-->>str_sp - strp' inserttext='strcoll(|)' hint='(PHP 4>=4.0.5, PHP 5) int strcoll(string $str1, string $str2) - Locale based string comparison.' flags='130'/>
<tag menu='S' submenu='String-->>str_sp - strp' inserttext='strcspn(|)' hint='(PHP 4, PHP 5) int strcspn(string $str1, string $str2 [, int $start [, int $length ]]) - Find length of initial segment not matching mask.' flags='130'/>
<tag menu='S' submenu='String-->>str_sp - strp' inserttext='strip_tags(|)' hint='(PHP 4, PHP 5) string strip_tags(string $str [, string $allowable_tags]) - Strip HTML and PHP tags from a string.' flags='130'/>
<tag menu='S' submenu='String-->>str_sp - strp' inserttext='stripcslashes(|)' hint='(PHP 4, PHP 5) string stripcslashes(string $str) - Un-quote string quoted with addcslashes().' flags='130'/>
<tag menu='S' submenu='String-->>str_sp - strp' inserttext='stripos(|)' hint='(PHP 5) int stripos(string $haystack, string $needle [, int $offset=0]) - Find position of first occurrence of a case-insensitive string.' flags='130'/>
<tag menu='S' submenu='String-->>str_sp - strp' inserttext='stripslashes(|)' hint='(PHP 4, PHP 5) string stripslashes(string $str) - Un-quotes a quoted string.' flags='130'/>
<tag menu='S' submenu='String-->>str_sp - strp' inserttext='stristr(|)' hint='(PHP 4, PHP 5) string stristr(string $haystack, mixed $needle [, bool $before_needle=false]) - Case-insensitive strstr().' flags='130'/>
<tag menu='S' submenu='String-->>str_sp - strp' inserttext='strlen(|)' hint='(PHP 4, PHP 5) int strlen(string $string) - Get string length.' flags='130'/>
<tag menu='S' submenu='String-->>str_sp - strp' inserttext='strnatcasecmp(|)' hint='(PHP 4, PHP 5) int strnatcasecmp(string $str1, string $str2) - Case insensitive string comparisons using a "natural order" algorithm.' flags='130'/>
<tag menu='S' submenu='String-->>str_sp - strp' inserttext='strnatcmp(|)' hint='(PHP 4, PHP 5) int strnatcmp(string $str1, string $str2) - String comparisons using a "natural order" algorithm.' flags='130'/>
<tag menu='S' submenu='String-->>str_sp - strp' inserttext='strncasecmp(|)' hint='(PHP 4>=4.0.2, PHP 5) int strncasecmp(string $str1, string $str2, int $len) - Binary safe case-insensitive string comparison of the first n characters.' flags='130'/>
<tag menu='S' submenu='String-->>str_sp - strp' inserttext='strncmp(|)' hint='(PHP 4, PHP 5) int strncmp(string $str1, string $str2, int $len) - Binary safe string comparison of the first n characters.' flags='130'/>
<tag menu='S' submenu='String-->>str_sp - strp' inserttext='strpbrk(|)' hint='(PHP 5) string strpbrk(string $haystack, string $char_list) - Search a string for any of a set of characters.' flags='130'/>
<tag menu='S' submenu='String-->>str_sp - strp' inserttext='strpos(|)' hint='(PHP 4, PHP 5) int strpos(string $haystack, mixed $needle [, int $offset=0]) - Find position of first occurrence of a string.' flags='130'/>
<tag menu='S' submenu='String-->>strr - w' inserttext='strrchr(|)' hint='(PHP 4, PHP 5) string strrchr(string $haystack, mixed $needle) - Find the last occurrence of a character in a string.' flags='130'/>
<tag menu='S' submenu='String-->>strr - w' inserttext='strrev(|)' hint='(PHP 4, PHP 5) string strrev(string $string) - Reverse a string.' flags='130'/>
<tag menu='S' submenu='String-->>strr - w' inserttext='strripos(|)' hint='(PHP 5) int strripos(string $haystack, string $needle [, int $offset=0]) - Find position of last occurrence of a case-insensitive string in a string.' flags='130'/>
<tag menu='S' submenu='String-->>strr - w' inserttext='strrpos(|)' hint='(PHP 4, PHP 5) int strrpos(string $haystack, string $needle [, int $offset=0]) - Find the position of the last occurrence of a substring in a string.' flags='130'/>
<tag menu='S' submenu='String-->>strr - w' inserttext='strspn(|)' hint='(PHP 4, PHP 5) int strspn(string $subject, string $mask [, int $start [, int $length ]]) - Finds the length of the first segment of a string consisting entirely of characters contained within a given mask.' flags='130'/>
<tag menu='S' submenu='String-->>strr - w' inserttext='strstr(|)' hint='(PHP 4, PHP 5) string strstr(string $haystack, mixed $needle [, bool $before_needle=false]) - Find first occurrence of a string.' flags='130'/>
<tag menu='S' submenu='String-->>strr - w' inserttext='strtok(|)' hint='(PHP 4, PHP 5) string strtok(string $str, string $token) - Tokenize string.' flags='130'/>
<tag menu='S' submenu='String-->>strr - w' inserttext='strtolower(|)' hint='(PHP 4, PHP 5) string strtolower(string $str) - Make a string lowercase.' flags='130'/>
<tag menu='S' submenu='String-->>strr - w' inserttext='strtoupper(|)' hint='(PHP 4, PHP 5) string strtoupper(string $string) - Make a string uppercase.' flags='130'/>
<tag menu='S' submenu='String-->>strr - w' inserttext='strtr(|)' hint='(PHP 4, PHP 5) string strtr(string $str, string $from, string $to) - Translate characters or replace substrings.' flags='130'/>
<tag menu='S' submenu='String-->>strr - w' inserttext='substr(|)' hint='(PHP 4, PHP 5) string substr(string $string, int $start [, int $length]) - Return part of a string.' flags='130'/>
<tag menu='S' submenu='String-->>strr - w' inserttext='substr_compare(|)' hint='(PHP 5) int substr_compare(string $main_str, string $str, int $offset [, int $length [, bool $case_insensitivity=false ]]) - Binary safe comparison of two strings from an offset, up to length characters.' flags='130'/>
<tag menu='S' submenu='String-->>strr - w' inserttext='substr_count(|)' hint='(PHP 4, PHP 5) int substr_count(string $haystack, string $needle [, int $offset=0 [, int $length ]]) - Count the number of substring occurrences.' flags='130'/>
<tag menu='S' submenu='String-->>strr - w' inserttext='substr_replace(|)' hint='(PHP 4, PHP 5) mixed substr_replace(mixed $string, string $replacement, int $start [, int $length]) - Replace text within a portion of a string.' flags='130'/>
<tag menu='S' submenu='String-->>strr - w' inserttext='trim(|)' hint='(PHP 4, PHP 5) string trim(string $str [, string $charlist]) - Strip whitespace (or other characters) from the beginning and end of a string.' flags='130'/>
<tag menu='S' submenu='String-->>strr - w' inserttext='ucfirst(|)' hint="(PHP 4, PHP 5) string ucfirst(string $str) - Make a string's first character uppercase." flags='130'/>
<tag menu='S' submenu='String-->>strr - w' inserttext='ucwords(|)' hint='(PHP 4, PHP 5) string ucwords(string $str) - Uppercase the first character of each word in a string.' flags='130'/>
<tag menu='S' submenu='String-->>strr - w' inserttext='vfprintf(|)' hint='(PHP 5) int vfprintf(resource $handle, string $format, array $args) - Write a formatted string to a stream.' flags='130'/>
<tag menu='S' submenu='String-->>strr - w' inserttext='vprintf(|)' hint='(PHP 4>=4.1.0, PHP 5) int vprintf(string $format, array $args) - Output a formatted string.' flags='130'/>
<tag menu='S' submenu='String-->>strr - w' inserttext='vsprintf(|)' hint='(PHP 4>=4.1.0, PHP 5) string vsprintf(string $format, array $args) - Return a formatted string.' flags='130'/>
<tag menu='S' submenu='String-->>strr - w' inserttext='wordwrap(|)' hint='(PHP 4>=4.0.2, PHP 5) string wordwrap(string $str [, int $width=75 [, string $break="\n" [, bool $cut=false ]]]) - Wraps a string to a given number of characters.' flags='130'/>
<tag menu='S' submenu='Sybase' inserttext='sybase_affected_rows(|)' hint='(PHP 4, PHP 5) int sybase_affected_rows([resource $link_identifier]) - Gets number of affected rows in last query.' flags='130'/>
<tag menu='S' submenu='Sybase' inserttext='sybase_close(|)' hint='(PHP 4, PHP 5) bool sybase_close([resource $link_identifier]) - Closes a Sybase connection.' flags='130'/>
<tag menu='S' submenu='Sybase' inserttext='sybase_connect(|)' hint='(PHP 4, PHP 5) resource sybase_connect([string $servername [, string $username [, string $password [, string $charset [, string $appname [, bool $new=false ]]]]]]) - Opens a Sybase server connection.' flags='130'/>
<tag menu='S' submenu='Sybase' inserttext='sybase_data_seek(|)' hint='(PHP 4, PHP 5) bool sybase_data_seek(resource $result_identifier, int $row_number) - Moves internal row pointer.' flags='130'/>
<tag menu='S' submenu='Sybase' inserttext='sybase_deadlock_retry_count(|)' hint='(PHP 4>=4.3.0, PHP 5) void sybase_deadlock_retry_count(int $retry_count) - Sets the deadlock retry count.' flags='130'/>
<tag menu='S' submenu='Sybase' inserttext='sybase_fetch_array(|)' hint='(PHP 4, PHP 5) array sybase_fetch_array(resource $result) - Fetch row as array.' flags='130'/>
<tag menu='S' submenu='Sybase' inserttext='sybase_fetch_assoc(|)' hint='(PHP 4>=4.3.0, PHP 5) array sybase_fetch_assoc(resource $result) - Fetch a result row as an associative array.' flags='130'/>
<tag menu='S' submenu='Sybase' inserttext='sybase_fetch_field(|)' hint='(PHP 4, PHP 5) object sybase_fetch_field(resource $result [, int $field_offset=-1]) - Get field information from a result.' flags='130'/>
<tag menu='S' submenu='Sybase' inserttext='sybase_fetch_object(|)' hint='(PHP 4, PHP 5) object sybase_fetch_object(resource $result [, mixed $object]) - Fetch a row as an object.' flags='130'/>
<tag menu='S' submenu='Sybase' inserttext='sybase_fetch_row(|)' hint='(PHP 4, PHP 5) array sybase_fetch_row(resource $result) - Get a result row as an enumerated array.' flags='130'/>
<tag menu='S' submenu='Sybase' inserttext='sybase_field_seek(|)' hint='(PHP 4, PHP 5) bool sybase_field_seek(resource $result, int $field_offset) - Sets field offset.' flags='130'/>
<tag menu='S' submenu='Sybase' inserttext='sybase_free_result(|)' hint='(PHP 4, PHP 5) bool sybase_free_result(resource $result) - Frees result memory.' flags='130'/>
<tag menu='S' submenu='Sybase' inserttext='sybase_get_last_message()' hint='(PHP 4, PHP 5) string sybase_get_last_message(void) - Returns the last message from the server.' flags='130'/>
<tag menu='S' submenu='Sybase' inserttext='sybase_min_client_severity(|)' hint='(PHP 4, PHP 5) void sybase_min_client_severity(int $severity) - Sets minimum client severity.' flags='130'/>
<tag menu='S' submenu='Sybase' inserttext='sybase_min_error_severity(|)' hint='(PHP 4, PHP 5) void sybase_min_error_severity(int $severity) - Sets minimum error severity.' flags='130'/>
<tag menu='S' submenu='Sybase' inserttext='sybase_min_message_severity(|)' hint='(PHP 4, PHP 5) void sybase_min_message_severity(int $severity) - Sets minimum message severity.' flags='130'/>
<tag menu='S' submenu='Sybase' inserttext='sybase_min_server_severity(|)' hint='(PHP 4, PHP 5) void sybase_min_server_severity(int $severity) - Sets minimum server severity.' flags='130'/>
<tag menu='S' submenu='Sybase' inserttext='sybase_num_fields(|)' hint='(PHP 4, PHP 5) int sybase_num_fields(resource $result) - Gets the number of fields in a result set.' flags='130'/>
<tag menu='S' submenu='Sybase' inserttext='sybase_num_rows(|)' hint='(PHP 4, PHP 5) int sybase_num_rows(resource $result) - Get number of rows in a result set.' flags='130'/>
<tag menu='S' submenu='Sybase' inserttext='sybase_pconnect(|)' hint='(PHP 4, PHP 5) resource sybase_pconnect([string $servername [, string $username [, string $password [, string $charset [, string $appname ]]]]]) - Open persistent Sybase connection.' flags='130'/>
<tag menu='S' submenu='Sybase' inserttext='sybase_query(|)' hint='(PHP 4, PHP 5) mixed sybase_query(string $query [, resource $link_identifier]) - Sends a Sybase query.' flags='130'/>
<tag menu='S' submenu='Sybase' inserttext='sybase_result(|)' hint='(PHP 4, PHP 5) string sybase_result(resource $result, int $row, mixed $field) - Get result data.' flags='130'/>
<tag menu='S' submenu='Sybase' inserttext='sybase_select_db(|)' hint='(PHP 4, PHP 5) bool sybase_select_db(string $database_name [, resource $link_identifier]) - Selects a Sybase database.' flags='130'/>
<tag menu='S' submenu='Sybase' inserttext='sybase_set_message_handler(|)' hint='(PHP 4>=4.3.0, PHP 5) bool sybase_set_message_handler(callback $handler [, resource $connection]) - Sets the handler called when a server message is raised.' flags='130'/>
<tag menu='S' submenu='Sybase' inserttext='sybase_unbuffered_query(|)' hint='(PHP 4>=4.3.0, PHP 5) resource sybase_unbuffered_query(string $query, resource $link_identifier [, bool $store_result]) - Send a Sybase query and do not block.' flags='130'/>
<tag menu='S' submenu='System program execution' inserttext='escapeshellarg(|)' hint='(PHP 4>=4.0.3, PHP 5) string escapeshellarg(string $arg) - Escape a string to be used as a shell argument.' flags='130'/>
<tag menu='S' submenu='System program execution' inserttext='escapeshellcmd(|)' hint='(PHP 4, PHP 5) string escapeshellcmd(string $command) - Escape shell metacharacters.' flags='130'/>
<tag menu='S' submenu='System program execution' inserttext='exec(|)' hint='(PHP 4, PHP 5) string exec(string $command [, array &amp;$output [, int &amp;$return_var ]]) - Execute an external program.' flags='130'/>
<tag menu='S' submenu='System program execution' inserttext='passthru(|)' hint='(PHP 4, PHP 5) void passthru(string $command [, int &amp;$return_var]) - Execute an external program and display raw output.' flags='130'/>
<tag menu='S' submenu='System program execution' inserttext='proc_close(|)' hint='(PHP 4>=4.3.0, PHP 5) int proc_close(resource $process) - Close a process opened by proc_open() and return the exit code of that process.' flags='130'/>
<tag menu='S' submenu='System program execution' inserttext='proc_get_status(|)' hint='(PHP 5) array proc_get_status(resource $process) - Get information about a process opened by proc_open().' flags='130'/>
<tag menu='S' submenu='System program execution' inserttext='proc_nice(|)' hint='(PHP 5) bool proc_nice(int $increment) - Change the priority of the current process.' flags='130'/>
<tag menu='S' submenu='System program execution' inserttext='proc_terminate(|)' hint='(PHP 5) bool proc_terminate(resource $process [, int $signal=15]) - Kills a process opened by proc_open.' flags='130'/>
<tag menu='S' submenu='System program execution' inserttext='shell_exec(|)' hint='(PHP 4, PHP 5) string shell_exec(string $cmd) - Execute command via shell and return the complete output as a string.' flags='130'/>
<tag menu='S' submenu='System program execution' inserttext='system(|)' hint='(PHP 4, PHP 5) string system(string $command [, int &amp;$return_var]) - Execute an external program and display the output.' flags='130'/>
<tag menu='S' submenu='streamWrapper class' inserttext='streamWrapper::__construct()' hint='(PHP 4>=4.3.2, PHP 5) streamWrapper::__construct(void) - Constructs a new stream wrapper.' flags='130'/>
<tag menu='S' submenu='streamWrapper class' inserttext='streamWrapper::dir_closedir()' hint='(PHP 4>=4.3.2, PHP 5) public bool streamWrapper::dir_closedir(void) - Close directory handle.' flags='130'/>
<tag menu='S' submenu='streamWrapper class' inserttext='streamWrapper::dir_opendir(|)' hint='(PHP 4>=4.3.2, PHP 5) public bool streamWrapper::dir_opendir(string $path, int $options) - Open directory handle.' flags='130'/>
<tag menu='S' submenu='streamWrapper class' inserttext='streamWrapper::dir_readdir()' hint='(PHP 4>=4.3.2, PHP 5) public string streamWrapper::dir_readdir(void) - Read entry from directory handle.' flags='130'/>
<tag menu='S' submenu='streamWrapper class' inserttext='streamWrapper::dir_rewinddir()' hint='(PHP 4>=4.3.2, PHP 5) public bool streamWrapper::dir_rewinddir(void) - Rewind directory handle.' flags='130'/>
<tag menu='S' submenu='streamWrapper class' inserttext='streamWrapper::mkdir(|)' hint='(PHP 5) public bool streamWrapper::mkdir(string $path, int $mode, int $options) - Create a directory.' flags='130'/>
<tag menu='S' submenu='streamWrapper class' inserttext='streamWrapper::rename(|)' hint='(PHP 5) public bool streamWrapper::rename(string $path_from, string $path_to) - Renames a file or directory.' flags='130'/>
<tag menu='S' submenu='streamWrapper class' inserttext='streamWrapper::rmdir(|)' hint='(PHP 5) public bool streamWrapper::rmdir(string $path, int $options) - Removes a directory.' flags='130'/>
<tag menu='S' submenu='streamWrapper class' inserttext='streamWrapper::stream_cast(|)' hint='(PHP 5>=5.3.0) public resource streamWrapper::stream_cast(int $cast_as) - Retrieve the underlaying resource.' flags='130'/>
<tag menu='S' submenu='streamWrapper class' inserttext='streamWrapper::stream_close()' hint='(PHP 4>=4.3.2, PHP 5) public void streamWrapper::stream_close(void) - Close an resource.' flags='130'/>
<tag menu='S' submenu='streamWrapper class' inserttext='streamWrapper::stream_eof()' hint='(PHP 4>=4.3.2, PHP 5) public bool streamWrapper::stream_eof(void) - Tests for end-of-file on a file pointer.' flags='130'/>
<tag menu='S' submenu='streamWrapper class' inserttext='streamWrapper::stream_flush()' hint='(PHP 4>=4.3.2, PHP 5) public bool streamWrapper::stream_flush(void) - Flushes the output.' flags='130'/>
<tag menu='S' submenu='streamWrapper class' inserttext='streamWrapper::stream_lock(|)' hint='(PHP 5) public bool streamWrapper::stream_lock(mode $operation) - Advisory file locking.' flags='130'/>
<tag menu='S' submenu='streamWrapper class' inserttext='streamWrapper::stream_open(|)' hint='(PHP 4>=4.3.2, PHP 5) public bool streamWrapper::stream_open(string $path, string $mode, int $options, string &amp;$opened_path) - Opens file or URL.' flags='130'/>
<tag menu='S' submenu='streamWrapper class' inserttext='streamWrapper::stream_read(|)' hint='(PHP 4>=4.3.2, PHP 5) public string streamWrapper::stream_read(int $count) - Read from stream.' flags='130'/>
<tag menu='S' submenu='streamWrapper class' inserttext='streamWrapper::stream_seek(|)' hint='(PHP 4>=4.3.2, PHP 5) public bool streamWrapper::stream_seek(int $offset, int $whence=SEEK_SET) - Seeks to specific location in a stream.' flags='130'/>
<tag menu='S' submenu='streamWrapper class' inserttext='streamWrapper::stream_set_option(|)' hint='(PHP 5>=5.3.0) public bool streamWrapper::stream_set_option(int $option, int $arg1, int $arg2) - Change stream options.' flags='130'/>
<tag menu='S' submenu='streamWrapper class' inserttext='streamWrapper::stream_stat()' hint='(PHP 4>=4.3.2, PHP 5) public array streamWrapper::stream_stat(void) - Retrieve information about a file resource.' flags='130'/>
<tag menu='S' submenu='streamWrapper class' inserttext='streamWrapper::stream_tell()' hint='(PHP 4>=4.3.2, PHP 5) public int streamWrapper::stream_tell(void) - Retrieve the current position of a stream.' flags='130'/>
<tag menu='S' submenu='streamWrapper class' inserttext='streamWrapper::stream_write(|)' hint='(PHP 4>=4.3.2, PHP 5) public int streamWrapper::stream_write(string $data) - Write to stream.' flags='130'/>
<tag menu='S' submenu='streamWrapper class' inserttext='streamWrapper::unlink(|)' hint='(PHP 5) public bool streamWrapper::unlink(string $path) - Delete a file.' flags='130'/>
<tag menu='S' submenu='streamWrapper class' inserttext='streamWrapper::url_stat(|)' hint='(PHP 4>=4.3.2, PHP 5) public array streamWrapper::url_stat(string $path, int $flags) - Retrieve information about a file.' flags='130'/>
<tag menu='Spl' submenu='SplDoublyLinkedList class' inserttext='SplDoublyLinkedList::__construct(|)' hint='(PHP 5>=5.3.0) Constructs a new doubly linked list.' flags='130'/>
<tag menu='Spl' submenu='SplDoublyLinkedList class' inserttext='SplDoublyLinkedList::bottom()' hint='(PHP 5>=5.3.0) mixed SplDoublyLinkedList::bottom(void) - Peeks at the node from the beginning of the doubly linked list.' flags='130'/>
<tag menu='Spl' submenu='SplDoublyLinkedList class' inserttext='SplDoublyLinkedList::count()' hint='(PHP 5>=5.3.0) int SplDoublyLinkedList::count(void) - Counts the number of elements in the doubly linked list.' flags='130'/>
<tag menu='Spl' submenu='SplDoublyLinkedList class' inserttext='SplDoublyLinkedList::current()' hint='(PHP 5>=5.3.0) mixed SplDoublyLinkedList::current(void) - Return current array entry.' flags='130'/>
<tag menu='Spl' submenu='SplDoublyLinkedList class' inserttext='SplDoublyLinkedList::getIteratorMode()' hint='(PHP 5>=5.3.0) int SplDoublyLinkedList::getIteratorMode(void) - Returns the mode of iteration.' flags='130'/>
<tag menu='Spl' submenu='SplDoublyLinkedList class' inserttext='SplDoublyLinkedList::isEmpty()' hint='(PHP 5>=5.3.0) bool SplDoublyLinkedList::isEmpty(void) - Checks whether the doubly linked list is empty.' flags='130'/>
<tag menu='Spl' submenu='SplDoublyLinkedList class' inserttext='SplDoublyLinkedList::key()' hint='(PHP 5>=5.3.0) mixed SplDoublyLinkedList::key(void) - Return current node index.' flags='130'/>
<tag menu='Spl' submenu='SplDoublyLinkedList class' inserttext='SplDoublyLinkedList::next()' hint='(PHP 5>=5.3.0) void SplDoublyLinkedList::next(void) - Move to next entry.' flags='130'/>
<tag menu='Spl' submenu='SplDoublyLinkedList class' inserttext='SplDoublyLinkedList::offsetExists(|)' hint='(PHP 5>=5.3.0) bool SplDoublyLinkedList::offsetExists(mixed $index) - Returns whether the requested $index exists.' flags='130'/>
<tag menu='Spl' submenu='SplDoublyLinkedList class' inserttext='SplDoublyLinkedList::offsetGet(|)' hint='(PHP 5>=5.3.0) mixed SplDoublyLinkedList::offsetGet(mixed $index) - Returns the value at the specified $index.' flags='130'/>
<tag menu='Spl' submenu='SplDoublyLinkedList class' inserttext='SplDoublyLinkedList::offsetSet(|)' hint='(PHP 5>=5.3.0) void SplDoublyLinkedList::offsetSet(mixed $index, mixed $newval) - Sets the value at the specified $index to $newval.' flags='130'/>
<tag menu='Spl' submenu='SplDoublyLinkedList class' inserttext='SplDoublyLinkedList::offsetUnset(|)' hint='(PHP 5>=5.3.0) void SplDoublyLinkedList::offsetUnset(mixed $index) - Unsets the value at the specified $index.' flags='130'/>
<tag menu='Spl' submenu='SplDoublyLinkedList class' inserttext='SplDoublyLinkedList::pop()' hint='(PHP 5>=5.3.0) mixed SplDoublyLinkedList::pop(void) - Pops a node from the end of the doubly linked list.' flags='130'/>
<tag menu='Spl' submenu='SplDoublyLinkedList class' inserttext='SplDoublyLinkedList::prev()' hint='(PHP 5>=5.3.0) void SplDoublyLinkedList::prev(void) - Move to previous entry.' flags='130'/>
<tag menu='Spl' submenu='SplDoublyLinkedList class' inserttext='SplDoublyLinkedList::push(|)' hint='(PHP 5>=5.3.0) void SplDoublyLinkedList::push(mixed $value) - Pushes an element at the end of the doubly linked list.' flags='130'/>
<tag menu='Spl' submenu='SplDoublyLinkedList class' inserttext='SplDoublyLinkedList::rewind()' hint='(PHP 5>=5.3.0) void SplDoublyLinkedList::rewind(void) - Rewind iterator back to the start.' flags='130'/>
<tag menu='Spl' submenu='SplDoublyLinkedList class' inserttext='SplDoublyLinkedList::setIteratorMode(|)' hint='(PHP 5>=5.3.0) void SplDoublyLinkedList::setIteratorMode(int $mode) - Sets the mode of iteration.' flags='130'/>
<tag menu='Spl' submenu='SplDoublyLinkedList class' inserttext='SplDoublyLinkedList::shift()' hint='(PHP 5>=5.3.0) mixed SplDoublyLinkedList::shift(void) - Shifts a node from the beginning of the doubly linked list.' flags='130'/>
<tag menu='Spl' submenu='SplDoublyLinkedList class' inserttext='SplDoublyLinkedList::top()' hint='(PHP 5>=5.3.0) mixed SplDoublyLinkedList::top(void) - Peeks at the node from the end of the doubly linked list.' flags='130'/>
<tag menu='Spl' submenu='SplDoublyLinkedList class' inserttext='SplDoublyLinkedList::unshift(|)' hint='(PHP 5>=5.3.0) void SplDoublyLinkedList::unshift(mixed $value) - Prepends the doubly linked list with an element.' flags='130'/>
<tag menu='Spl' submenu='SplDoublyLinkedList class' inserttext='SplDoublyLinkedList::valid()' hint='(PHP 5>=5.3.0) bool SplDoublyLinkedList::valid(void) - Check whether the doubly linked list contains more nodes.' flags='130'/>
<tag menu='Spl' submenu='SplFileInfo class' inserttext='SplFileInfo::__construct(|)' hint='(PHP 5>=5.1.2) SplFileInfo::__construct(string $file_name) - Construct a new SplFileInfo object.' flags='130'/>
<tag menu='Spl' submenu='SplFileInfo class' inserttext='SplFileInfo::__toString()' hint='(PHP 5>=5.1.2) public void SplFileInfo::__toString(void) - Returns the path to the file as a string.' flags='130'/>
<tag menu='Spl' submenu='SplFileInfo class' inserttext='SplFileInfo::getATime()' hint='(PHP 5>=5.1.2) public int SplFileInfo::getATime(void) - Gets last access time of the file.' flags='130'/>
<tag menu='Spl' submenu='SplFileInfo class' inserttext='SplFileInfo::getBasename(|)' hint='(PHP 5>=5.2.2) public string SplFileInfo::getBasename([string $suffix]) - Gets the base name of the file.' flags='130'/>
<tag menu='Spl' submenu='SplFileInfo class' inserttext='SplFileInfo::getCTime()' hint='(PHP 5>=5.1.2) public int SplFileInfo::getCTime(void) - Gets the inode change time.' flags='130'/>
<tag menu='Spl' submenu='SplFileInfo class' inserttext='SplFileInfo::getFileInfo(|)' hint='(PHP 5>=5.1.2) public SplFileInfo SplFileInfo::getFileInfo([string $class_name]) - Gets an SplFileInfo object for the file.' flags='130'/>
<tag menu='Spl' submenu='SplFileInfo class' inserttext='SplFileInfo::getFilename()' hint='(PHP 5>=5.1.2) public string SplFileInfo::getFilename(void) - Gets the filename.' flags='130'/>
<tag menu='Spl' submenu='SplFileInfo class' inserttext='SplFileInfo::getGroup()' hint='(PHP 5>=5.1.2) public int SplFileInfo::getGroup(void) - Gets the file group.' flags='130'/>
<tag menu='Spl' submenu='SplFileInfo class' inserttext='SplFileInfo::getInode()' hint='(PHP 5>=5.1.2) public int SplFileInfo::getInode(void) - Gets the inode for the file.' flags='130'/>
<tag menu='Spl' submenu='SplFileInfo class' inserttext='SplFileInfo::getLinkTarget()' hint='(PHP 5>=5.2.2) public string SplFileInfo::getLinkTarget(void) - Gets the target of a link.' flags='130'/>
<tag menu='Spl' submenu='SplFileInfo class' inserttext='SplFileInfo::getMTime()' hint='(PHP 5>=5.1.2) public int SplFileInfo::getMTime(void) - Gets the last modified time.' flags='130'/>
<tag menu='Spl' submenu='SplFileInfo class' inserttext='SplFileInfo::getOwner()' hint='(PHP 5>=5.1.2) public int SplFileInfo::getOwner(void) - Gets the owner of the file.' flags='130'/>
<tag menu='Spl' submenu='SplFileInfo class' inserttext='SplFileInfo::getPath()' hint='(PHP 5>=5.1.2) public string SplFileInfo::getPath(void) - Gets the path without filename.' flags='130'/>
<tag menu='Spl' submenu='SplFileInfo class' inserttext='SplFileInfo::getPathInfo(|)' hint='(PHP 5>=5.1.2) public SplFileInfo SplFileInfo::getPathInfo([string $class_name]) - Gets an SplFileInfo object for the path.' flags='130'/>
<tag menu='Spl' submenu='SplFileInfo class' inserttext='SplFileInfo::getPathname()' hint='(PHP 5>=5.1.2) public string SplFileInfo::getPathname(void) - Gets the path to the file.' flags='130'/>
<tag menu='Spl' submenu='SplFileInfo class' inserttext='SplFileInfo::getPerms()' hint='(PHP 5>=5.1.2) public int SplFileInfo::getPerms(void) - Gets file permissions.' flags='130'/>
<tag menu='Spl' submenu='SplFileInfo class' inserttext='SplFileInfo::getRealPath()' hint='(PHP 5>=5.2.2) public string SplFileInfo::getRealPath(void) - Gets absolute path to file.' flags='130'/>
<tag menu='Spl' submenu='SplFileInfo class' inserttext='SplFileInfo::getSize()' hint='(PHP 5>=5.1.2) public int SplFileInfo::getSize(void) - Gets file size.' flags='130'/>
<tag menu='Spl' submenu='SplFileInfo class' inserttext='SplFileInfo::getType()' hint='(PHP 5>=5.1.2) public string SplFileInfo::getType(void) - Gets file type.' flags='130'/>
<tag menu='Spl' submenu='SplFileInfo class' inserttext='SplFileInfo::isDir()' hint='(PHP 5>=5.1.2) public bool SplFileInfo::isDir(void) - Tells if the file is a directory.' flags='130'/>
<tag menu='Spl' submenu='SplFileInfo class' inserttext='SplFileInfo::isExecutable()' hint='(PHP 5>=5.1.2) public bool SplFileInfo::isExecutable(void) - Tells if the file is executable.' flags='130'/>
<tag menu='Spl' submenu='SplFileInfo class' inserttext='SplFileInfo::isFile()' hint='(PHP 5>=5.1.2) public bool SplFileInfo::isFile(void) - Tells if the object references a regular file.' flags='130'/>
<tag menu='Spl' submenu='SplFileInfo class' inserttext='SplFileInfo::isLink()' hint='(PHP 5>=5.1.2) public bool SplFileInfo::isLink(void) - Tells if the file is a link.' flags='130'/>
<tag menu='Spl' submenu='SplFileInfo class' inserttext='SplFileInfo::isReadable()' hint='(PHP 5>=5.1.2) public bool SplFileInfo::isReadable(void) - Tells if file is readable.' flags='130'/>
<tag menu='Spl' submenu='SplFileInfo class' inserttext='SplFileInfo::isWritable()' hint='(PHP 5>=5.1.2) public bool SplFileInfo::isWritable(void) - Tells if the entry is writable.' flags='130'/>
<tag menu='Spl' submenu='SplFileInfo class' inserttext='SplFileInfo::openFile(|)' hint='(PHP 5>=5.1.2) public SplFileObject SplFileInfo::openFile([string $open_mode=r [, bool $use_include_path=false [, resource $context=NULL ]]]) - Gets an SplFileObject object for the file.' flags='130'/>
<tag menu='Spl' submenu='SplFileInfo class' inserttext='SplFileInfo::setFileClass(|)' hint='(PHP 5>=5.1.2) public void SplFileInfo::setFileClass([string $class_name]) - Sets the class name used with SplFileInfo::openFile().' flags='130'/>
<tag menu='Spl' submenu='SplFileInfo class' inserttext='SplFileInfo::setInfoClass(|)' hint='(PHP 5>=5.1.2) public void SplFileInfo::setInfoClass([string $class_name]) - Sets the class used with getFileInfo and getPathInfo.' flags='130'/>
<tag menu='Spl' submenu='SplFileObject class-->>S - SplFileObject::fte' inserttext='SplFileObject::__construct(|)' hint='(PHP 5>=5.1.0) SplFileObject::__construct(string $filename [, string $open_mode="r" [, bool $use_include_path=false [, resource $context ]]]) - Construct a new file object.' flags='130'/>
<tag menu='Spl' submenu='SplFileObject class-->>S - SplFileObject::fte' inserttext='SplFileObject::__toString(|)' hint='(PHP 5>=5.1.0) Alias of SplFileObject::current().' flags='130'/>
<tag menu='Spl' submenu='SplFileObject class-->>S - SplFileObject::fte' inserttext='SplFileObject::current()' hint='(PHP 5>=5.1.0) public string|array SplFileObject::current(void) - Retrieve current line of file.' flags='130'/>
<tag menu='Spl' submenu='SplFileObject class-->>S - SplFileObject::fte' inserttext='SplFileObject::eof()' hint='(PHP 5>=5.1.0) public boolean SplFileObject::eof(void) - Reached end of file.' flags='130'/>
<tag menu='Spl' submenu='SplFileObject class-->>S - SplFileObject::fte' inserttext='SplFileObject::fflush()' hint='(PHP 5>=5.1.0) public boolean SplFileObject::fflush(void) - Flushes the output to the file.' flags='130'/>
<tag menu='Spl' submenu='SplFileObject class-->>S - SplFileObject::fte' inserttext='SplFileObject::fgetc()' hint='(PHP 5>=5.1.0) public string SplFileObject::fgetc(void) - Gets character from file.' flags='130'/>
<tag menu='Spl' submenu='SplFileObject class-->>S - SplFileObject::fte' inserttext='SplFileObject::fgetcsv(|)' hint='(PHP 5>=5.1.0) public array SplFileObject::fgetcsv([string $delimiter="," [, string $enclosure="\"" [, string $escape="\\" ]]]) - Gets line from file and parse as CSV fields.' flags='130'/>
<tag menu='Spl' submenu='SplFileObject class-->>S - SplFileObject::fte' inserttext='SplFileObject::fgets()' hint='(PHP 5>=5.1.0) public string SplFileObject::fgets(void) - Gets line from file.' flags='130'/>
<tag menu='Spl' submenu='SplFileObject class-->>S - SplFileObject::fte' inserttext='SplFileObject::fgetss(|)' hint='(PHP 5>=5.1.0) public string SplFileObject::fgetss([string $allowable_tags]) - Gets line from file and strip HTML tags.' flags='130'/>
<tag menu='Spl' submenu='SplFileObject class-->>S - SplFileObject::fte' inserttext='SplFileObject::flock(|)' hint='(PHP 5>=5.1.0) public bool SplFileObject::flock(int $operation [, int &amp;$wouldblock]) - Portable file locking.' flags='130'/>
<tag menu='Spl' submenu='SplFileObject class-->>S - SplFileObject::fte' inserttext='SplFileObject::fpassthru()' hint='(PHP 5>=5.1.0) public int SplFileObject::fpassthru(void) - Output all remaining data on a file pointer.' flags='130'/>
<tag menu='Spl' submenu='SplFileObject class-->>S - SplFileObject::fte' inserttext='SplFileObject::fscanf(|)' hint='(PHP 5>=5.1.0) public mixed SplFileObject::fscanf(string $format [, mixed &amp;$...]) - Parses input from file according to a format.' flags='130'/>
<tag menu='Spl' submenu='SplFileObject class-->>S - SplFileObject::fte' inserttext='SplFileObject::fseek(|)' hint='(PHP 5>=5.1.0) public int SplFileObject::fseek(int $offset [, int $whence=SEEK_SET]) - Seek to a position.' flags='130'/>
<tag menu='Spl' submenu='SplFileObject class-->>S - SplFileObject::fte' inserttext='SplFileObject::fstat()' hint='(PHP 5>=5.1.0) public array SplFileObject::fstat(void) - Gets information about the file.' flags='130'/>
<tag menu='Spl' submenu='SplFileObject class-->>S - SplFileObject::fte' inserttext='SplFileObject::ftell()' hint='(PHP 5>=5.1.0) public int SplFileObject::ftell(void) - Return current file position.' flags='130'/>
<tag menu='Spl' submenu='SplFileObject class-->>SplFileObject::ftr - S' inserttext='SplFileObject::ftruncate(|)' hint='(PHP 5>=5.1.0) public bool SplFileObject::ftruncate(int $size) - Truncates the file to a given length.' flags='130'/>
<tag menu='Spl' submenu='SplFileObject class-->>SplFileObject::ftr - S' inserttext='SplFileObject::fwrite(|)' hint='(PHP 5>=5.1.0) public int SplFileObject::fwrite(string $str [, int $length]) - Write to file.' flags='130'/>
<tag menu='Spl' submenu='SplFileObject class-->>SplFileObject::ftr - S' inserttext='SplFileObject::getChildren()' hint='(PHP 5>=5.1.0) public void SplFileObject::getChildren(void) - No purpose.' flags='130'/>
<tag menu='Spl' submenu='SplFileObject class-->>SplFileObject::ftr - S' inserttext='SplFileObject::getCsvControl()' hint='(PHP 5>=5.2.0) public array SplFileObject::getCsvControl(void) - Get the delimiter and enclosure character for CSV.' flags='130'/>
<tag menu='Spl' submenu='SplFileObject class-->>SplFileObject::ftr - S' inserttext='SplFileObject::getCurrentLine(|)' hint='(PHP 5>=5.1.2) Alias of SplFileObject::fgets().' flags='130'/>
<tag menu='Spl' submenu='SplFileObject class-->>SplFileObject::ftr - S' inserttext='SplFileObject::getFlags()' hint='(PHP 5>=5.1.0) public int SplFileObject::getFlags(void) - Gets flags for the SplFileObject.' flags='130'/>
<tag menu='Spl' submenu='SplFileObject class-->>SplFileObject::ftr - S' inserttext='SplFileObject::getMaxLineLen()' hint='(PHP 5>=5.1.0) public int SplFileObject::getMaxLineLen(void) - Get maximum line length.' flags='130'/>
<tag menu='Spl' submenu='SplFileObject class-->>SplFileObject::ftr - S' inserttext='SplFileObject::hasChildren()' hint='(PHP 5>=5.1.2) public bool SplFileObject::hasChildren(void) - SplFileObject does not have children.' flags='130'/>
<tag menu='Spl' submenu='SplFileObject class-->>SplFileObject::ftr - S' inserttext='SplFileObject::key()' hint='(PHP 5>=5.1.0) public int SplFileObject::key(void) - Get line number.' flags='130'/>
<tag menu='Spl' submenu='SplFileObject class-->>SplFileObject::ftr - S' inserttext='SplFileObject::next()' hint='(PHP 5>=5.1.0) public void SplFileObject::next(void) - Read next line.' flags='130'/>
<tag menu='Spl' submenu='SplFileObject class-->>SplFileObject::ftr - S' inserttext='SplFileObject::rewind()' hint='(PHP 5>=5.1.0) public void SplFileObject::rewind(void) - Rewind the file to the first line.' flags='130'/>
<tag menu='Spl' submenu='SplFileObject class-->>SplFileObject::ftr - S' inserttext='SplFileObject::seek(|)' hint='(PHP 5>=5.1.0) public void SplFileObject::seek(int $line_pos) - Seek to specified line.' flags='130'/>
<tag menu='Spl' submenu='SplFileObject class-->>SplFileObject::ftr - S' inserttext='SplFileObject::setCsvControl(|)' hint='(PHP 5>=5.2.0) public void SplFileObject::setCsvControl([string $delimiter="," [, string $enclosure="\"" [, string $escape="\\" ]]]) - Set the delimiter and enclosure character for CSV.' flags='130'/>
<tag menu='Spl' submenu='SplFileObject class-->>SplFileObject::ftr - S' inserttext='SplFileObject::setFlags(|)' hint='(PHP 5>=5.1.0) public void SplFileObject::setFlags(int $flags) - Sets flags for the SplFileObject.' flags='130'/>
<tag menu='Spl' submenu='SplFileObject class-->>SplFileObject::ftr - S' inserttext='SplFileObject::setMaxLineLen(|)' hint='(PHP 5>=5.1.0) public void SplFileObject::setMaxLineLen(int $max_len) - Set maximum line length.' flags='130'/>
<tag menu='Spl' submenu='SplFileObject class-->>SplFileObject::ftr - S' inserttext='SplFileObject::valid()' hint='(PHP 5>=5.1.0) public bool SplFileObject::valid(void) - Not at EOF.' flags='130'/>
<tag menu='Spl' submenu='SplFixedArray class' inserttext='SplFixedArray::__construct(|)' hint='(PHP 5>=5.3.0) Constructs a new fixed array.' flags='130'/>
<tag menu='Spl' submenu='SplFixedArray class' inserttext='SplFixedArray::count()' hint='(PHP 5>=5.3.0) public int SplFixedArray::count(void) - Returns the size of the array.' flags='130'/>
<tag menu='Spl' submenu='SplFixedArray class' inserttext='SplFixedArray::current()' hint='(PHP 5>=5.3.0) public mixed SplFixedArray::current(void) - Return current array entry.' flags='130'/>
<tag menu='Spl' submenu='SplFixedArray class' inserttext='SplFixedArray::fromArray(|)' hint='(PHP 5>=5.3.0) public static SplFixedArray SplFixedArray::fromArray(array $array [, boolean $save_indexes=true]) - Import a PHP array in a SplFixedArray instance.' flags='130'/>
<tag menu='Spl' submenu='SplFixedArray class' inserttext='SplFixedArray::getSize()' hint='(PHP 5>=5.3.0) public int SplFixedArray::getSize(void) - Gets the size of the array.' flags='130'/>
<tag menu='Spl' submenu='SplFixedArray class' inserttext='SplFixedArray::key()' hint='(PHP 5>=5.3.0) public int SplFixedArray::key(void) - Return current array index.' flags='130'/>
<tag menu='Spl' submenu='SplFixedArray class' inserttext='SplFixedArray::next()' hint='(PHP 5>=5.3.0) public void SplFixedArray::next(void) - Move to next entry.' flags='130'/>
<tag menu='Spl' submenu='SplFixedArray class' inserttext='SplFixedArray::offsetExists(|)' hint='(PHP 5>=5.3.0) public bool SplFixedArray::offsetExists(int $index) - Returns whether the requested index exists.' flags='130'/>
<tag menu='Spl' submenu='SplFixedArray class' inserttext='SplFixedArray::offsetGet(|)' hint='(PHP 5>=5.3.0) public mixed SplFixedArray::offsetGet(int $index) - Returns the value at the specified index.' flags='130'/>
<tag menu='Spl' submenu='SplFixedArray class' inserttext='SplFixedArray::offsetSet(|)' hint='(PHP 5>=5.3.0) public void SplFixedArray::offsetSet(int $index, mixed $newval) - Sets a new value at a specified index.' flags='130'/>
<tag menu='Spl' submenu='SplFixedArray class' inserttext='SplFixedArray::offsetUnset(|)' hint='(PHP 5>=5.3.0) public void SplFixedArray::offsetUnset(int $index) - Unsets the value at the specified $index.' flags='130'/>
<tag menu='Spl' submenu='SplFixedArray class' inserttext='SplFixedArray::rewind()' hint='(PHP 5>=5.3.0) public void SplFixedArray::rewind(void) - Rewind iterator back to the start.' flags='130'/>
<tag menu='Spl' submenu='SplFixedArray class' inserttext='SplFixedArray::setSize(|)' hint='(PHP 5>=5.3.0) public int SplFixedArray::setSize(int $size) - Change the size of an array.' flags='130'/>
<tag menu='Spl' submenu='SplFixedArray class' inserttext='SplFixedArray::toArray()' hint='(PHP 5>=5.3.0) public array SplFixedArray::toArray(void) - Returns a PHP array from the fixed array.' flags='130'/>
<tag menu='Spl' submenu='SplFixedArray class' inserttext='SplFixedArray::valid()' hint='(PHP 5>=5.3.0) public bool SplFixedArray::valid(void) - Check whether the array contains more elements.' flags='130'/>
<tag menu='Spl' submenu='SplHeap class' inserttext='SplHeap::__construct(|)' hint='(PHP 5>=5.3.0) Constructs a new empty heap.' flags='130'/>
<tag menu='Spl' submenu='SplHeap class' inserttext='SplHeap::compare(|)' hint='(PHP 5>=5.3.0) abstract int SplHeap::compare(mixed $value1, mixed $value2) - Compare elements in order to place them correctly in the heap while sifting up.' flags='130'/>
<tag menu='Spl' submenu='SplHeap class' inserttext='SplHeap::count()' hint='(PHP 5>=5.3.0) int SplHeap::count(void) - Counts the number of elements in the heap.' flags='130'/>
<tag menu='Spl' submenu='SplHeap class' inserttext='SplHeap::current()' hint='(PHP 5>=5.3.0) mixed SplHeap::current(void) - Return current node pointed by the iterator.' flags='130'/>
<tag menu='Spl' submenu='SplHeap class' inserttext='SplHeap::extract()' hint='(PHP 5>=5.3.0) mixed SplHeap::extract(void) - Extracts a node from top of the heap and sift up.' flags='130'/>
<tag menu='Spl' submenu='SplHeap class' inserttext='SplHeap::insert(|)' hint='(PHP 5>=5.3.0) void SplHeap::insert(mixed $value) - Inserts an element in the heap by sifting it up.' flags='130'/>
<tag menu='Spl' submenu='SplHeap class' inserttext='SplHeap::isEmpty()' hint='(PHP 5>=5.3.0) bool SplHeap::isEmpty(void) - Checks whether the heap is empty.' flags='130'/>
<tag menu='Spl' submenu='SplHeap class' inserttext='SplHeap::key()' hint='(PHP 5>=5.3.0) mixed SplHeap::key(void) - Return current node index.' flags='130'/>
<tag menu='Spl' submenu='SplHeap class' inserttext='SplHeap::next()' hint='(PHP 5>=5.3.0) void SplHeap::next(void) - Move to the next node.' flags='130'/>
<tag menu='Spl' submenu='SplHeap class' inserttext='SplHeap::recoverFromCorruption()' hint='(PHP 5>=5.3.0) void SplHeap::recoverFromCorruption(void) - Recover from the corrupted state and allow further actions on the heap.' flags='130'/>
<tag menu='Spl' submenu='SplHeap class' inserttext='SplHeap::rewind()' hint='(PHP 5>=5.3.0) void SplHeap::rewind(void) - Rewind iterator back to the start (no-op).' flags='130'/>
<tag menu='Spl' submenu='SplHeap class' inserttext='SplHeap::top()' hint='(PHP 5>=5.3.0) mixed SplHeap::top(void) - Peeks at the node from the top of the heap.' flags='130'/>
<tag menu='Spl' submenu='SplHeap class' inserttext='SplHeap::valid()' hint='(PHP 5>=5.3.0) bool SplHeap::valid(void) - Check whether the heap contains more nodes.' flags='130'/>
<tag menu='Spl' submenu='SplMaxHeap class' inserttext='SplMaxHeap::compare(|)' hint='(PHP 5>=5.3.0) void SplMaxHeap::compare(mixed $value1, mixed $value2) - Compare elements in order to place them correctly in the heap while sifting up.' flags='130'/>
<tag menu='Spl' submenu='SplMinHeap class' inserttext='SplMinHeap::compare(|)' hint='(PHP 5>=5.3.0) void SplMinHeap::compare(mixed $value1, mixed $value2) - Compare elements in order to place them correctly in the heap while sifting up.' flags='130'/>
<tag menu='Spl' submenu='SplObjectStorage class' inserttext='SplObjectStorage::addAll(|)' hint='(PHP 5>=5.3.0) public void SplObjectStorage::addAll(SplObjectStorage $storage) - Adds all objects from another storage.' flags='130'/>
<tag menu='Spl' submenu='SplObjectStorage class' inserttext='SplObjectStorage::attach(|)' hint='(PHP 5>=5.1.0) public void SplObjectStorage::attach(object $object [, mixed $data=NULL]) - Adds an object in the storage.' flags='130'/>
<tag menu='Spl' submenu='SplObjectStorage class' inserttext='SplObjectStorage::contains(|)' hint='(PHP 5>=5.1.0) public boolean SplObjectStorage::contains(object $object) - Checks if the storage contains a specific object.' flags='130'/>
<tag menu='Spl' submenu='SplObjectStorage class' inserttext='SplObjectStorage::count()' hint='(PHP 5>=5.1.0) public int SplObjectStorage::count(void) - Returns the number of objects in the storage.' flags='130'/>
<tag menu='Spl' submenu='SplObjectStorage class' inserttext='SplObjectStorage::current()' hint='(PHP 5>=5.1.0) public object SplObjectStorage::current(void) - Returns the current storage entry.' flags='130'/>
<tag menu='Spl' submenu='SplObjectStorage class' inserttext='SplObjectStorage::detach(|)' hint='(PHP 5>=5.1.0) public void SplObjectStorage::detach(object $object) - Removes an object from the storage.' flags='130'/>
<tag menu='Spl' submenu='SplObjectStorage class' inserttext='SplObjectStorage::getInfo()' hint='(PHP 5>=5.3.0) public mixed SplObjectStorage::getInfo(void) - Returns the data associated with the current iterator entry.' flags='130'/>
<tag menu='Spl' submenu='SplObjectStorage class' inserttext='SplObjectStorage::key()' hint='(PHP 5>=5.1.0) public int SplObjectStorage::key(void) - Returns the index at which the iterator currently is.' flags='130'/>
<tag menu='Spl' submenu='SplObjectStorage class' inserttext='SplObjectStorage::next()' hint='(PHP 5>=5.1.0) public void SplObjectStorage::next(void) - Move to the next entry.' flags='130'/>
<tag menu='Spl' submenu='SplObjectStorage class' inserttext='SplObjectStorage::offsetExists(|)' hint='(PHP 5>=5.3.0) public boolean SplObjectStorage::offsetExists(object $object) - Checks whether an object exists in the storage.' flags='130'/>
<tag menu='Spl' submenu='SplObjectStorage class' inserttext='SplObjectStorage::offsetGet(|)' hint='(PHP 5>=5.3.0) public mixed SplObjectStorage::offsetGet(object $object) - Returns the data associated with an object.' flags='130'/>
<tag menu='Spl' submenu='SplObjectStorage class' inserttext='SplObjectStorage::offsetSet(|)' hint='(PHP 5>=5.3.0) public void SplObjectStorage::offsetSet(object $object, mixed $info) - Associates data to an object in the storage.' flags='130'/>
<tag menu='Spl' submenu='SplObjectStorage class' inserttext='SplObjectStorage::offsetUnset(|)' hint='(PHP 5>=5.3.0) public void SplObjectStorage::offsetUnset(object $object) - Removes an object from the storage.' flags='130'/>
<tag menu='Spl' submenu='SplObjectStorage class' inserttext='SplObjectStorage::removeAll(|)' hint='(PHP 5>=5.3.0) public void SplObjectStorage::removeAll(SplObjectStorage $storage) - Removes objects contained in another storage from the current storage.' flags='130'/>
<tag menu='Spl' submenu='SplObjectStorage class' inserttext='SplObjectStorage::rewind()' hint='(PHP 5>=5.1.0) public void SplObjectStorage::rewind(void) - Rewind the iterator to the first storage element.' flags='130'/>
<tag menu='Spl' submenu='SplObjectStorage class' inserttext='SplObjectStorage::serialize()' hint='(PHP 5>=5.2.2) public string SplObjectStorage::serialize(void) - Serializes the storage.' flags='130'/>
<tag menu='Spl' submenu='SplObjectStorage class' inserttext='SplObjectStorage::setInfo(|)' hint='(PHP 5>=5.3.0) public void SplObjectStorage::setInfo(mixed $data) - Sets the data associated with the current iterator entry.' flags='130'/>
<tag menu='Spl' submenu='SplObjectStorage class' inserttext='SplObjectStorage::unserialize(|)' hint='(PHP 5>=5.2.2) public void SplObjectStorage::unserialize(string $serialized) - Unserializes a storage from its string representation.' flags='130'/>
<tag menu='Spl' submenu='SplObjectStorage class' inserttext='SplObjectStorage::valid()' hint='(PHP 5>=5.1.0) public boolean SplObjectStorage::valid(void) - Returns if the current iterator entry is valid.' flags='130'/>
<tag menu='Spl' submenu='SplObserver interface' inserttext='SplObserver::update(|)' hint='(PHP 5>=5.1.0) abstract public void SplObserver::update(SplSubject $subject) - Receive update from subject.' flags='130'/>
<tag menu='Spl' submenu='SplPriorityQueue class' inserttext='SplPriorityQueue::__construct(|)' hint='(PHP 5>=5.3.0) Constructs a new empty queue.' flags='130'/>
<tag menu='Spl' submenu='SplPriorityQueue class' inserttext='SplPriorityQueue::compare(|)' hint='(PHP 5>=5.3.0) int SplPriorityQueue::compare(mixed $priority1, mixed $priority2) - Compare priorities in order to place elements correctly in the heap while sifting up.' flags='130'/>
<tag menu='Spl' submenu='SplPriorityQueue class' inserttext='SplPriorityQueue::count()' hint='(PHP 5>=5.3.0) int SplPriorityQueue::count(void) - Counts the number of elements in the queue.' flags='130'/>
<tag menu='Spl' submenu='SplPriorityQueue class' inserttext='SplPriorityQueue::current()' hint='(PHP 5>=5.3.0) mixed SplPriorityQueue::current(void) - Return current node pointed by the iterator.' flags='130'/>
<tag menu='Spl' submenu='SplPriorityQueue class' inserttext='SplPriorityQueue::extract()' hint='(PHP 5>=5.3.0) mixed SplPriorityQueue::extract(void) - Extracts a node from top of the heap and sift up.' flags='130'/>
<tag menu='Spl' submenu='SplPriorityQueue class' inserttext='SplPriorityQueue::insert(|)' hint='(PHP 5>=5.3.0) void SplPriorityQueue::insert(mixed $value, mixed $priority) - Inserts an element in the queue by sifting it up.' flags='130'/>
<tag menu='Spl' submenu='SplPriorityQueue class' inserttext='SplPriorityQueue::isEmpty()' hint='(PHP 5>=5.3.0) bool SplPriorityQueue::isEmpty(void) - Checks whether the queue is empty.' flags='130'/>
<tag menu='Spl' submenu='SplPriorityQueue class' inserttext='SplPriorityQueue::key()' hint='(PHP 5>=5.3.0) mixed SplPriorityQueue::key(void) - Return current node index.' flags='130'/>
<tag menu='Spl' submenu='SplPriorityQueue class' inserttext='SplPriorityQueue::next()' hint='(PHP 5>=5.3.0) void SplPriorityQueue::next(void) - Move to the next node.' flags='130'/>
<tag menu='Spl' submenu='SplPriorityQueue class' inserttext='SplPriorityQueue::recoverFromCorruption()' hint='(PHP 5>=5.3.0) void SplPriorityQueue::recoverFromCorruption(void) - Recover from the corrupted state and allow further actions on the queue.' flags='130'/>
<tag menu='Spl' submenu='SplPriorityQueue class' inserttext='SplPriorityQueue::rewind()' hint='(PHP 5>=5.3.0) void SplPriorityQueue::rewind(void) - Rewind iterator back to the start (no-op).' flags='130'/>
<tag menu='Spl' submenu='SplPriorityQueue class' inserttext='SplPriorityQueue::setExtractFlags(|)' hint='(PHP 5>=5.3.0) void SplPriorityQueue::setExtractFlags(int $flags) - Sets the mode of extraction.' flags='130'/>
<tag menu='Spl' submenu='SplPriorityQueue class' inserttext='SplPriorityQueue::top()' hint='(PHP 5>=5.3.0) mixed SplPriorityQueue::top(void) - Peeks at the node from the top of the queue.' flags='130'/>
<tag menu='Spl' submenu='SplPriorityQueue class' inserttext='SplPriorityQueue::valid()' hint='(PHP 5>=5.3.0) bool SplPriorityQueue::valid(void) - Check whether the queue contains more nodes.' flags='130'/>
<tag menu='Spl' submenu='SplQueue class' inserttext='SplQueue::__construct(|)' hint='(PHP 5>=5.3.0) Constructs a new queue implemented using a doubly linked list.' flags='130'/>
<tag menu='Spl' submenu='SplQueue class' inserttext='SplQueue::dequeue()' hint='(PHP 5>=5.3.0) mixed SplQueue::dequeue(void) - Dequeues a node from the queue.' flags='130'/>
<tag menu='Spl' submenu='SplQueue class' inserttext='SplQueue::enqueue(|)' hint='(PHP 5>=5.3.0) void SplQueue::enqueue(mixed $value) - Adds an element to the queue.' flags='130'/>
<tag menu='Spl' submenu='SplQueue class' inserttext='SplQueue::setIteratorMode(|)' hint='(PHP 5>=5.3.0) void SplQueue::setIteratorMode(int $mode) - Sets the mode of iteration.' flags='130'/>
<tag menu='Spl' submenu='SplStack class' inserttext='SplStack::__construct(|)' hint='(PHP 5>=5.3.0) Constructs a new stack implemented using a doubly linked list.' flags='130'/>
<tag menu='Spl' submenu='SplStack class' inserttext='SplStack::setIteratorMode(|)' hint='(PHP 5>=5.3.0) void SplStack::setIteratorMode(int $mode) - Sets the mode of iteration.' flags='130'/>
<tag menu='Spl' submenu='SplSubject interface' inserttext='SplSubject::attach(|)' hint='(PHP 5>=5.1.0) abstract public void SplSubject::attach(SplObserver $observer) - Attach an SplObserver.' flags='130'/>
<tag menu='Spl' submenu='SplSubject interface' inserttext='SplSubject::detach(|)' hint='(PHP 5>=5.1.0) abstract public void SplSubject::detach(SplObserver $observer) - Detach an observer.' flags='130'/>
<tag menu='Spl' submenu='SplSubject interface' inserttext='SplSubject::notify()' hint='(PHP 5>=5.1.0) abstract public void SplSubject::notify(void) - Notify an observer.' flags='130'/>
<tag menu='Spl' submenu='SplTempFileObject class' inserttext='SplTempFileObject::__construct(|)' hint='(PHP 5>=5.1.2) SplTempFileObject::__construct([integer $max_memory]) - Construct a new temporary file object.' flags='130'/>
<tag menu='T' submenu='Tidy class' inserttext='tidy::__construct(|)' hint='(PHP 5, PECL tidy>=0.5.2) tidy tidy::__construct([string $filename [, mixed $config [, string $encoding [, bool $use_include_path ]]]]) - Constructs a new tidy object.' flags='130'/>
<tag menu='T' submenu='Tidy class' inserttext='tidy::body()' hint='(PHP 5, PECL tidy 0.5.2-1.0) tidyNode tidy::body(void) - Returns a tidyNode object starting from the &lt;body> tag of the tidy parse tree.' flags='130'/>
<tag menu='T' submenu='Tidy class' inserttext='tidy::cleanRepair()' hint='(PHP 5, PECL tidy>=0.5.2) bool tidy::cleanRepair(void) - Execute configured cleanup and repair operations on parsed markup.' flags='130'/>
<tag menu='T' submenu='Tidy class' inserttext='tidy::diagnose()' hint='(PHP 5, PECL tidy>=0.5.2) bool tidy::diagnose(void) - Run configured diagnostics on parsed and repaired markup.' flags='130'/>
<tag menu='T' submenu='Tidy class' inserttext='tidy::getConfig()' hint='(PHP 5, PECL tidy>=0.7.0) array tidy::getConfig(void) - Get current Tidy configuration.' flags='130'/>
<tag menu='T' submenu='Tidy class' inserttext='tidy::getOpt(|)' hint='(PHP 5, PECL tidy>=0.5.2) mixed tidy::getOpt(string $option) - Returns the value of the specified configuration option for the tidy document.' flags='130'/>
<tag menu='T' submenu='Tidy class' inserttext='tidy::getRelease()' hint='(PHP 5, PECL tidy>=0.5.2) string tidy::getRelease(void) - Get release date (version) for Tidy library.' flags='130'/>
<tag menu='T' submenu='Tidy class' inserttext='tidy::getStatus()' hint='(PHP 5, PECL tidy>=0.5.2) int tidy::getStatus(void) - Get status of specified document.' flags='130'/>
<tag menu='T' submenu='Tidy class' inserttext='tidy::getoptdoc(|)' hint='(PHP 5>=5.1.0) string tidy::getOptDoc(string $optname) - Returns the documentation for the given option name.' flags='130'/>
<tag menu='T' submenu='Tidy class' inserttext='tidy::head()' hint='(PHP 5, PECL tidy 0.5.2-1.0.0) tidyNode tidy::head(void) - Returns a tidyNode object starting from the &lt;head> tag of the tidy parse tree.' flags='130'/>
<tag menu='T' submenu='Tidy class' inserttext='tidy::html()' hint='(PHP 5, PECL tidy 0.5.2-1.0.0) tidyNode tidy::html(void) - Returns a tidyNode object starting from the &lt;html> tag of the tidy parse tree.' flags='130'/>
<tag menu='T' submenu='Tidy class' inserttext='tidy::htmlver(|)' hint='(PHP 5, PECL tidy>=0.5.2) int tidy::getHtmlVer(void) - Get the Detected HTML version for the specified document.' flags='130'/>
<tag menu='T' submenu='Tidy class' inserttext='tidy::isXhtml()' hint='(PHP 5, PECL tidy>=0.5.2) bool tidy::isXhtml(void) - Indicates if the document is a XHTML document.' flags='130'/>
<tag menu='T' submenu='Tidy class' inserttext='tidy::isXml()' hint='(PHP 5, PECL tidy>=0.5.2) bool tidy::isXml(void) - Indicates if the document is a generic (non HTML/XHTML) XML document.' flags='130'/>
<tag menu='T' submenu='Tidy class' inserttext='tidy::parseFile(|)' hint='(PHP 5, PECL tidy>=0.5.2) bool tidy::parseFile(string $filename [, mixed $config [, string $encoding [, bool $use_include_path=false ]]]) - Parse markup in file or URI.' flags='130'/>
<tag menu='T' submenu='Tidy class' inserttext='tidy::parseString(|)' hint='(PHP 5, PECL tidy>=0.5.2) bool tidy::parseString(string $input [, mixed $config [, string $encoding ]]) - Parse a document stored in a string.' flags='130'/>
<tag menu='T' submenu='Tidy class' inserttext='tidy::repairFile(|)' hint='(PHP 5, PECL tidy>=0.7.0) string tidy::repairFile(string $filename [, mixed $config [, string $encoding [, bool $use_include_path=false ]]]) - Repair a file and return it as a string.' flags='130'/>
<tag menu='T' submenu='Tidy class' inserttext='tidy::repairString(|)' hint='(PHP 5, PECL tidy>=0.7.0) string tidy::repairString(string $data [, mixed $config [, string $encoding ]]) - Repair a string using an optionally provided configuration file.' flags='130'/>
<tag menu='T' submenu='Tidy class' inserttext='tidy::root()' hint='(PHP 5, PECL tidy 0.5.2-1.0.0) tidyNode tidy::root(void) - Returns a tidyNode object representing the root of the tidy parse tree.' flags='130'/>
<tag menu='T' submenu='TidyNode class' inserttext='ob_tidyhandler(|)' hint='(PHP 5) string ob_tidyhandler(string $input [, int $mode]) - ob_start callback function to repair the buffer.' flags='130'/>
<tag menu='T' submenu='TidyNode class' inserttext='tidyNode::getParent()' hint='(PHP 5>=5.2.2) tidyNode tidyNode::getParent(void) - Returns the parent node of the current node.' flags='130'/>
<tag menu='T' submenu='TidyNode class' inserttext='tidyNode::hasChildren()' hint='(PHP 5>=5.0.1) bool tidyNode::hasChildren(void) - Checks if a node has children.' flags='130'/>
<tag menu='T' submenu='TidyNode class' inserttext='tidyNode::hasSiblings()' hint='(PHP 5>=5.0.1) bool tidyNode::hasSiblings(void) - Checks if a node has siblings.' flags='130'/>
<tag menu='T' submenu='TidyNode class' inserttext='tidyNode::isAsp()' hint='(PHP 5>=5.0.1) bool tidyNode::isAsp(void) - Checks if this node is ASP.' flags='130'/>
<tag menu='T' submenu='TidyNode class' inserttext='tidyNode::isComment()' hint='(PHP 5>=5.0.1) bool tidyNode::isComment(void) - Checks if a node represents a comment.' flags='130'/>
<tag menu='T' submenu='TidyNode class' inserttext='tidyNode::isHtml()' hint='(PHP 5>=5.0.1) bool tidyNode::isHtml(void) - Checks if a node is part of a HTML document.' flags='130'/>
<tag menu='T' submenu='TidyNode class' inserttext='tidyNode::isJste()' hint='(PHP 5>=5.0.1) bool tidyNode::isJste(void) - Checks if this node is JSTE.' flags='130'/>
<tag menu='T' submenu='TidyNode class' inserttext='tidyNode::isPhp()' hint='(PHP 5>=5.0.1) bool tidyNode::isPhp(void) - Checks if a node is PHP.' flags='130'/>
<tag menu='T' submenu='TidyNode class' inserttext='tidyNode::isText()' hint='(PHP 5>=5.0.1) bool tidyNode::isText(void) - Checks if a node represents text (no markup).' flags='130'/>
<tag menu='T' submenu='TidyNode class' inserttext='tidy_access_count(|)' hint='(PHP 5, PECL tidy>=0.5.2) int tidy_access_count(tidy $object) - Returns the Number of Tidy accessibility warnings encountered for specified document.' flags='130'/>
<tag menu='T' submenu='TidyNode class' inserttext='tidy_config_count(|)' hint='(PHP 5, PECL tidy>=0.5.2) int tidy_config_count(tidy $object) - Returns the Number of Tidy configuration errors encountered for specified document.' flags='130'/>
<tag menu='T' submenu='TidyNode class' inserttext='tidy_error_count(|)' hint='(PHP 5, PECL tidy>=0.5.2) int tidy_error_count(tidy $object) - Returns the Number of Tidy errors encountered for specified document.' flags='130'/>
<tag menu='T' submenu='TidyNode class' inserttext='tidy_get_error_buffer(|)' hint='(PHP 5, PECL tidy>=0.5.2) string tidy_get_error_buffer(tidy $object) - Return warnings and errors which occurred parsing the specified document.' flags='130'/>
<tag menu='T' submenu='TidyNode class' inserttext='tidy_get_output(|)' hint='(PHP 5, PECL tidy>=0.5.2) string tidy_get_output(tidy $object) - Return a string representing the parsed tidy markup.' flags='130'/>
<tag menu='T' submenu='TidyNode class' inserttext='tidy_warning_count(|)' hint='(PHP 5, PECL tidy>=0.5.2) int tidy_warning_count(tidy $object) - Returns the Number of Tidy warnings encountered for specified document.' flags='130'/>
<tag menu='T' submenu='Tokenizer' inserttext='token_get_all(|)' hint='(PHP 4>=4.2.0, PHP 5) array token_get_all(string $source) - Split given source into PHP tokens.' flags='130'/>
<tag menu='T' submenu='Tokenizer' inserttext='token_name(|)' hint='(PHP 4>=4.2.0, PHP 5) string token_name(int $token) - Get the symbolic name of a given PHP token.' flags='130'/>
<tag menu='U' submenu='URL' inserttext='base64_decode(|)' hint='(PHP 4, PHP 5) string base64_decode(string $data [, bool $strict=false]) - Decodes data encoded with MIME base64.' flags='130'/>
<tag menu='U' submenu='URL' inserttext='base64_encode(|)' hint='(PHP 4, PHP 5) string base64_encode(string $data) - Encodes data with MIME base64.' flags='130'/>
<tag menu='U' submenu='URL' inserttext='get_headers(|)' hint='(PHP 5) array get_headers(string $url [, int $format=0]) - Fetches all the headers sent by the server in response to a HTTP request.' flags='130'/>
<tag menu='U' submenu='URL' inserttext='get_meta_tags(|)' hint='(PHP 4, PHP 5) array get_meta_tags(string $filename [, bool $use_include_path=false]) - Extracts all meta tag content attributes from a file and returns an array.' flags='130'/>
<tag menu='U' submenu='URL' inserttext='http_build_query(|)' hint='(PHP 5) string http_build_query(mixed $query_data [, string $numeric_prefix [, string $arg_separator ]]) - Generate URL-encoded query string.' flags='130'/>
<tag menu='U' submenu='URL' inserttext='parse_url(|)' hint='(PHP 4, PHP 5) mixed parse_url(string $url [, int $component=-1]) - Parse a URL and return its components.' flags='130'/>
<tag menu='U' submenu='URL' inserttext='rawurldecode(|)' hint='(PHP 4, PHP 5) string rawurldecode(string $str) - Decode URL-encoded strings.' flags='130'/>
<tag menu='U' submenu='URL' inserttext='rawurlencode(|)' hint='(PHP 4, PHP 5) string rawurlencode(string $str) - URL-encode according to RFC 1738.' flags='130'/>
<tag menu='U' submenu='URL' inserttext='urldecode(|)' hint='(PHP 4, PHP 5) string urldecode(string $str) - Decodes URL-encoded string.' flags='130'/>
<tag menu='U' submenu='URL' inserttext='urlencode(|)' hint='(PHP 4, PHP 5) string urlencode(string $str) - URL-encodes string.' flags='130'/>
<tag menu='V' submenu='Variable handling' inserttext='debug_zval_dump(|)' hint='(PHP 4>=4.2.0, PHP 5) void debug_zval_dump(mixed $variable) - Dumps a string representation of an internal zend value to output.' flags='130'/>
<tag menu='V' submenu='Variable handling' inserttext='doubleval(|)' hint='(PHP 4, PHP 5) Alias of floatval().' flags='130'/>
<tag menu='V' submenu='Variable handling' inserttext='empty(|)' hint='(PHP 4, PHP 5) bool empty(mixed $var) - Determine whether a variable is empty.' flags='130'/>
<tag menu='V' submenu='Variable handling' inserttext='floatval(|)' hint='(PHP 4>=4.2.0, PHP 5) float floatval(mixed $var) - Get float value of a variable.' flags='130'/>
<tag menu='V' submenu='Variable handling' inserttext='get_defined_vars()' hint='(PHP 4>=4.0.4, PHP 5) array get_defined_vars(void) - Returns an array of all defined variables.' flags='130'/>
<tag menu='V' submenu='Variable handling' inserttext='get_resource_type(|)' hint='(PHP 4>=4.0.2, PHP 5) string get_resource_type(resource $handle) - Returns the resource type.' flags='130'/>
<tag menu='V' submenu='Variable handling' inserttext='gettype(|)' hint='(PHP 4, PHP 5) string gettype(mixed $var) - Get the type of a variable.' flags='130'/>
<tag menu='V' submenu='Variable handling' inserttext='import_request_variables(|)' hint='(PHP 4>=4.1.0, PHP 5) bool import_request_variables(string $types [, string $prefix]) - Import GET/POST/Cookie variables into the global scope.' flags='130'/>
<tag menu='V' submenu='Variable handling' inserttext='intval(|)' hint='(PHP 4, PHP 5) int intval(mixed $var [, int $base=10]) - Get the integer value of a variable.' flags='130'/>
<tag menu='V' submenu='Variable handling' inserttext='is_bool(|)' hint='(PHP 4, PHP 5) bool is_bool(mixed $var) - Finds out whether a variable is a boolean.' flags='130'/>
<tag menu='V' submenu='Variable handling' inserttext='is_callable(|)' hint='(PHP 4>=4.0.6, PHP 5) bool is_callable(callback $name [, bool $syntax_only=false [, string &amp;$callable_name ]]) - Verify that the contents of a variable can be called as a function.' flags='130'/>
<tag menu='V' submenu='Variable handling' inserttext='is_double(|)' hint='(PHP 4, PHP 5) Alias of is_float().' flags='130'/>
<tag menu='V' submenu='Variable handling' inserttext='is_integer(|)' hint='(PHP 4, PHP 5) Alias of is_int().' flags='130'/>
<tag menu='V' submenu='Variable handling' inserttext='is_long(|)' hint='(PHP 4, PHP 5) Alias of is_int().' flags='130'/>
<tag menu='V' submenu='Variable handling' inserttext='is_null(|)' hint='(PHP 4>=4.0.4, PHP 5) bool is_null(mixed $var) - Finds whether a variable is NULL.' flags='130'/>
<tag menu='V' submenu='Variable handling' inserttext='is_numeric(|)' hint='(PHP 4, PHP 5) bool is_numeric(mixed $var) - Finds whether a variable is a number or a numeric string.' flags='130'/>
<tag menu='V' submenu='Variable handling' inserttext='is_real(|)' hint='(PHP 4, PHP 5) Alias of is_float().' flags='130'/>
<tag menu='V' submenu='Variable handling' inserttext='is_resource(|)' hint='(PHP 4, PHP 5) bool is_resource(mixed $var) - Finds whether a variable is a resource.' flags='130'/>
<tag menu='V' submenu='Variable handling' inserttext='is_scalar(|)' hint='(PHP 4>=4.0.5, PHP 5) bool is_scalar(mixed $var) - Finds whether a variable is a scalar.' flags='130'/>
<tag menu='V' submenu='Variable handling' inserttext='is_string(|)' hint='(PHP 4, PHP 5) bool is_string(mixed $var) - Find whether the type of a variable is string.' flags='130'/>
<tag menu='V' submenu='Variable handling' inserttext='isset(|)' hint='(PHP 4, PHP 5) bool isset(mixed $var [, mixed $var [, $... ]]) - Determine if a variable is set and is not NULL.' flags='130'/>
<tag menu='V' submenu='Variable handling' inserttext='print_r(|)' hint='(PHP 4, PHP 5) mixed print_r(mixed $expression [, bool $return=false]) - Prints human-readable information about a variable.' flags='130'/>
<tag menu='V' submenu='Variable handling' inserttext='serialize(|)' hint='(PHP 4, PHP 5) string serialize(mixed $value) - Generates a storable representation of a value.' flags='130'/>
<tag menu='V' submenu='Variable handling' inserttext='settype(|)' hint='(PHP 4, PHP 5) bool settype(mixed &amp;$var, string $type) - Set the type of a variable.' flags='130'/>
<tag menu='V' submenu='Variable handling' inserttext='strval(|)' hint='(PHP 4, PHP 5) string strval(mixed $var) - Get string value of a variable.' flags='130'/>
<tag menu='V' submenu='Variable handling' inserttext='unserialize(|)' hint='(PHP 4, PHP 5) mixed unserialize(string $str) - Creates a PHP value from a stored representation.' flags='130'/>
<tag menu='V' submenu='Variable handling' inserttext='unset(|)' hint='(PHP 4, PHP 5) void unset(mixed $var [, mixed $var [, mixed $... ]]) - Unset a given variable.' flags='130'/>
<tag menu='V' submenu='Variable handling' inserttext='var_dump(|)' hint='(PHP 4, PHP 5) void var_dump(mixed $expression [, mixed $expression [, $... ]]) - Dumps information about a variable.' flags='130'/>
<tag menu='V' submenu='Variable handling' inserttext='var_export(|)' hint='(PHP 4>=4.2.0, PHP 5) mixed var_export(mixed $expression [, bool $return=false]) - Outputs or returns a parsable string representation of a variable.' flags='130'/>
<tag menu='V' submenu='vpopmail' inserttext='vpopmail_add_alias_domain(|)' hint='(PHP 4>=4.0.5, PECL vpopmail>=0.2) bool vpopmail_add_alias_domain(string $domain, string $aliasdomain) - Add an alias for a virtual domain.' flags='130'/>
<tag menu='V' submenu='vpopmail' inserttext='vpopmail_add_alias_domain_ex(|)' hint='(PHP 4>=4.0.5, PECL vpopmail>=0.2) bool vpopmail_add_alias_domain_ex(string $olddomain, string $newdomain) - Add alias to an existing virtual domain.' flags='130'/>
<tag menu='V' submenu='vpopmail' inserttext='vpopmail_add_domain(|)' hint='(PHP 4>=4.0.5, PECL vpopmail>=0.2) bool vpopmail_add_domain(string $domain, string $dir, int $uid, int $gid) - Add a new virtual domain.' flags='130'/>
<tag menu='V' submenu='vpopmail' inserttext='vpopmail_add_domain_ex(|)' hint='(PHP 4>=4.0.5, PECL vpopmail>=0.2) bool vpopmail_add_domain_ex(string $domain, string $passwd [, string $quota [, string $bounce [, bool $apop ]]]) - Add a new virtual domain.' flags='130'/>
<tag menu='V' submenu='vpopmail' inserttext='vpopmail_add_user(|)' hint='(PHP 4>=4.0.5, PECL vpopmail>=0.2) bool vpopmail_add_user(string $user, string $domain, string $password [, string $gecos [, bool $apop ]]) - Add a new user to the specified virtual domain.' flags='130'/>
<tag menu='V' submenu='vpopmail' inserttext='vpopmail_alias_add(|)' hint='(PHP 4>=4.0.7, PECL vpopmail>=0.2) bool vpopmail_alias_add(string $user, string $domain, string $alias) - Insert a virtual alias.' flags='130'/>
<tag menu='V' submenu='vpopmail' inserttext='vpopmail_alias_del(|)' hint='(PHP 4>=4.0.7, PECL vpopmail>=0.2) bool vpopmail_alias_del(string $user, string $domain) - Deletes all virtual aliases of a user.' flags='130'/>
<tag menu='V' submenu='vpopmail' inserttext='vpopmail_alias_del_domain(|)' hint='(PHP 4>=4.0.7, PECL vpopmail>=0.2) bool vpopmail_alias_del_domain(string $domain) - Deletes all virtual aliases of a domain.' flags='130'/>
<tag menu='V' submenu='vpopmail' inserttext='vpopmail_alias_get(|)' hint='(PHP 4>=4.0.7, PECL vpopmail>=0.2) array vpopmail_alias_get(string $alias, string $domain) - Get all lines of an alias for a domain.' flags='130'/>
<tag menu='V' submenu='vpopmail' inserttext='vpopmail_alias_get_all(|)' hint='(PHP 4>=4.0.7, PECL vpopmail>=0.2) array vpopmail_alias_get_all(string $domain) - Get all lines of an alias for a domain.' flags='130'/>
<tag menu='V' submenu='vpopmail' inserttext='vpopmail_auth_user(|)' hint='(PHP 4>=4.0.5, PECL vpopmail>=0.2) bool vpopmail_auth_user(string $user, string $domain, string $password [, string $apop]) - Attempt to validate a username/domain/password.' flags='130'/>
<tag menu='V' submenu='vpopmail' inserttext='vpopmail_del_domain(|)' hint='(PHP 4>=4.0.5, PECL vpopmail>=0.2) bool vpopmail_del_domain(string $domain) - Delete a virtual domain.' flags='130'/>
<tag menu='V' submenu='vpopmail' inserttext='vpopmail_del_domain_ex(|)' hint='(PHP 4>=4.0.5, PECL vpopmail>=0.2) bool vpopmail_del_domain_ex(string $domain) - Delete a virtual domain.' flags='130'/>
<tag menu='V' submenu='vpopmail' inserttext='vpopmail_del_user(|)' hint='(PHP 4>=4.0.5, PECL vpopmail>=0.2) bool vpopmail_del_user(string $user, string $domain) - Delete a user from a virtual domain.' flags='130'/>
<tag menu='V' submenu='vpopmail' inserttext='vpopmail_error()' hint='(PHP 4>=4.0.5, PECL vpopmail>=0.2) string vpopmail_error(void) - Get text message for last vpopmail error.' flags='130'/>
<tag menu='V' submenu='vpopmail' inserttext='vpopmail_passwd(|)' hint="(PHP 4>=4.0.5, PECL vpopmail>=0.2) bool vpopmail_passwd(string $user, string $domain, string $password [, bool $apop]) - Change a virtual user's password." flags='130'/>
<tag menu='V' submenu='vpopmail' inserttext='vpopmail_set_user_quota(|)' hint="(PHP 4>=4.0.5, PECL vpopmail>=0.2) bool vpopmail_set_user_quota(string $user, string $domain, string $quota) - Sets a virtual user's quota." flags='130'/>
<tag menu='W' submenu='W32api' inserttext='w32api_deftype(|)' hint='(PHP 4>=4.2.0) bool w32api_deftype(string $typename, string $member1_type, string $member1_name [, string $... [, string $... ]]) - Defines a type for use with other w32api_functions.' flags='130'/>
<tag menu='W' submenu='W32api' inserttext='w32api_init_dtype(|)' hint='(PHP 4>=4.2.0) resource w32api_init_dtype(string $typename, mixed $value [, mixed $...]) - Creates an instance of the data type typename and fills it with the values passed.' flags='130'/>
<tag menu='W' submenu='W32api' inserttext='w32api_invoke_function(|)' hint='(PHP 4>=4.2.0) mixed w32api_invoke_function(string $funcname, mixed $argument [, mixed $...]) - Invokes function funcname with the arguments passed after the function name.' flags='130'/>
<tag menu='W' submenu='W32api' inserttext='w32api_register_function(|)' hint='(PHP 4>=4.2.0) bool w32api_register_function(string $library, string $function_name, string $return_type) - Registers function function_name from library with PHP.' flags='130'/>
<tag menu='W' submenu='W32api' inserttext='w32api_set_call_method(|)' hint='(PHP 4>=4.2.0) void w32api_set_call_method(int $method) - Sets the calling method used.' flags='130'/>
<tag menu='W' submenu='WDDX' inserttext='wddx_add_vars(|)' hint='(PHP 4, PHP 5) bool wddx_add_vars(resource $packet_id, mixed $var_name [, mixed $...]) - Add variables to a WDDX packet with the specified ID.' flags='130'/>
<tag menu='W' submenu='WDDX' inserttext='wddx_deserialize(|)' hint='(PHP 4, PHP 5) Alias of wddx_unserialize().' flags='130'/>
<tag menu='W' submenu='WDDX' inserttext='wddx_packet_end(|)' hint='(PHP 4, PHP 5) string wddx_packet_end(resource $packet_id) - Ends a WDDX packet with the specified ID.' flags='130'/>
<tag menu='W' submenu='WDDX' inserttext='wddx_packet_start(|)' hint='(PHP 4, PHP 5) resource wddx_packet_start([string $comment]) - Starts a new WDDX packet with structure inside it.' flags='130'/>
<tag menu='W' submenu='WDDX' inserttext='wddx_serialize_value(|)' hint='(PHP 4, PHP 5) string wddx_serialize_value(mixed $var [, string $comment]) - Serialize a single value into a WDDX packet.' flags='130'/>
<tag menu='W' submenu='WDDX' inserttext='wddx_serialize_vars(|)' hint='(PHP 4, PHP 5) string wddx_serialize_vars(mixed $var_name [, mixed $...]) - Serialize variables into a WDDX packet.' flags='130'/>
<tag menu='W' submenu='WDDX' inserttext='wddx_unserialize(|)' hint='(PHP 4, PHP 5) mixed wddx_unserialize(string $packet) - Unserializes a WDDX packet.' flags='130'/>
<tag menu='X' submenu='XML Parser' inserttext='utf8_decode(|)' hint='(PHP 4, PHP 5) string utf8_decode(string $data) - Converts a string with ISO-8859-1 characters encoded with UTF-8 to single-byte ISO-8859-1.' flags='130'/>
<tag menu='X' submenu='XML Parser' inserttext='utf8_encode(|)' hint='(PHP 4, PHP 5) string utf8_encode(string $data) - Encodes an ISO-8859-1 string to UTF-8.' flags='130'/>
<tag menu='X' submenu='XML Parser' inserttext='xml_error_string(|)' hint='(PHP 4, PHP 5) string xml_error_string(int $code) - Get XML parser error string.' flags='130'/>
<tag menu='X' submenu='XML Parser' inserttext='xml_get_current_byte_index(|)' hint='(PHP 4, PHP 5) int xml_get_current_byte_index(resource $parser) - Get current byte index for an XML parser.' flags='130'/>
<tag menu='X' submenu='XML Parser' inserttext='xml_get_current_column_number(|)' hint='(PHP 4, PHP 5) int xml_get_current_column_number(resource $parser) - Get current column number for an XML parser.' flags='130'/>
<tag menu='X' submenu='XML Parser' inserttext='xml_get_current_line_number(|)' hint='(PHP 4, PHP 5) int xml_get_current_line_number(resource $parser) - Get current line number for an XML parser.' flags='130'/>
<tag menu='X' submenu='XML Parser' inserttext='xml_get_error_code(|)' hint='(PHP 4, PHP 5) int xml_get_error_code(resource $parser) - Get XML parser error code.' flags='130'/>
<tag menu='X' submenu='XML Parser' inserttext='xml_parse(|)' hint='(PHP 4, PHP 5) int xml_parse(resource $parser, string $data [, bool $is_final=false]) - Start parsing an XML document.' flags='130'/>
<tag menu='X' submenu='XML Parser' inserttext='xml_parse_into_struct(|)' hint='(PHP 4, PHP 5) int xml_parse_into_struct(resource $parser, string $data, array &amp;$values [, array &amp;$index]) - Parse XML data into an array structure.' flags='130'/>
<tag menu='X' submenu='XML Parser' inserttext='xml_parser_create(|)' hint='(PHP 4, PHP 5) resource xml_parser_create([string $encoding]) - Create an XML parser.' flags='130'/>
<tag menu='X' submenu='XML Parser' inserttext='xml_parser_create_ns(|)' hint="(PHP 4>=4.0.5, PHP 5) resource xml_parser_create_ns([string $encoding [, string $separator=':' ]]) - Create an XML parser with namespace support." flags='130'/>
<tag menu='X' submenu='XML Parser' inserttext='xml_parser_free(|)' hint='(PHP 4, PHP 5) bool xml_parser_free(resource $parser) - Free an XML parser.' flags='130'/>
<tag menu='X' submenu='XML Parser' inserttext='xml_parser_get_option(|)' hint='(PHP 4, PHP 5) mixed xml_parser_get_option(resource $parser, int $option) - Get options from an XML parser.' flags='130'/>
<tag menu='X' submenu='XML Parser' inserttext='xml_parser_set_option(|)' hint='(PHP 4, PHP 5) bool xml_parser_set_option(resource $parser, int $option, mixed $value) - Set options in an XML parser.' flags='130'/>
<tag menu='X' submenu='XML Parser' inserttext='xml_set_character_data_handler(|)' hint='(PHP 4, PHP 5) bool xml_set_character_data_handler(resource $parser, callback $handler) - Set up character data handler.' flags='130'/>
<tag menu='X' submenu='XML Parser' inserttext='xml_set_default_handler(|)' hint='(PHP 4, PHP 5) bool xml_set_default_handler(resource $parser, callback $handler) - Set up default handler.' flags='130'/>
<tag menu='X' submenu='XML Parser' inserttext='xml_set_element_handler(|)' hint='(PHP 4, PHP 5) bool xml_set_element_handler(resource $parser, callback $start_element_handler, callback $end_element_handler) - Set up start and end element handlers.' flags='130'/>
<tag menu='X' submenu='XML Parser' inserttext='xml_set_end_namespace_decl_handler(|)' hint='(PHP 4>=4.0.5, PHP 5) bool xml_set_end_namespace_decl_handler(resource $parser, callback $handler) - Set up end namespace declaration handler.' flags='130'/>
<tag menu='X' submenu='XML Parser' inserttext='xml_set_external_entity_ref_handler(|)' hint='(PHP 4, PHP 5) bool xml_set_external_entity_ref_handler(resource $parser, callback $handler) - Set up external entity reference handler.' flags='130'/>
<tag menu='X' submenu='XML Parser' inserttext='xml_set_notation_decl_handler(|)' hint='(PHP 4, PHP 5) bool xml_set_notation_decl_handler(resource $parser, callback $handler) - Set up notation declaration handler.' flags='130'/>
<tag menu='X' submenu='XML Parser' inserttext='xml_set_object(|)' hint='(PHP 4, PHP 5) bool xml_set_object(resource $parser, object &amp;$object) - Use XML Parser within an object.' flags='130'/>
<tag menu='X' submenu='XML Parser' inserttext='xml_set_processing_instruction_handler(|)' hint='(PHP 4, PHP 5) bool xml_set_processing_instruction_handler(resource $parser, callback $handler) - Set up processing instruction (PI) handler.' flags='130'/>
<tag menu='X' submenu='XML Parser' inserttext='xml_set_start_namespace_decl_handler(|)' hint='(PHP 4>=4.0.5, PHP 5) bool xml_set_start_namespace_decl_handler(resource $parser, callback $handler) - Set up start namespace declaration handler.' flags='130'/>
<tag menu='X' submenu='XML Parser' inserttext='xml_set_unparsed_entity_decl_handler(|)' hint='(PHP 4, PHP 5) bool xml_set_unparsed_entity_decl_handler(resource $parser, callback $handler) - Set up unparsed entity declaration handler.' flags='130'/>
<tag menu='X' submenu='XML-RPC' inserttext='xmlrpc_decode(|)' hint='(PHP 4>=4.1.0, PHP 5) mixed xmlrpc_decode(string $xml [, string $encoding="iso-8859-1"]) - Decodes XML into native PHP types.' flags='130'/>
<tag menu='X' submenu='XML-RPC' inserttext='xmlrpc_decode_request(|)' hint='(PHP 4>=4.1.0, PHP 5) mixed xmlrpc_decode_request(string $xml, string &amp;$method [, string $encoding]) - Decodes XML into native PHP types.' flags='130'/>
<tag menu='X' submenu='XML-RPC' inserttext='xmlrpc_encode(|)' hint='(PHP 4>=4.1.0, PHP 5) string xmlrpc_encode(mixed $value) - Generates XML for a PHP value.' flags='130'/>
<tag menu='X' submenu='XML-RPC' inserttext='xmlrpc_encode_request(|)' hint='(PHP 4>=4.1.0, PHP 5) string xmlrpc_encode_request(string $method, mixed $params [, array $output_options]) - Generates XML for a method request.' flags='130'/>
<tag menu='X' submenu='XML-RPC' inserttext='xmlrpc_get_type(|)' hint='(PHP 4>=4.1.0, PHP 5) string xmlrpc_get_type(mixed $value) - Gets xmlrpc type for a PHP value.' flags='130'/>
<tag menu='X' submenu='XML-RPC' inserttext='xmlrpc_is_fault(|)' hint='(PHP 4>=4.3.0, PHP 5) bool xmlrpc_is_fault(array $arg) - Determines if an array value represents an XMLRPC fault.' flags='130'/>
<tag menu='X' submenu='XML-RPC' inserttext='xmlrpc_parse_method_descriptions(|)' hint='(PHP 4>=4.1.0, PHP 5) array xmlrpc_parse_method_descriptions(string $xml) - Decodes XML into a list of method descriptions.' flags='130'/>
<tag menu='X' submenu='XML-RPC' inserttext='xmlrpc_server_add_introspection_data(|)' hint='(PHP 4>=4.1.0, PHP 5) int xmlrpc_server_add_introspection_data(resource $server, array $desc) - Adds introspection documentation.' flags='130'/>
<tag menu='X' submenu='XML-RPC' inserttext='xmlrpc_server_call_method(|)' hint='(PHP 4>=4.1.0, PHP 5) string xmlrpc_server_call_method(resource $server, string $xml, mixed $user_data [, array $output_options]) - Parses XML requests and call methods.' flags='130'/>
<tag menu='X' submenu='XML-RPC' inserttext='xmlrpc_server_create()' hint='(PHP 4>=4.1.0, PHP 5) resource xmlrpc_server_create(void) - Creates an xmlrpc server.' flags='130'/>
<tag menu='X' submenu='XML-RPC' inserttext='xmlrpc_server_destroy(|)' hint='(PHP 4>=4.1.0, PHP 5) int xmlrpc_server_destroy(resource $server) - Destroys server resources.' flags='130'/>
<tag menu='X' submenu='XML-RPC' inserttext='xmlrpc_server_register_introspection_callback(|)' hint='(PHP 4>=4.1.0, PHP 5) bool xmlrpc_server_register_introspection_callback(resource $server, string $function) - Register a PHP function to generate documentation.' flags='130'/>
<tag menu='X' submenu='XML-RPC' inserttext='xmlrpc_server_register_method(|)' hint='(PHP 4>=4.1.0, PHP 5) bool xmlrpc_server_register_method(resource $server, string $method_name, string $function) - Register a PHP function to resource method matching method_name.' flags='130'/>
<tag menu='X' submenu='XML-RPC' inserttext='xmlrpc_set_type(|)' hint='(PHP 4>=4.1.0, PHP 5) bool xmlrpc_set_type(string &amp;$value, string $type) - Sets xmlrpc type, base64 or datetime, for a PHP string value.' flags='130'/>
<tag menu='X' submenu='XMLReader class' inserttext='XMLReader::XML(|)' hint='(PHP 5>=5.1.2) bool XMLReader::xml(string $source [, string $encoding [, int $options=0 ]]) - Set the data containing the XML to parse.' flags='130'/>
<tag menu='X' submenu='XMLReader class' inserttext='XMLReader::close()' hint='(PHP 5>=5.1.2) bool XMLReader::close(void) - Close the XMLReader input.' flags='130'/>
<tag menu='X' submenu='XMLReader class' inserttext='XMLReader::expand()' hint='(PHP 5>=5.1.2) DOMNode XMLReader::expand(void) - Returns a copy of the current node as a DOM object.' flags='130'/>
<tag menu='X' submenu='XMLReader class' inserttext='XMLReader::getAttribute(|)' hint='(PHP 5>=5.1.2) string XMLReader::getAttribute(string $name) - Get the value of a named attribute.' flags='130'/>
<tag menu='X' submenu='XMLReader class' inserttext='XMLReader::getAttributeNo(|)' hint='(PHP 5>=5.1.2) string XMLReader::getAttributeNo(int $index) - Get the value of an attribute by index.' flags='130'/>
<tag menu='X' submenu='XMLReader class' inserttext='XMLReader::getAttributeNs(|)' hint='(PHP 5>=5.1.2) string XMLReader::getAttributeNs(string $localName, string $namespaceURI) - Get the value of an attribute by localname and URI.' flags='130'/>
<tag menu='X' submenu='XMLReader class' inserttext='XMLReader::getParserProperty(|)' hint='(PHP 5>=5.1.2) bool XMLReader::getParserProperty(int $property) - Indicates if specified property has been set.' flags='130'/>
<tag menu='X' submenu='XMLReader class' inserttext='XMLReader::isValid()' hint='(PHP 5>=5.1.2) bool XMLReader::isValid(void) - Indicates if the parsed document is valid.' flags='130'/>
<tag menu='X' submenu='XMLReader class' inserttext='XMLReader::lookupNamespace(|)' hint='(PHP 5>=5.1.2) bool XMLReader::lookupNamespace(string $prefix) - Lookup namespace for a prefix.' flags='130'/>
<tag menu='X' submenu='XMLReader class' inserttext='XMLReader::moveToAttribute(|)' hint='(PHP 5>=5.1.2) bool XMLReader::moveToAttribute(string $name) - Move cursor to a named attribute.' flags='130'/>
<tag menu='X' submenu='XMLReader class' inserttext='XMLReader::moveToAttributeNo(|)' hint='(PHP 5>=5.1.2) bool XMLReader::moveToAttributeNo(int $index) - Move cursor to an attribute by index.' flags='130'/>
<tag menu='X' submenu='XMLReader class' inserttext='XMLReader::moveToAttributeNs(|)' hint='(PHP 5>=5.1.2) bool XMLReader::moveToAttributeNs(string $localName, string $namespaceURI) - Move cursor to a named attribute.' flags='130'/>
<tag menu='X' submenu='XMLReader class' inserttext='XMLReader::moveToElement()' hint='(PHP 5>=5.1.2) bool XMLReader::moveToElement(void) - Position cursor on the parent Element of current Attribute.' flags='130'/>
<tag menu='X' submenu='XMLReader class' inserttext='XMLReader::moveToFirstAttribute()' hint='(PHP 5>=5.1.2) bool XMLReader::moveToFirstAttribute(void) - Position cursor on the first Attribute.' flags='130'/>
<tag menu='X' submenu='XMLReader class' inserttext='XMLReader::moveToNextAttribute()' hint='(PHP 5>=5.1.2) bool XMLReader::moveToNextAttribute(void) - Position cursor on the next Attribute.' flags='130'/>
<tag menu='X' submenu='XMLReader class' inserttext='XMLReader::next(|)' hint='(PHP 5>=5.1.2) bool XMLReader::next([string $localname]) - Move cursor to next node skipping all subtrees.' flags='130'/>
<tag menu='X' submenu='XMLReader class' inserttext='XMLReader::open(|)' hint='(PHP 5>=5.1.2) bool XMLReader::open(string $URI [, string $encoding [, int $options=0 ]]) - Set the URI containing the XML to parse.' flags='130'/>
<tag menu='X' submenu='XMLReader class' inserttext='XMLReader::read()' hint='(PHP 5>=5.1.2) bool XMLReader::read(void) - Move to next node in document.' flags='130'/>
<tag menu='X' submenu='XMLReader class' inserttext='XMLReader::readInnerXML()' hint='(PHP 5>=5.2.0) string XMLReader::readInnerXML(void) - Retrieve XML from current node.' flags='130'/>
<tag menu='X' submenu='XMLReader class' inserttext='XMLReader::readOuterXML()' hint='(PHP 5>=5.2.0) string XMLReader::readOuterXML(void) - Retrieve XML from current node, including it self.' flags='130'/>
<tag menu='X' submenu='XMLReader class' inserttext='XMLReader::readString()' hint='(PHP 5>=5.2.0) string XMLReader::readString(void) - Reads the contents of the current node as an string.' flags='130'/>
<tag menu='X' submenu='XMLReader class' inserttext='XMLReader::setParserProperty(|)' hint='(PHP 5>=5.1.2) bool XMLReader::setParserProperty(int $property, bool $value) - Set or Unset parser options.' flags='130'/>
<tag menu='X' submenu='XMLReader class' inserttext='XMLReader::setRelaxNGSchema(|)' hint='(PHP 5>=5.2.0) bool XMLReader::setRelaxNGSchema(string $filename) - Set the filename or URI for a RelaxNG Schema.' flags='130'/>
<tag menu='X' submenu='XMLReader class' inserttext='XMLReader::setRelaxNGSchemaSource(|)' hint='(PHP 5>=5.1.2) bool XMLReader::setRelaxNGSchemaSource(string $source) - Set the data containing a RelaxNG Schema.' flags='130'/>
<tag menu='X' submenu='XMLReader class' inserttext='XMLReader::setSchema(|)' hint='(PHP 5>=5.2.0) bool XMLReader::setSchema(string $filename) - Validate document against XSD.' flags='130'/>
<tag menu='X' submenu='XMLWriter-->>X - XMLWriter::startC' inserttext='XMLWriter::endAttribute()' hint='(PHP 5>=5.1.2, PECL xmlwriter>=0.1.0) bool XMLWriter::endAttribute(void) - End attribute.' flags='130'/>
<tag menu='X' submenu='XMLWriter-->>X - XMLWriter::startC' inserttext='XMLWriter::endCData()' hint='(PHP 5>=5.1.2, PECL xmlwriter>=0.1.0) bool XMLWriter::endCData(void) - End current CDATA.' flags='130'/>
<tag menu='X' submenu='XMLWriter-->>X - XMLWriter::startC' inserttext='XMLWriter::endComment()' hint='(PHP 5>=5.1.2, PECL xmlwriter>=1.0.0) bool XMLWriter::endComment(void) - Create end comment.' flags='130'/>
<tag menu='X' submenu='XMLWriter-->>X - XMLWriter::startC' inserttext='XMLWriter::endDTD()' hint='(PHP 5>=5.1.2, PECL xmlwriter>=0.1.0) bool XMLWriter::endDTD(void) - End current DTD.' flags='130'/>
<tag menu='X' submenu='XMLWriter-->>X - XMLWriter::startC' inserttext='XMLWriter::endDTDAttlist()' hint='(PHP 5>=5.1.2, PECL xmlwriter>=0.1.0) bool XMLWriter::endDTDAttlist(void) - End current DTD AttList.' flags='130'/>
<tag menu='X' submenu='XMLWriter-->>X - XMLWriter::startC' inserttext='XMLWriter::endDTDElement()' hint='(PHP 5>=5.1.2, PECL xmlwriter>=0.1.0) bool XMLWriter::endDTDElement(void) - End current DTD element.' flags='130'/>
<tag menu='X' submenu='XMLWriter-->>X - XMLWriter::startC' inserttext='XMLWriter::endDTDEntity()' hint='(PHP 5>=5.1.2, PECL xmlwriter>=0.1.0) bool XMLWriter::endDTDEntity(void) - End current DTD Entity.' flags='130'/>
<tag menu='X' submenu='XMLWriter-->>X - XMLWriter::startC' inserttext='XMLWriter::endDocument()' hint='(PHP 5>=5.1.2, PECL xmlwriter>=0.1.0) bool XMLWriter::endDocument(void) - End current document.' flags='130'/>
<tag menu='X' submenu='XMLWriter-->>X - XMLWriter::startC' inserttext='XMLWriter::endElement()' hint='(PHP 5>=5.1.2, PECL xmlwriter>=0.1.0) bool XMLWriter::endElement(void) - End current element.' flags='130'/>
<tag menu='X' submenu='XMLWriter-->>X - XMLWriter::startC' inserttext='XMLWriter::endPI()' hint='(PHP 5>=5.1.2, PECL xmlwriter>=0.1.0) bool XMLWriter::endPI(void) - End current PI.' flags='130'/>
<tag menu='X' submenu='XMLWriter-->>X - XMLWriter::startC' inserttext='XMLWriter::flush(|)' hint='(PHP 5>=5.1.2, PECL xmlwriter>=1.0.0) mixed XMLWriter::flush([bool $empty]) - Flush current buffer.' flags='130'/>
<tag menu='X' submenu='XMLWriter-->>X - XMLWriter::startC' inserttext='XMLWriter::fullEndElement()' hint='(PHP 5>=5.2.0, PECL xmlwriter>=2.0.4) bool XMLWriter::fullEndElement(void) - End current element.' flags='130'/>
<tag menu='X' submenu='XMLWriter-->>X - XMLWriter::startC' inserttext='XMLWriter::openMemory()' hint='(PHP 5>=5.1.2, PECL xmlwriter>=0.1.0) bool XMLWriter::openMemory(void) - Create new xmlwriter using memory for string output.' flags='130'/>
<tag menu='X' submenu='XMLWriter-->>X - XMLWriter::startC' inserttext='XMLWriter::openURI(|)' hint='(PHP 5>=5.1.2, PECL xmlwriter>=0.1.0) bool XMLWriter::openURI(string $uri) - Create new xmlwriter using source uri for output.' flags='130'/>
<tag menu='X' submenu='XMLWriter-->>X - XMLWriter::startC' inserttext='XMLWriter::outputMemory(|)' hint='(PHP 5>=5.1.2, PECL xmlwriter>=0.1.0) string XMLWriter::outputMemory([bool $flush]) - Returns current buffer.' flags='130'/>
<tag menu='X' submenu='XMLWriter-->>X - XMLWriter::startC' inserttext='XMLWriter::setIndent(|)' hint='(PHP 5>=5.1.2, PECL xmlwriter>=0.1.0) bool XMLWriter::setIndent(bool $indent) - Toggle indentation on/off.' flags='130'/>
<tag menu='X' submenu='XMLWriter-->>X - XMLWriter::startC' inserttext='XMLWriter::setIndentString(|)' hint='(PHP 5>=5.1.2, PECL xmlwriter>=0.1.0) bool XMLWriter::setIndentString(string $indentString) - Set string used for indenting.' flags='130'/>
<tag menu='X' submenu='XMLWriter-->>X - XMLWriter::startC' inserttext='XMLWriter::startAttribute(|)' hint='(PHP 5>=5.1.2, PECL xmlwriter>=0.1.0) bool XMLWriter::startAttribute(string $name) - Create start attribute.' flags='130'/>
<tag menu='X' submenu='XMLWriter-->>X - XMLWriter::startC' inserttext='XMLWriter::startAttributeNS(|)' hint='(PHP 5>=5.1.2, PECL xmlwriter>=0.1.0) bool XMLWriter::startAttributeNS(string $prefix, string $name, string $uri) - Create start namespaced attribute.' flags='130'/>
<tag menu='X' submenu='XMLWriter-->>X - XMLWriter::startC' inserttext='XMLWriter::startCData()' hint='(PHP 5>=5.1.2, PECL xmlwriter>=0.1.0) bool XMLWriter::startCData(void) - Create start CDATA tag.' flags='130'/>
<tag menu='X' submenu='XMLWriter-->>X - XMLWriter::startC' inserttext='XMLWriter::startComment()' hint='(PHP 5>=5.1.2, PECL xmlwriter>=1.0.0) bool XMLWriter::startComment(void) - Create start comment.' flags='130'/>
<tag menu='X' submenu='XMLWriter-->>XMLWriter::startD - X' inserttext='XMLWriter::startDTD(|)' hint='(PHP 5>=5.1.2, PECL xmlwriter>=0.1.0) bool XMLWriter::startDTD(string $qualifiedName [, string $publicId [, string $systemId ]]) - Create start DTD tag.' flags='130'/>
<tag menu='X' submenu='XMLWriter-->>XMLWriter::startD - X' inserttext='XMLWriter::startDTDAttlist(|)' hint='(PHP 5>=5.1.2, PECL xmlwriter>=0.1.0) bool XMLWriter::startDTDAttlist(string $name) - Create start DTD AttList.' flags='130'/>
<tag menu='X' submenu='XMLWriter-->>XMLWriter::startD - X' inserttext='XMLWriter::startDTDElement(|)' hint='(PHP 5>=5.1.2, PECL xmlwriter>=0.1.0) bool XMLWriter::startDTDElement(string $qualifiedName) - Create start DTD element.' flags='130'/>
<tag menu='X' submenu='XMLWriter-->>XMLWriter::startD - X' inserttext='XMLWriter::startDTDEntity(|)' hint='(PHP 5>=5.1.2, PECL xmlwriter>=0.1.0) bool XMLWriter::startDTDEntity(string $name, bool $isparam) - Create start DTD Entity.' flags='130'/>
<tag menu='X' submenu='XMLWriter-->>XMLWriter::startD - X' inserttext='XMLWriter::startDocument(|)' hint='(PHP 5>=5.1.2, PECL xmlwriter>=0.1.0) bool XMLWriter::startDocument([string $version [, string $encoding [, string $standalone ]]]) - Create document tag.' flags='130'/>
<tag menu='X' submenu='XMLWriter-->>XMLWriter::startD - X' inserttext='XMLWriter::startElement(|)' hint='(PHP 5>=5.1.2, PECL xmlwriter>=0.1.0) bool XMLWriter::startElement(string $name) - Create start element tag.' flags='130'/>
<tag menu='X' submenu='XMLWriter-->>XMLWriter::startD - X' inserttext='XMLWriter::startElementNS(|)' hint='(PHP 5>=5.1.2, PECL xmlwriter>=0.1.0) bool XMLWriter::startElementNS(string $prefix, string $name, string $uri) - Create start namespaced element tag.' flags='130'/>
<tag menu='X' submenu='XMLWriter-->>XMLWriter::startD - X' inserttext='XMLWriter::startPI(|)' hint='(PHP 5>=5.1.2, PECL xmlwriter>=0.1.0) bool XMLWriter::startPI(string $target) - Create start PI tag.' flags='130'/>
<tag menu='X' submenu='XMLWriter-->>XMLWriter::startD - X' inserttext='XMLWriter::text(|)' hint='(PHP 5>=5.1.2, PECL xmlwriter>=0.1.0) bool XMLWriter::text(string $content) - Write text.' flags='130'/>
<tag menu='X' submenu='XMLWriter-->>XMLWriter::startD - X' inserttext='XMLWriter::writeAttribute(|)' hint='(PHP 5>=5.1.2, PECL xmlwriter>=0.1.0) bool XMLWriter::writeAttribute(string $name, string $value) - Write full attribute.' flags='130'/>
<tag menu='X' submenu='XMLWriter-->>XMLWriter::startD - X' inserttext='XMLWriter::writeAttributeNS(|)' hint='(PHP 5>=5.1.2, PECL xmlwriter>=0.1.0) bool XMLWriter::writeAttributeNS(string $prefix, string $name, string $uri, string $content) - Write full namespaced attribute.' flags='130'/>
<tag menu='X' submenu='XMLWriter-->>XMLWriter::startD - X' inserttext='XMLWriter::writeCData(|)' hint='(PHP 5>=5.1.2, PECL xmlwriter>=0.1.0) bool XMLWriter::writeCData(string $content) - Write full CDATA tag.' flags='130'/>
<tag menu='X' submenu='XMLWriter-->>XMLWriter::startD - X' inserttext='XMLWriter::writeComment(|)' hint='(PHP 5>=5.1.2, PECL xmlwriter>=0.1.0) bool XMLWriter::writeComment(string $content) - Write full comment tag.' flags='130'/>
<tag menu='X' submenu='XMLWriter-->>XMLWriter::startD - X' inserttext='XMLWriter::writeDTD(|)' hint='(PHP 5>=5.1.2, PECL xmlwriter>=0.1.0) bool XMLWriter::writeDTD(string $name [, string $publicId [, string $systemId [, string $subset ]]]) - Write full DTD tag.' flags='130'/>
<tag menu='X' submenu='XMLWriter-->>XMLWriter::startD - X' inserttext='XMLWriter::writeDTDAttlist(|)' hint='(PHP 5>=5.1.2, PECL xmlwriter>=0.1.0) bool XMLWriter::writeDTDAttlist(string $name, string $content) - Write full DTD AttList tag.' flags='130'/>
<tag menu='X' submenu='XMLWriter-->>XMLWriter::startD - X' inserttext='XMLWriter::writeDTDElement(|)' hint='(PHP 5>=5.1.2, PECL xmlwriter>=0.1.0) bool XMLWriter::writeDTDElement(string $name, string $content) - Write full DTD element tag.' flags='130'/>
<tag menu='X' submenu='XMLWriter-->>XMLWriter::startD - X' inserttext='XMLWriter::writeDTDEntity(|)' hint='(PHP 5>=5.1.2, PECL xmlwriter>=0.1.0) bool XMLWriter::writeDTDEntity(string $name, string $content, bool $pe, string $pubid, string $sysid, string $ndataid) - Write full DTD Entity tag.' flags='130'/>
<tag menu='X' submenu='XMLWriter-->>XMLWriter::startD - X' inserttext='XMLWriter::writeElement(|)' hint='(PHP 5>=5.1.2, PECL xmlwriter>=0.1.0) bool XMLWriter::writeElement(string $name [, string $content]) - Write full element tag.' flags='130'/>
<tag menu='X' submenu='XMLWriter-->>XMLWriter::startD - X' inserttext='XMLWriter::writeElementNS(|)' hint='(PHP 5>=5.1.2, PECL xmlwriter>=0.1.0) bool XMLWriter::writeElementNS(string $prefix, string $name, string $uri [, string $content]) - Write full namespaced element tag.' flags='130'/>
<tag menu='X' submenu='XMLWriter-->>XMLWriter::startD - X' inserttext='XMLWriter::writePI(|)' hint='(PHP 5>=5.1.2, PECL xmlwriter>=0.1.0) bool XMLWriter::writePI(string $target, string $content) - Writes a PI.' flags='130'/>
<tag menu='X' submenu='XMLWriter-->>XMLWriter::startD - X' inserttext='XMLWriter::writeRaw(|)' hint='(PHP 5>=5.2.0, PECL xmlwriter>=2.0.4) bool XMLWriter::writeRaw(string $content) - Write a raw XML text.' flags='130'/>
<tag menu='X' submenu='XSLT (PHP4)' inserttext='xslt_backend_info()' hint='(PHP 4>=4.3.0) string xslt_backend_info(void) - Returns the information on the compilation settings of the backend.' flags='130'/>
<tag menu='X' submenu='XSLT (PHP4)' inserttext='xslt_backend_name()' hint='(PHP 4>=4.3.0) string xslt_backend_name(void) - Returns the name of the backend.' flags='130'/>
<tag menu='X' submenu='XSLT (PHP4)' inserttext='xslt_backend_version()' hint='(PHP 4>=4.3.0) string xslt_backend_version(void) - Returns the version number of Sablotron.' flags='130'/>
<tag menu='X' submenu='XSLT (PHP4)' inserttext='xslt_create()' hint='(PHP 4>=4.0.3) resource xslt_create(void) - Create a new XSLT processor.' flags='130'/>
<tag menu='X' submenu='XSLT (PHP4)' inserttext='xslt_errno(|)' hint='(PHP 4>=4.0.3) int xslt_errno(resource $xh) - Returns an error number.' flags='130'/>
<tag menu='X' submenu='XSLT (PHP4)' inserttext='xslt_error(|)' hint='(PHP 4>=4.0.3) string xslt_error(resource $xh) - Returns an error string.' flags='130'/>
<tag menu='X' submenu='XSLT (PHP4)' inserttext='xslt_free(|)' hint='(PHP 4>=4.0.3) void xslt_free(resource $xh) - Free XSLT processor.' flags='130'/>
<tag menu='X' submenu='XSLT (PHP4)' inserttext='xslt_getopt(|)' hint='(PHP 4>=4.3.0) int xslt_getopt(resource $processor) - Get options on a given xsl processor.' flags='130'/>
<tag menu='X' submenu='XSLT (PHP4)' inserttext='xslt_process(|)' hint='(PHP 4>=4.0.3) mixed xslt_process(resource $xh, string $xmlcontainer, string $xslcontainer [, string $resultcontainer [, array $arguments [, array $parameters ]]]) - Perform an XSLT transformation.' flags='130'/>
<tag menu='X' submenu='XSLT (PHP4)' inserttext='xslt_set_base(|)' hint='(PHP 4>=4.0.5) void xslt_set_base(resource $xh, string $uri) - Set the base URI for all XSLT transformations.' flags='130'/>
<tag menu='X' submenu='XSLT (PHP4)' inserttext='xslt_set_encoding(|)' hint='(PHP 4>=4.0.5) void xslt_set_encoding(resource $xh, string $encoding) - Set the encoding for the parsing of XML documents.' flags='130'/>
<tag menu='X' submenu='XSLT (PHP4)' inserttext='xslt_set_error_handler(|)' hint='(PHP 4>=4.0.4) void xslt_set_error_handler(resource $xh, mixed $handler) - Set an error handler for a XSLT processor.' flags='130'/>
<tag menu='X' submenu='XSLT (PHP4)' inserttext='xslt_set_log(|)' hint='(PHP 4>=4.0.6) void xslt_set_log(resource $xh [, mixed $log]) - Set the log file to write log messages to.' flags='130'/>
<tag menu='X' submenu='XSLT (PHP4)' inserttext='xslt_set_object(|)' hint='(PHP 4>=4.3.0) bool xslt_set_object(resource $processor, object &amp;$obj) - Sets the object in which to resolve callback functions.' flags='130'/>
<tag menu='X' submenu='XSLT (PHP4)' inserttext='xslt_set_sax_handler(|)' hint='(PHP 4>=4.0.3) void xslt_set_sax_handler(resource $xh, array $handlers) - Set SAX handlers for a XSLT processor.' flags='130'/>
<tag menu='X' submenu='XSLT (PHP4)' inserttext='xslt_set_sax_handlers(|)' hint='(PHP 4>=4.0.6) void xslt_set_sax_handlers(resource $processor, array $handlers) - Set the SAX handlers to be called when the XML document gets processed.' flags='130'/>
<tag menu='X' submenu='XSLT (PHP4)' inserttext='xslt_set_scheme_handler(|)' hint='(PHP 4>=4.0.5) void xslt_set_scheme_handler(resource $xh, array $handlers) - Set Scheme handlers for a XSLT processor.' flags='130'/>
<tag menu='X' submenu='XSLT (PHP4)' inserttext='xslt_set_scheme_handlers(|)' hint='(PHP 4>=4.0.6) void xslt_set_scheme_handlers(resource $xh, array $handlers) - Set the scheme handlers for the XSLT processor.' flags='130'/>
<tag menu='X' submenu='XSLT (PHP4)' inserttext='xslt_setopt(|)' hint='(PHP 4>=4.3.0) mixed xslt_setopt(resource $processor, int $newmask) - Set options on a given xsl processor.' flags='130'/>
<tag menu='X' submenu='XSLTProcessor class' inserttext='XSLTProcessor::__construct(|)' hint='(PHP 5) Creates a new XSLTProcessor object.' flags='130'/>
<tag menu='X' submenu='XSLTProcessor class' inserttext='XSLTProcessor::getParameter(|)' hint='(PHP 5) string XSLTProcessor::getParameter(string $namespaceURI, string $localName) - Get value of a parameter.' flags='130'/>
<tag menu='X' submenu='XSLTProcessor class' inserttext='XSLTProcessor::hasExsltSupport()' hint='(PHP 5>=5.0.4) bool XSLTProcessor::hasExsltSupport(void) - Determine if PHP has EXSLT support.' flags='130'/>
<tag menu='X' submenu='XSLTProcessor class' inserttext='XSLTProcessor::importStylesheet(|)' hint='(PHP 5) void XSLTProcessor::importStylesheet(object $stylesheet) - Import stylesheet.' flags='130'/>
<tag menu='X' submenu='XSLTProcessor class' inserttext='XSLTProcessor::registerPHPFunctions(|)' hint='(PHP 5>=5.0.4) void XSLTProcessor::registerPHPFunctions([mixed $restrict]) - Enables the ability to use PHP functions as XSLT functions.' flags='130'/>
<tag menu='X' submenu='XSLTProcessor class' inserttext='XSLTProcessor::removeParameter(|)' hint='(PHP 5) bool XSLTProcessor::removeParameter(string $namespaceURI, string $localName) - Remove parameter.' flags='130'/>
<tag menu='X' submenu='XSLTProcessor class' inserttext='XSLTProcessor::setParameter(|)' hint='(PHP 5) bool XSLTProcessor::setParameter(string $namespace, string $name, string $value) - Set value for a parameter.' flags='130'/>
<tag menu='X' submenu='XSLTProcessor class' inserttext='XSLTProcessor::setProfiling(|)' hint='(PHP>=5.3.0) bool XSLTProcessor::setProfiling(string $filename) - Sets profiling output file.' flags='130'/>
<tag menu='X' submenu='XSLTProcessor class' inserttext='XSLTProcessor::transformToDoc(|)' hint='(PHP 5) DOMDocument XSLTProcessor::transformToDoc(DOMNode $doc) - Transform to a DOMDocument.' flags='130'/>
<tag menu='X' submenu='XSLTProcessor class' inserttext='XSLTProcessor::transformToUri(|)' hint='(PHP 5) int XSLTProcessor::transformToURI(DOMDocument $doc, string $uri) - Transform to URI.' flags='130'/>
<tag menu='X' submenu='XSLTProcessor class' inserttext='XSLTProcessor::transformToXML(|)' hint='(PHP 5) string XSLTProcessor::transformToXML(DOMDocument $doc) - Transform to XML.' flags='130'/>
<tag menu='Y' submenu='YAZ' inserttext='yaz_addinfo(|)' hint='(PHP 4>=4.0.1, PECL yaz>=0.9.0) string yaz_addinfo(resource $id) - Returns additional error information.' flags='130'/>
<tag menu='Y' submenu='YAZ' inserttext='yaz_ccl_conf(|)' hint='(PHP 4>=4.0.5, PECL yaz>=0.9.0) void yaz_ccl_conf(resource $id, array $config) - Configure CCL parser.' flags='130'/>
<tag menu='Y' submenu='YAZ' inserttext='yaz_ccl_parse(|)' hint='(PHP 4>=4.0.5, PECL yaz>=0.9.0) bool yaz_ccl_parse(resource $id, string $query, array &amp;$result) - Invoke CCL Parser.' flags='130'/>
<tag menu='Y' submenu='YAZ' inserttext='yaz_close(|)' hint='(PHP 4>=4.0.1, PECL yaz>=0.9.0) bool yaz_close(resource $id) - Close YAZ connection.' flags='130'/>
<tag menu='Y' submenu='YAZ' inserttext='yaz_connect(|)' hint='(PHP 4>=4.0.1, PECL yaz>=0.9.0) mixed yaz_connect(string $zurl [, mixed $options]) - Prepares for a connection to a Z39.50 server.' flags='130'/>
<tag menu='Y' submenu='YAZ' inserttext='yaz_database(|)' hint='(PHP 4>=4.0.6, PECL yaz>=0.9.0) bool yaz_database(resource $id, string $databases) - Specifies the databases within a session.' flags='130'/>
<tag menu='Y' submenu='YAZ' inserttext='yaz_element(|)' hint='(PHP 4>=4.0.1, PECL yaz>=0.9.0) bool yaz_element(resource $id, string $elementset) - Specifies Element-Set Name for retrieval.' flags='130'/>
<tag menu='Y' submenu='YAZ' inserttext='yaz_errno(|)' hint='(PHP 4>=4.0.1, PECL yaz>=0.9.0) int yaz_errno(resource $id) - Returns error number.' flags='130'/>
<tag menu='Y' submenu='YAZ' inserttext='yaz_error(|)' hint='(PHP 4>=4.0.1, PECL yaz>=0.9.0) string yaz_error(resource $id) - Returns error description.' flags='130'/>
<tag menu='Y' submenu='YAZ' inserttext='yaz_es_result(|)' hint='(PHP 4>=4.2.0, PECL yaz>=0.9.0) array yaz_es_result(resource $id) - Inspects Extended Services Result.' flags='130'/>
<tag menu='Y' submenu='YAZ' inserttext='yaz_hits(|)' hint='(PHP 4>=4.0.1, PECL yaz>=0.9.0) int yaz_hits(resource $id [, array &amp;$searchresult]) - Returns number of hits for last search.' flags='130'/>
<tag menu='Y' submenu='YAZ' inserttext='yaz_itemorder(|)' hint='(PHP 4>=4.0.5, PECL yaz>=0.9.0) void yaz_itemorder(resource $id, array $args) - Prepares for Z39.50 Item Order with an ILL-Request package.' flags='130'/>
<tag menu='Y' submenu='YAZ' inserttext='yaz_present(|)' hint='(PHP 4>=4.0.5, PECL yaz>=0.9.0) bool yaz_present(resource $id) - Prepares for retrieval (Z39.50 present).' flags='130'/>
<tag menu='Y' submenu='YAZ' inserttext='yaz_range(|)' hint='(PHP 4>=4.0.1, PECL yaz>=0.9.0) void yaz_range(resource $id, int $start, int $number) - Specifies a range of records to retrieve.' flags='130'/>
<tag menu='Y' submenu='YAZ' inserttext='yaz_record(|)' hint='(PHP 4>=4.0.1, PECL yaz>=0.9.0) string yaz_record(resource $id, int $pos, string $type) - Returns a record.' flags='130'/>
<tag menu='Y' submenu='YAZ' inserttext='yaz_scan(|)' hint='(PHP 4>=4.0.5, PECL yaz>=0.9.0) void yaz_scan(resource $id, string $type, string $startterm [, array $flags]) - Prepares for a scan.' flags='130'/>
<tag menu='Y' submenu='YAZ' inserttext='yaz_scan_result(|)' hint='(PHP 4>=4.0.5, PECL yaz>=0.9.0) array yaz_scan_result(resource $id [, array &amp;$result]) - Returns Scan Response result.' flags='130'/>
<tag menu='Y' submenu='YAZ' inserttext='yaz_schema(|)' hint='(PHP 4>=4.2.0, PECL yaz>=0.9.0) void yaz_schema(resource $id, string $schema) - Specifies schema for retrieval.' flags='130'/>
<tag menu='Y' submenu='YAZ' inserttext='yaz_search(|)' hint='(PHP 4>=4.0.1, PECL yaz>=0.9.0) bool yaz_search(resource $id, string $type, string $query) - Prepares for a search.' flags='130'/>
<tag menu='Y' submenu='YAZ' inserttext='yaz_sort(|)' hint='(PHP 4>=4.0.7, PECL yaz>=0.9.0) void yaz_sort(resource $id, string $criteria) - Sets sorting criteria.' flags='130'/>
<tag menu='Y' submenu='YAZ' inserttext='yaz_syntax(|)' hint='(PHP 4>=4.0.1, PECL yaz>=0.9.0) void yaz_syntax(resource $id, string $syntax) - Specifies the preferred record syntax for retrieval.' flags='130'/>
<tag menu='Y' submenu='YAZ' inserttext='yaz_wait(|)' hint='(PHP 4>=4.0.1, PECL yaz>=0.9.0) mixed yaz_wait([array &amp;$options]) - Wait for Z39.50 requests to complete.' flags='130'/>
<tag menu='Y' submenu='YP/NIS' inserttext='yp_all(|)' hint='(PHP 4>=4.0.6, PHP 5&lt;=5.0.5) void yp_all(string $domain, string $map, string $callback) - Traverse the map and call a function on each entry.' flags='130'/>
<tag menu='Y' submenu='YP/NIS' inserttext='yp_cat(|)' hint='(PHP 4>=4.0.6, PHP 5&lt;=5.0.5) array yp_cat(string $domain, string $map) - Return an array containing the entire map.' flags='130'/>
<tag menu='Y' submenu='YP/NIS' inserttext='yp_err_string(|)' hint='(PHP 4>=4.0.6, PHP 5&lt;=5.0.5) string yp_err_string(int $errorcode) - Returns the error string associated with the given error code.' flags='130'/>
<tag menu='Y' submenu='YP/NIS' inserttext='yp_errno()' hint='(PHP 4>=4.0.6, PHP 5&lt;=5.0.5) int yp_errno(void) - Returns the error code of the previous operation.' flags='130'/>
<tag menu='Y' submenu='YP/NIS' inserttext='yp_first(|)' hint='(PHP 4, PHP 5&lt;=5.0.5) array yp_first(string $domain, string $map) - Returns the first key-value pair from the named map.' flags='130'/>
<tag menu='Y' submenu='YP/NIS' inserttext='yp_get_default_domain()' hint="(PHP 4, PHP 5&lt;=5.0.5) string yp_get_default_domain(void) - Fetches the machine's default NIS domain." flags='130'/>
<tag menu='Y' submenu='YP/NIS' inserttext='yp_master(|)' hint='(PHP 4, PHP 5&lt;=5.0.5) string yp_master(string $domain, string $map) - Returns the machine name of the master NIS server for a map.' flags='130'/>
<tag menu='Y' submenu='YP/NIS' inserttext='yp_match(|)' hint='(PHP 4, PHP 5&lt;=5.0.5) string yp_match(string $domain, string $map, string $key) - Returns the matched line.' flags='130'/>
<tag menu='Y' submenu='YP/NIS' inserttext='yp_next(|)' hint='(PHP 4, PHP 5&lt;=5.0.5) array yp_next(string $domain, string $map, string $key) - Returns the next key-value pair in the named map.' flags='130'/>
<tag menu='Y' submenu='YP/NIS' inserttext='yp_order(|)' hint='(PHP 4, PHP 5&lt;=5.0.5) int yp_order(string $domain, string $map) - Returns the order number for a map.' flags='130'/>
<tag menu='Z' submenu='Zip' inserttext='zip_close(|)' hint='(PHP 4>=4.1.0, PHP 5>=5.2.0, PECL zip>=1.0.0) void zip_close(resource $zip) - Close a ZIP file archive.' flags='130'/>
<tag menu='Z' submenu='Zip' inserttext='zip_entry_close(|)' hint='(PHP 4>=4.1.0, PHP 5>=5.2.0, PECL zip>=1.0.0) bool zip_entry_close(resource $zip_entry) - Close a directory entry.' flags='130'/>
<tag menu='Z' submenu='Zip' inserttext='zip_entry_compressedsize(|)' hint='(PHP 4>=4.1.0, PHP 5>=5.2.0, PECL zip>=1.0.0) int zip_entry_compressedsize(resource $zip_entry) - Retrieve the compressed size of a directory entry.' flags='130'/>
<tag menu='Z' submenu='Zip' inserttext='zip_entry_compressionmethod(|)' hint='(PHP 4>=4.1.0, PHP 5>=5.2.0, PECL zip>=1.0.0) string zip_entry_compressionmethod(resource $zip_entry) - Retrieve the compression method of a directory entry.' flags='130'/>
<tag menu='Z' submenu='Zip' inserttext='zip_entry_filesize(|)' hint='(PHP 4>=4.1.0, PHP 5>=5.2.0, PECL zip>=1.0.0) int zip_entry_filesize(resource $zip_entry) - Retrieve the actual file size of a directory entry.' flags='130'/>
<tag menu='Z' submenu='Zip' inserttext='zip_entry_name(|)' hint='(PHP 4>=4.1.0, PHP 5>=5.2.0, PECL zip>=1.0.0) string zip_entry_name(resource $zip_entry) - Retrieve the name of a directory entry.' flags='130'/>
<tag menu='Z' submenu='Zip' inserttext='zip_entry_open(|)' hint='(PHP 4>=4.1.0, PHP 5>=5.2.0, PECL zip>=1.0.0) bool zip_entry_open(resource $zip, resource $zip_entry [, string $mode]) - Open a directory entry for reading.' flags='130'/>
<tag menu='Z' submenu='Zip' inserttext='zip_entry_read(|)' hint='(PHP 4>=4.1.0, PHP 5>=5.2.0, PECL zip>=1.0.0) string zip_entry_read(resource $zip_entry [, int $length]) - Read from an open directory entry.' flags='130'/>
<tag menu='Z' submenu='Zip' inserttext='zip_open(|)' hint='(PHP 4>=4.1.0, PHP 5>=5.2.0, PECL zip>=1.0.0) mixed zip_open(string $filename) - Open a ZIP file archive.' flags='130'/>
<tag menu='Z' submenu='Zip' inserttext='zip_read(|)' hint='(PHP 4>=4.1.0, PHP 5>=5.2.0, PECL zip>=1.0.0) mixed zip_read(resource $zip) - Read next entry in a ZIP file archive.' flags='130'/>
<tag menu='Z' submenu='ZipArchive class' inserttext='ZipArchive::addEmptyDir(|)' hint='(PHP 5>=5.2.0, PECL zip>=1.8.0) bool ZipArchive::addEmptyDir(string $dirname) - Add a new directory.' flags='130'/>
<tag menu='Z' submenu='ZipArchive class' inserttext='ZipArchive::addFile(|)' hint='(PHP 5>=5.2.0, PECL zip>=1.1.0) bool ZipArchive::addFile(string $filename [, string $localname]) - Adds a file to a ZIP archive from the given path.' flags='130'/>
<tag menu='Z' submenu='ZipArchive class' inserttext='ZipArchive::addFromString(|)' hint='(PHP 5>=5.2.0, PECL zip>=1.1.0) bool ZipArchive::addFromString(string $localname, string $contents) - Add a file to a ZIP archive using its contents.' flags='130'/>
<tag menu='Z' submenu='ZipArchive class' inserttext='ZipArchive::close()' hint='(PHP 5>=5.2.0, PECL zip>=1.1.0) bool ZipArchive::close(void) - Close the active archive (opened or newly created).' flags='130'/>
<tag menu='Z' submenu='ZipArchive class' inserttext='ZipArchive::deleteIndex(|)' hint='(PHP 5>=5.2.0, PECL zip>=1.5.0) bool ZipArchive::deleteIndex(int $index) - delete an entry in the archive using its index.' flags='130'/>
<tag menu='Z' submenu='ZipArchive class' inserttext='ZipArchive::deleteName(|)' hint='(PHP 5>=5.2.0, PECL zip>=1.5.0) bool ZipArchive::deleteName(string $name) - delete an entry in the archive using its name.' flags='130'/>
<tag menu='Z' submenu='ZipArchive class' inserttext='ZipArchive::extractTo(|)' hint='(PHP 5>=5.2.0, PECL zip>=1.1.0) bool ZipArchive::extractTo(string $destination [, mixed $entries]) - Extract the archive contents.' flags='130'/>
<tag menu='Z' submenu='ZipArchive class' inserttext='ZipArchive::getArchiveComment()' hint='(PHP 5>=5.2.0, PECL zip>=1.1.0) string ZipArchive::getArchiveComment(void) - Returns the Zip archive comment.' flags='130'/>
<tag menu='Z' submenu='ZipArchive class' inserttext='ZipArchive::getCommentIndex(|)' hint='(PHP 5>=5.2.0, PECL zip>=1.4.0) string ZipArchive::getCommentIndex(int $index [, int $flags]) - Returns the comment of an entry using the entry index.' flags='130'/>
<tag menu='Z' submenu='ZipArchive class' inserttext='ZipArchive::getCommentName(|)' hint='(PHP 5>=5.2.0, PECL zip>=1.4.0) string ZipArchive::getCommentName(string $name [, int $flags]) - Returns the comment of an entry using the entry name.' flags='130'/>
<tag menu='Z' submenu='ZipArchive class' inserttext='ZipArchive::getFromIndex(|)' hint='(PHP 5>=5.2.0, PECL zip>=1.3.0) mixed ZipArchive::getFromIndex(int $index [, int $flags]) - Returns the entry contents using its index.' flags='130'/>
<tag menu='Z' submenu='ZipArchive class' inserttext='ZipArchive::getFromName(|)' hint='(PHP 5>=5.2.0, PECL zip>=1.1.0) mixed ZipArchive::getFromName(string $name [, int $flags]) - Returns the entry contents using its name.' flags='130'/>
<tag menu='Z' submenu='ZipArchive class' inserttext='ZipArchive::getNameIndex(|)' hint='(PHP 5>=5.2.0, PECL zip>=1.5.0) string ZipArchive::getNameIndex(int $index) - Returns the name of an entry using its index.' flags='130'/>
<tag menu='Z' submenu='ZipArchive class' inserttext='ZipArchive::getStatusString()' hint='(PHP 5>=5.2.7) string ZipArchive::getStatusString(void) - Returns the status error message, system and/or zip messages.' flags='130'/>
<tag menu='Z' submenu='ZipArchive class' inserttext='ZipArchive::getStream(|)' hint='(PHP 5>=5.2.0, PECL zip>=1.1.0) resource ZipArchive::getStream(string $name) - Get a file handler to the entry defined by its name (read only).' flags='130'/>
<tag menu='Z' submenu='ZipArchive class' inserttext='ZipArchive::locateName(|)' hint='(PHP 5>=5.2.0, PECL zip>=1.5.0) mixed ZipArchive::locateName(string $name [, int $flags]) - Returns the index of the entry in the archive.' flags='130'/>
<tag menu='Z' submenu='ZipArchive class' inserttext='ZipArchive::open(|)' hint='(PHP 5>=5.2.0, PECL zip>=1.1.0) mixed ZipArchive::open(string $filename [, int $flags]) - Open a ZIP file archive.' flags='130'/>
<tag menu='Z' submenu='ZipArchive class' inserttext='ZipArchive::renameIndex(|)' hint='(PHP 5>=5.2.0, PECL zip>=1.5.0) bool ZipArchive::renameIndex(int $index, string $newname) - Renames an entry defined by its index.' flags='130'/>
<tag menu='Z' submenu='ZipArchive class' inserttext='ZipArchive::renameName(|)' hint='(PHP 5>=5.2.0, PECL zip>=1.5.0) bool ZipArchive::renameName(string $name, string $newname) - Renames an entry defined by its name.' flags='130'/>
<tag menu='Z' submenu='ZipArchive class' inserttext='ZipArchive::setArchiveComment(|)' hint='(PHP 5>=5.2.0, PECL zip>=1.4.0) mixed ZipArchive::setArchiveComment(string $comment) - Set the comment of a ZIP archive.' flags='130'/>
<tag menu='Z' submenu='ZipArchive class' inserttext='ZipArchive::setCommentIndex(|)' hint='(PHP 5>=5.2.0, PECL zip>=1.4.0) mixed ZipArchive::setCommentIndex(int $index, string $comment) - Set the comment of an entry defined by its index.' flags='130'/>
<tag menu='Z' submenu='ZipArchive class' inserttext='ZipArchive::setCommentName(|)' hint='(PHP 5>=5.2.0, PECL zip>=1.4.0) mixed ZipArchive::setCommentName(string $name, string $comment) - Set the comment of an entry defined by its name.' flags='130'/>
<tag menu='Z' submenu='ZipArchive class' inserttext='ZipArchive::statIndex(|)' hint='(PHP 5>=5.2.0, PECL zip>=1.1.0) mixed ZipArchive::statIndex(int $index [, int $flags]) - Get the details of an entry defined by its index.' flags='130'/>
<tag menu='Z' submenu='ZipArchive class' inserttext='ZipArchive::statName(|)' hint='(PHP 5>=5.2.0, PECL zip>=1.5.0) mixed ZipArchive::statName(name $name [, int $flags]) - Get the details of an entry defined by its name.' flags='130'/>
<tag menu='Z' submenu='ZipArchive class' inserttext='ZipArchive::unchangeAll()' hint='(PHP 5>=5.2.0, PECL zip>=1.1.0) mixed ZipArchive::unchangeAll(void) - Undo all changes done in the archive.' flags='130'/>
<tag menu='Z' submenu='ZipArchive class' inserttext='ZipArchive::unchangeArchive()' hint='(PHP 5>=5.2.0, PECL zip>=1.1.0) mixed ZipArchive::unchangeArchive(void) - Revert all global changes done in the archive.' flags='130'/>
<tag menu='Z' submenu='ZipArchive class' inserttext='ZipArchive::unchangeIndex(|)' hint='(PHP 5>=5.2.0, PECL zip>=1.1.0) mixed ZipArchive::unchangeIndex(int $index) - Revert all changes done to an entry at the given index.' flags='130'/>
<tag menu='Z' submenu='ZipArchive class' inserttext='ZipArchive::unchangeName(|)' hint='(PHP 5>=5.2.0, PECL zip>=1.5.0) mixed ZipArchive::unchangeName(string $name) - Revert all changes done to an entry with the given name.' flags='130'/>
<tag menu='Z' submenu='Zlib' inserttext='gzclose(|)' hint='(PHP 4, PHP 5) bool gzclose(resource $zp) - Close an open gz-file pointer.' flags='130'/>
<tag menu='Z' submenu='Zlib' inserttext='gzcompress(|)' hint='(PHP 4>=4.0.1, PHP 5) string gzcompress(string $data [, int $level=-1]) - Compress a string.' flags='130'/>
<tag menu='Z' submenu='Zlib' inserttext='gzdeflate(|)' hint='(PHP 4>=4.0.4, PHP 5) string gzdeflate(string $data [, int $level=-1]) - Deflate a string.' flags='130'/>
<tag menu='Z' submenu='Zlib' inserttext='gzencode(|)' hint='(PHP 4>=4.0.4, PHP 5) string gzencode(string $data [, int $level=-1 [, int $encoding_mode=FORCE_GZIP ]]) - Create a gzip compressed string.' flags='130'/>
<tag menu='Z' submenu='Zlib' inserttext='gzeof(|)' hint='(PHP 4, PHP 5) int gzeof(resource $zp) - Test for EOF on a gz-file pointer.' flags='130'/>
<tag menu='Z' submenu='Zlib' inserttext='gzfile(|)' hint='(PHP 4, PHP 5) array gzfile(string $filename [, int $use_include_path=0]) - Read entire gz-file into an array.' flags='130'/>
<tag menu='Z' submenu='Zlib' inserttext='gzgetc(|)' hint='(PHP 4, PHP 5) string gzgetc(resource $zp) - Get character from gz-file pointer.' flags='130'/>
<tag menu='Z' submenu='Zlib' inserttext='gzgets(|)' hint='(PHP 4, PHP 5) string gzgets(resource $zp, int $length) - Get line from file pointer.' flags='130'/>
<tag menu='Z' submenu='Zlib' inserttext='gzgetss(|)' hint='(PHP 4, PHP 5) string gzgetss(resource $zp, int $length [, string $allowable_tags]) - Get line from gz-file pointer and strip HTML tags.' flags='130'/>
<tag menu='Z' submenu='Zlib' inserttext='gzinflate(|)' hint='(PHP 4>=4.0.4, PHP 5) string gzinflate(string $data [, int $length=0]) - Inflate a deflated string.' flags='130'/>
<tag menu='Z' submenu='Zlib' inserttext='gzopen(|)' hint='(PHP 4, PHP 5) resource gzopen(string $filename, string $mode [, int $use_include_path=0]) - Open gz-file.' flags='130'/>
<tag menu='Z' submenu='Zlib' inserttext='gzpassthru(|)' hint='(PHP 4, PHP 5) int gzpassthru(resource $zp) - Output all remaining data on a gz-file pointer.' flags='130'/>
<tag menu='Z' submenu='Zlib' inserttext='gzputs(|)' hint='(PHP 4, PHP 5) Alias of gzwrite().' flags='130'/>
<tag menu='Z' submenu='Zlib' inserttext='gzread(|)' hint='(PHP 4, PHP 5) string gzread(resource $zp, int $length) - Binary-safe gz-file read.' flags='130'/>
<tag menu='Z' submenu='Zlib' inserttext='gzrewind(|)' hint='(PHP 4, PHP 5) bool gzrewind(resource $zp) - Rewind the position of a gz-file pointer.' flags='130'/>
<tag menu='Z' submenu='Zlib' inserttext='gzseek(|)' hint='(PHP 4, PHP 5) int gzseek(resource $zp, int $offset [, int $whence=SEEK_SET]) - Seek on a gz-file pointer.' flags='130'/>
<tag menu='Z' submenu='Zlib' inserttext='gztell(|)' hint='(PHP 4, PHP 5) int gztell(resource $zp) - Tell gz-file pointer read/write position.' flags='130'/>
<tag menu='Z' submenu='Zlib' inserttext='gzuncompress(|)' hint='(PHP 4>=4.0.1, PHP 5) string gzuncompress(string $data [, int $length=0]) - Uncompress a compressed string.' flags='130'/>
<tag menu='Z' submenu='Zlib' inserttext='gzwrite(|)' hint='(PHP 4, PHP 5) int gzwrite(resource $zp, string $string [, int $length]) - Binary-safe gz-file write.' flags='130'/>
<tag menu='Z' submenu='Zlib' inserttext='readgzfile(|)' hint='(PHP 4, PHP 5) int readgzfile(string $filename [, int $use_include_path=0]) - Output a gz-file.' flags='130'/>
<tag menu='Z' submenu='Zlib' inserttext='zlib_get_coding_type()' hint='(PHP 4>=4.3.2, PHP 5) string zlib_get_coding_type(void) - Returns the coding type used for output compression.' flags='130'/>

<!-- END MAIN CONTENT -->
<!-- END MAIN CONTENT -->

</csetaginserterconfiguration>
